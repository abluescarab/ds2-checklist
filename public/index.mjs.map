{
  "version": 3,
  "sources": ["../node_modules/.pnpm/sass-material-design@https+_34510f05318842aa1783c724cec7ad57/node_modules/sass-material-design/src/ts/history.mts", "../node_modules/.pnpm/sass-material-design@https+_34510f05318842aa1783c724cec7ad57/node_modules/sass-material-design/src/ts/timed-queue.mts", "../node_modules/.pnpm/sass-material-design@https+_34510f05318842aa1783c724cec7ad57/node_modules/sass-material-design/src/ts/utils.mts", "../node_modules/.pnpm/sass-material-design@https+_34510f05318842aa1783c724cec7ad57/node_modules/sass-material-design/src/ts/components/menu.mts", "../node_modules/.pnpm/sass-material-design@https+_34510f05318842aa1783c724cec7ad57/node_modules/sass-material-design/src/ts/components/tooltip.mts", "../node_modules/.pnpm/sass-material-design@https+_34510f05318842aa1783c724cec7ad57/node_modules/sass-material-design/src/ts/components/checkbox.mts", "../node_modules/.pnpm/sass-material-design@https+_34510f05318842aa1783c724cec7ad57/node_modules/sass-material-design/src/ts/components/segmented.mts", "../node_modules/.pnpm/sass-material-design@https+_34510f05318842aa1783c724cec7ad57/node_modules/sass-material-design/src/ts/components/switch.mts", "../node_modules/.pnpm/sass-material-design@https+_34510f05318842aa1783c724cec7ad57/node_modules/sass-material-design/src/ts/components/table.mts", "../node_modules/.pnpm/sass-material-design@https+_34510f05318842aa1783c724cec7ad57/node_modules/sass-material-design/src/ts/events.mts", "../node_modules/.pnpm/sass-material-design@https+_34510f05318842aa1783c724cec7ad57/node_modules/sass-material-design/src/ts/components/tabs.mts", "../node_modules/.pnpm/sass-material-design@https+_34510f05318842aa1783c724cec7ad57/node_modules/sass-material-design/src/ts/components/text-field.mts", "../node_modules/.pnpm/sass-material-design@https+_34510f05318842aa1783c724cec7ad57/node_modules/sass-material-design/src/ts/components/tree.mts", "../node_modules/.pnpm/sass-material-design@https+_34510f05318842aa1783c724cec7ad57/node_modules/sass-material-design/src/ts/index.mts", "../src/ts/constants.mts", "../src/ts/dialogs/clear.mts", "../src/ts/dialogs/reset.mts", "../src/ts/utils.mts", "../src/ts/dialogs/settings.mts", "../src/ts/dialogs/dialogs.mts", "../src/ts/index.mts"],
  "sourcesContent": ["/**\n * @file\n */\n\nexport class History<T> {\n    #last: T[];\n    #current: T | undefined;\n\n    constructor(value?: T) {\n        this.#last = [];\n        this.#current = value;\n    }\n\n    clear() {\n        // check ts-test-web for best way to clear array\n        this.#current = undefined;\n    }\n\n    is(value: T) {\n        return this.#current == value;\n    }\n\n    set(value: T | undefined) {\n        if (this.#current) {\n            this.#last.push(this.#current);\n        }\n\n        this.#current = value;\n    }\n\n    was(value: T) {\n        return this.#last.includes(value);\n    }\n\n    wasLast(value: T) {\n        return this.#last.slice(-1) == value;\n    }\n}\n", "/**\n * @file Implements a queue which runs a callback function after a given delay.\n */\n\n/**\n * An item in a timed queue.\n * @template T\n */\nexport type TimedQueueItem<T> = {\n    callback: (item: TimedQueueItem<T>) => void;\n    data: T;\n    delay: number;\n};\n\n/**\n * A timed queue which runs a callback function after a given delay.\n * @template T\n */\nexport class TimedQueue<T> {\n    #queue: { item: TimedQueueItem<T>; timeout: number }[] = [];\n\n    /**\n     * Gets the length of the queue.\n     * @returns number of items left in the queue\n     */\n    length = () => this.#queue.length;\n\n    /**\n     * Pushes an item or items onto the back of the queue.\n     * @param items - items to push\n     */\n    push(...items: TimedQueueItem<T>[]): void {\n        for (const item of items) {\n            this.#queue.push({\n                item: item,\n                timeout: setTimeout(() => {\n                    item.callback(item);\n                    this.remove(item);\n                }, item.delay ?? 0),\n            });\n        }\n    }\n\n    /**\n     * Pops an item from the front or back of the queue.\n     * @param front - whether to pop from the front of the queue\n     * @returns popped item\n     */\n    pop(front: boolean = false): TimedQueueItem<T> | undefined {\n        const shiftOrPop = front ? this.#queue.shift : this.#queue.pop;\n        const item = shiftOrPop();\n\n        clearTimeout(item?.timeout);\n        return item?.item;\n    }\n\n    /**\n     * Clears all items from the queue.\n     * @param clearCallback - function run on each cleared item\n     * @returns number of cleared items\n     */\n    clear(clearCallback?: (item: TimedQueueItem<T>) => void): number {\n        const cleared = this.#queue.length;\n\n        for (const item of this.#queue) {\n            clearTimeout(item.timeout);\n\n            if (clearCallback) {\n                clearCallback(item.item);\n            }\n        }\n\n        this.#queue.splice(0, this.#queue.length);\n        return cleared;\n    }\n\n    /**\n     * Removes an item from the queue.\n     * @param item - item to remove\n     */\n    remove(item: TimedQueueItem<T>): void {\n        const index = this.#queue.findIndex((q) => q.item == item);\n\n        if (index > -1) {\n            clearTimeout(this.#queue[index]!.timeout);\n            this.#queue.splice(index, 1);\n        }\n    }\n}\n", "/**\n * @file Helper file with utility functions.\n */\n\n/* -----------------------------------------------------------------------------\n * Dataset helpers\n * -------------------------------------------------------------------------- */\n/**\n * Cycles a data attribute on an element between the given values.\n * @param element - element with data value\n * @param data - data attribute name\n * @param values - values to cycle\n * @returns new data value\n */\nexport function cycleData(\n    element: HTMLElement,\n    data: string,\n    ...values: string[]\n): string {\n    const dataName = `md${capitalize(data)}`;\n    const dataValue = element.dataset[dataName];\n    let index = 0;\n\n    if (dataValue != null) {\n        index = (values.indexOf(dataValue) + 1) % values.length;\n    }\n\n    const newValue = values[index]!;\n    element.dataset[dataName] = newValue;\n    return newValue;\n}\n\n/**\n * Cycles an element between the given themes.\n * @param element - element to theme\n * @param themes - theme names\n * @returns new theme\n */\nexport function cycleThemes(element: HTMLElement, ...themes: string[]): string {\n    return cycleData(element, \"theme\", ...themes);\n}\n\n/**\n * Sets the theme on the given element.\n * @param element - element to theme\n * @param theme - theme to change to\n * @returns new theme\n */\nexport function setTheme(element: HTMLElement, theme: string = \"\"): string {\n    return cycleThemes(element, theme);\n}\n\n/* -----------------------------------------------------------------------------\n * HTML helpers\n * -------------------------------------------------------------------------- */\n/**\n * Gets the index of an element among its siblings.\n * @param element - element with a parent\n * @returns index in `parentElement.children`\n */\nexport function childIndex(element: Element | null): number {\n    if (!element) {\n        return -1;\n    }\n\n    return Array.prototype.indexOf.call(\n        element.parentElement?.children,\n        element\n    );\n}\n\n/**\n * Gets the closest parent with the given class.\n * @param element - child element\n * @param parentClass - class to search for\n * @param forceStopAtClass - if not found, stop when reaching this class\n * @param includeSelf - whether to check if the current element has the class\n * @returns closest parent with class\n */\nexport function getParentByClassName(\n    element: Element,\n    parentClass: string,\n    forceStopAtClass: string = \"\",\n    includeSelf: boolean = true\n): Element | null {\n    if (includeSelf) {\n        if (element.classList.contains(parentClass)) {\n            return element;\n        }\n\n        if (forceStopAtClass && element.classList.contains(forceStopAtClass)) {\n            return null;\n        }\n    }\n\n    if (!element.parentElement) {\n        return null;\n    }\n\n    return getParentByClassName(\n        element.parentElement,\n        parentClass,\n        forceStopAtClass,\n        true\n    );\n}\n\n/**\n * Wraps an element in the specified tag.\n * @param element - element to wrap\n * @param tag - tag to wrap with\n * @param childrenOnly - whether to wrap only the element's children\n * @returns wrapper element\n */\nexport function wrap(\n    element: Element,\n    tag: string,\n    childrenOnly: boolean = false\n): HTMLElement {\n    const wrapper = document.createElement(tag);\n\n    if (childrenOnly) {\n        while (element.firstChild) {\n            wrapper.appendChild(element.firstChild);\n        }\n\n        element.appendChild(wrapper);\n    } else {\n        element.insertAdjacentElement(\"beforebegin\", wrapper);\n        wrapper.appendChild(element);\n    }\n\n    return wrapper;\n}\n\n/* -----------------------------------------------------------------------------\n * Primitive type helpers\n * -------------------------------------------------------------------------- */\n/**\n * Capitalizes the first letter of a string.\n * @param str - string to modify\n * @returns capitalized string\n */\nexport function capitalize(str: string): string {\n    return str.charAt(0).toLocaleUpperCase() + str.slice(1);\n}\n\n/**\n * Clamps a value between a minimum and maximum.\n * @param value - value to clamp between min and max\n * @param min - minimum allowed value\n * @param max - maximum allowed value\n * @returns value between min and max\n * @throws {RangeError} Minimum must be smaller than maximum.\n */\nexport function clamp(value: number, min: number, max: number) {\n    if (min >= max) {\n        throw RangeError(`Minimum must be smaller than maximum.`);\n    }\n\n    return value <= min ? min : value >= max ? max : value;\n}\n\n/**\n * Joins a series of strings in order.\n * @param strings - strings to join\n * @returns joined strings\n */\nexport function join(...strings: string[]): string {\n    return strings.join(\"\");\n}\n\n/**\n * Converts a string to a selector in the form \"element-selector\".\n * @param str - string to convert\n * @returns string with whitespace and non-word characters replaced\n */\nexport function stringToSelector(str: string): string {\n    // shortcut if string is empty\n    if (!str) {\n        return str;\n    }\n\n    return str\n        .replaceAll(/[^\\w\\s]/g, \"\") // non-whitespace, non-word characters\n        .replaceAll(/([a-z])([A-Z])|\\s/g, \"$1-$2\") // whitespace or uppercase after lowercase\n        .toLowerCase();\n}\n", "/**\n * @file Implementation file for Material Design menu components.\n */\n\nimport { History } from \"../history.mjs\";\nimport { TimedQueue } from \"../timed-queue.mjs\";\nimport { getParentByClassName } from \"../utils.mjs\";\n\nconst queue: TimedQueue<HTMLElement> = new TimedQueue();\nconst initialized = new Map<\n    HTMLElement,\n    {\n        parent: Element | null;\n        visibleSubmenus: Set<HTMLElement>;\n    }\n>();\n\nlet lastMouseOver: Element | null = null;\nlet lastMouseOut: Element | null = null;\n\n/**\n * Hides a menu.\n * @param menu - menu to hide if not hovered over\n * @param immediate - whether to hide without a delay\n */\nexport function hide(menu: HTMLElement, immediate: boolean = false): void {\n    queue.push({\n        callback: (item) => {\n            if (item.data.dataset.mdHovered == undefined) {\n                item.data.classList.remove(\"md-menu--visible\");\n\n                if (initialized.has(menu)) {\n                    initialized.get(item.data)!.parent = null;\n                }\n            }\n        },\n        delay: immediate ? 0 : 500,\n        data: menu,\n    });\n}\n\n/**\n * Hides all visible menus.\n */\nexport function hideAll(): void {}\n\n/**\n * Shows a menu next to its parent.\n * @param parent - menu parent element\n * @param menu - menu to show\n * @param immediate - whether to show the menu without a delay\n */\nexport function show(\n    parent: Element,\n    menu: HTMLElement,\n    immediate: boolean = false\n): void {\n    move(parent, menu);\n    queue.clear((item) => item.data.classList.remove(\"md-menu--visible\"));\n\n    queue.push({\n        callback: (item) => {\n            item.data.classList.add(\"md-menu--visible\");\n\n            if (initialized.has(menu)) {\n                initialized.get(menu)!.parent = parent;\n            }\n        },\n        data: menu,\n        delay: immediate ? 0 : 500,\n    });\n}\n\n/**\n * Initializes a menu's parent.\n * @param parent - element which controls a menu\n */\nexport function initialize(parent: HTMLElement) {\n    if (!parent.dataset.mdMenu) {\n        return;\n    }\n\n    const menu = document.getElementById(parent.dataset.mdMenu);\n\n    if (!menu) {\n        return;\n    }\n\n    parent.addEventListener(\"click\", () => {\n        if (initialized.get(menu)?.parent == parent) {\n            hide(menu, true);\n        } else {\n            show(parent, menu, true);\n        }\n    });\n\n    if (initialized.has(menu)) {\n        return;\n    }\n\n    const history = new History();\n\n    menu.addEventListener(\"mouseover\", (e) => {\n        if (!(e.target instanceof Element)) {\n            return;\n        }\n\n        const item = getParentByClassName(e.target, \"md-menu__item\", \"md-menu\");\n\n        if (!(item instanceof HTMLElement) || history.is(item)) {\n            return;\n        }\n\n        console.log(\"mouse over\");\n\n        if (item.parentElement?.classList.contains(\"md-menu__submenu\")) {\n            item.parentElement.dataset.mdHovered = \"\";\n        }\n\n        const submenu = item.getElementsByClassName(\"md-menu__submenu\")[0];\n\n        if (submenu instanceof HTMLElement) {\n            show(item, submenu);\n            initialized.get(menu)?.visibleSubmenus.add(submenu);\n        }\n\n        history.set(item);\n    });\n\n    menu.addEventListener(\"mouseout\", (e) => {\n        if (!(e.target instanceof Element)) {\n            return;\n        }\n\n        const item = getParentByClassName(e.target, \"md-menu__item\", \"md-menu\");\n\n        if (\n            !(item instanceof HTMLElement) ||\n            lastMouseOver != item ||\n            lastMouseOut == item\n        ) {\n            return;\n        }\n\n        console.log(\"mouse out\");\n\n        if (item.parentElement?.classList.contains(\"md-menu__submenu\")) {\n            delete item.parentElement.dataset.mdHovered;\n        }\n\n        const submenu = item.getElementsByClassName(\"md-menu__submenu\")[0];\n\n        if (submenu instanceof HTMLElement) {\n            hide(submenu);\n            initialized.get(menu)?.visibleSubmenus.delete(submenu);\n        }\n\n        lastMouseOut = item;\n    });\n\n    const submenus = menu.getElementsByClassName(\"md-menu__submenu\");\n\n    for (const submenu of submenus) {\n        const parent = submenu.parentElement;\n        const arrow: HTMLElement =\n            parent?.querySelector(\".md-menu__label + .md-menu__icon\") ??\n            document.createElement(\"span\");\n\n        arrow.classList.add(\"md-menu__icon\");\n        arrow.textContent = \"arrow_right\";\n\n        if (!arrow.parentElement) {\n            parent\n                ?.getElementsByClassName(\"md-menu__label\")[0]\n                ?.insertAdjacentElement(\"afterend\", arrow);\n        }\n    }\n\n    initialized.set(menu, {\n        parent: null,\n        visibleSubmenus: new Set(),\n    });\n}\n\nfunction move(parent: Element, menu: HTMLElement): void {\n    const menuRect = menu.getBoundingClientRect();\n    const parentRect = parent.getBoundingClientRect();\n    const parentMenuRect = menu.parentElement?.getBoundingClientRect();\n    const margin = 48;\n    const padding = 16;\n\n    let left = 0;\n    let top = 0;\n\n    if (menu.classList.contains(\"md-menu__submenu\")) {\n        left = parentMenuRect?.right ?? parentRect.right;\n        top = parentMenuRect?.top ?? parentRect.top;\n\n        // if the menu overflows the right side, move over\n        if (left + menuRect.width > window.innerWidth) {\n            left = (parentMenuRect?.left ?? parentRect.left) - menuRect.width;\n        }\n\n        // if the menu overflows the left side, move over\n        if (left < 0) {\n            left = margin;\n        }\n    } else {\n        left = parentRect.left + padding;\n        top = parentRect.bottom;\n\n        // if the menu overflows the right side, move over\n        if (left + menuRect.width > window.innerWidth) {\n            left = parentRect.right - menuRect.width - padding;\n        }\n    }\n\n    menu.style.left = `${left}px`;\n    menu.style.top = `${top}px`;\n}\n\n/*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\n// // // // key: menu, value: opening element\n// // // const visible = new Map<HTMLElement, Element>();\n\n// // // TODO: fix showing submenus\n// // const menus = new BiMap<HTMLElement, Element>();\n\n// // /**\n// //  * Moves a menu based on its parent's location.\n// //  * @param menu - menu to move\n// //  * @param parent - parent menu\n// //  */\n// // export function move(menu: HTMLElement, parent: Element): void {\n// //     const menuRect = menu.getBoundingClientRect();\n// //     const parentRect = parent?.getBoundingClientRect();\n// //     const parentMenuRect = parent?.parentElement?.getBoundingClientRect();\n// //     const margin = 48;\n// //     const padding = 8;\n\n// //     let left = 0;\n// //     let top = 0;\n// //     let bottom: number | null = null;\n// //     let above = false;\n\n// //     if (menu.classList.contains(\"md-menu__submenu\")) {\n// //         left = parentMenuRect?.right ?? parentRect.right;\n// //         top = parentRect.top;\n// //     } else {\n// //         left = parentRect.left + padding;\n// //         top = parentRect.bottom;\n\n// //         // if the menu overflows the right side, move over\n// //         if (left + menuRect.width > window.innerWidth) {\n// //             left = parentRect.right - menuRect.width - padding;\n// //         }\n\n// //         // if the parent element is on the bottom half of the page, move the\n// //         // menu to the top\n// //         if (parentRect.top + parentRect.height / 2 > window.innerHeight / 2) {\n// //             top = parentRect.top - menuRect.height;\n// //             above = true;\n// //         }\n// //     }\n\n// //     //     if (left + menuRect.width > window.innerWidth) {\n// //     //         left = window.innerWidth - menuRect.width;\n// //     //     }\n\n// //     //     if (left == parentMenuRect?.left) {\n// //     //         left = parentMenuRect.left - menuRect.width;\n// //     //     }\n\n// //     // if the menu overflows the bottom, add a margin\n// //     if (top + menuRect.height + margin > window.innerHeight) {\n// //         bottom = margin;\n// //     }\n\n// //     // if the menu overflows the top, add a margin\n// //     if (above && top < margin) {\n// //         // TODO: is above set with submenus?\n// //         top = margin;\n// //         bottom = window.innerHeight - parentRect.top;\n// //     }\n\n// //     menu.style.left = `${left}px`;\n// //     menu.style.top = `${top}px`;\n// //     menu.style.bottom = bottom ? `${bottom}px` : \"auto\";\n// // }\n\n// // /**\n// //  * Initializes a menu's event listeners and maximum height.\n// //  * @param menu - menu to initialize\n// //  */\n// // function initializeMenu(menu: HTMLElement): void {\n// //     const menuRect = menu.getBoundingClientRect();\n// //     menu.style.maxHeight = `${menuRect.height - 16}px`;\n\n// //     menu.addEventListener(\"mouseover\", (e) => {\n// //         if (!(e.target instanceof Element)) {\n// //             return;\n// //         }\n\n// //         // TODO: check if submenu parent and show submenu if yes\n// //         const item = getParentByClassName(\n// //             e.target,\n// //             \"md-menu__item\",\n// //             \"md-menu\",\n// //             true\n// //         );\n\n// //         const submenu = item?.getElementsByClassName(\"md-menu__submenu\")[0];\n\n// //         if (!item || !(submenu instanceof HTMLElement)) {\n// //             return;\n// //         }\n\n// //         show(submenu, item);\n// //     });\n\n// //     menu.addEventListener(\"mouseout\", (e) => {\n// //         // TODO: check if submenu parent and hide submenu if yes\n// //         if (!(e.target instanceof HTMLElement)) {\n// //             return;\n// //         }\n\n// //         if (e.target.classList.contains(\"md-menu__submenu\")) {\n// //             hide(e.target);\n// //         }\n// //     });\n\n// //     // if (menu.classList.contains(\"md-menu__submenu\")) {\n// //     //     menu.addEventListener(\"mouseenter\", () => {\n// //     //         menu.dataset.mdHovered = \"\";\n// //     //     });\n\n// //     //     menu.addEventListener(\"mouseleave\", () => {\n// //     //         delete menu.dataset.mdHovered;\n// //     //         hide(menu);\n// //     //     });\n// //     // }\n// // }\n\n// // /**\n// //  * Hides a menu.\n// //  * @param menu - menu to hide\n// //  * @param force - whether to ignore the hover state of the menu\n// //  */\n// // export function hide(menu: HTMLElement, force: boolean = false): void {\n// //     // setTimeout(() => {\n// //     //     if (force || menu.dataset.mdHovered == undefined) {\n// //     menu.classList.remove(\"md-menu--visible\");\n// //     menus.delete(menu);\n// //     // visible.delete(menu);\n// //     //     }\n// //     // }, 50); // ensure user has time to hover over submenu\n// // }\n\n// // /**\n// //  * Hides all visible menus.\n// //  * @param force - whether to ignore the hover state of menus\n// //  */\n// // export function hideAll(force: boolean = false): void {\n// //     for (const menu of document.getElementsByClassName(\"md-menu--visible\")) {\n// //         if (menu instanceof HTMLElement) {\n// //             hide(menu, force);\n// //         }\n// //     }\n\n// //     // if (visible.size == 0) {\n// //     //     return;\n// //     // }\n\n// //     // for (const menu of visible.keys()) {\n// //     //     hide(menu, force);\n// //     // }\n\n// //     // visible.clear();\n// // }\n\n// // /**\n// //  * Shows a menu.\n// //  * @param menu - menu to show\n// //  * @param parent - element that controls the menu\n// //  */\n// // export function show(menu: HTMLElement, parent: Element): void {\n// //     move(menu, parent);\n// //     menu.classList.add(\"md-menu--visible\");\n// //     menus.delete(menu);\n// //     // visible.set(menu, parent);\n// // }\n\n// // /**\n// //  * Initializes a menu.\n// //  * @param menu - menu to initialize\n// //  */\n// // export function initialize(menu: HTMLElement): void {\n// //     if (!menu.classList.contains(\"md-menu\")) {\n// //         return;\n// //     }\n\n// //     const parents = document.querySelectorAll(`[data-md-menu=${menu.id}]`);\n\n// //     // if menu is not bound to anything, skip initializing\n// //     if (parents.length == 0) {\n// //         return;\n// //     }\n\n// //     parents.forEach((el) => {\n// //         el.addEventListener(\"click\", () => {\n// //             // if (visible.has(menu) && visible.get(menu) == el) {\n// //             if (menus.get(menu) == el) {\n// //                 hide(menu, true);\n// //             } else {\n// //                 show(menu, el);\n// //             }\n// //         });\n// //     });\n\n// //     initializeMenu(menu);\n\n// //     const submenus = menu.getElementsByClassName(\"md-menu__submenu\");\n\n// //     // TODO: finish implementing menu\n// //     for (const submenu of submenus) {\n// //         const parent = submenu.previousElementSibling;\n// //         const arrow: HTMLElement =\n// //             parent?.querySelector(\".md-menu__label + .md-menu__icon\") ??\n// //             document.createElement(\"span\");\n\n// //         arrow.classList.add(\"md-menu__icon\");\n// //         arrow.textContent = \"arrow_right\";\n\n// //         if (!arrow.parentElement) {\n// //             parent?.insertAdjacentElement(\"afterend\", arrow);\n// //         }\n\n// //         // initializeMenu(submenu);\n// //     }\n// // }\n", "/**\n * @file Implementation file for Material Design tooltips.\n */\n\nimport { TimedQueue } from \"../timed-queue.mjs\";\nimport { getParentByClassName } from \"../utils.mjs\";\n\nconst queue: TimedQueue<HTMLElement> = new TimedQueue();\nconst initialized: Element[] = [];\n\n/**\n * Moves a tooltip to a location based on its parent.\n * @param parent - element that controls the tooltip\n * @param tooltip - tooltip to move\n * @param inAppBar - whether the parent is inside an app bar\n */\nfunction move(parent: Element, tooltip: HTMLElement, inAppBar: boolean): void {\n    const parentRect = parent.getBoundingClientRect();\n    const tooltipRect = tooltip.getBoundingClientRect();\n    const padding = 8;\n\n    const aboveParent = parentRect.top - tooltipRect.height - padding;\n    const belowParent = parentRect.bottom + padding;\n\n    // center the tooltip above the parent\n    let left = parentRect.left + parentRect.width / 2 - tooltipRect.width / 2;\n    let top = inAppBar ? belowParent : aboveParent;\n\n    // if the tooltip is rich, move to the bottom right corner of the parent\n    if (tooltip.classList.contains(\"md-tooltip--rich\")) {\n        left = parentRect.right + padding;\n        top = belowParent;\n    }\n\n    // if the tooltip overflows the right side, move it slightly over\n    if (left + tooltipRect.width > window.innerWidth) {\n        left = window.innerWidth - tooltipRect.width - padding;\n    }\n    // if the tooltip overflows the left side, move it slightly over\n    else if (left < 0) {\n        left = padding;\n    }\n\n    // if the tooltip overflows the bottom, move it to the top\n    if (top + tooltipRect.height > window.innerHeight) {\n        top = aboveParent;\n    }\n    // if the tooltip overflows the top, move it to the bottom\n    else if (top < 0) {\n        top = belowParent;\n    }\n\n    tooltip.style.left = `${left}px`;\n    tooltip.style.top = `${top}px`;\n}\n\n/**\n * Hides the given tooltip.\n * @param tooltip - tooltip to hide\n * @param immediate - whether to skip delay\n */\nexport function hide(tooltip: HTMLElement, immediate: boolean = false): void {\n    queue.push({\n        callback: (item) => {\n            if (item.data.dataset.mdHovered == undefined) {\n                item.data.classList.remove(\"md-tooltip--visible\");\n            }\n        },\n        delay: immediate ? 0 : 1500,\n        data: tooltip,\n    });\n}\n\n/**\n * Hides all visible tooltips and shows the given tooltip.\n * @param parent - element that controls the tooltip\n * @param tooltip - tooltip to show\n * @param immediate - whether to skip delay\n */\nexport function show(\n    parent: Element,\n    tooltip: HTMLElement,\n    immediate: boolean = false\n): void {\n    const parentInAppBar = getParentByClassName(parent, \"md-app-bar\") != null;\n\n    move(parent, tooltip, parentInAppBar);\n    queue.clear((item) => item.data.classList.remove(\"md-tooltip--visible\"));\n\n    queue.push({\n        callback: (item) => item.data.classList.add(\"md-tooltip--visible\"),\n        data: tooltip,\n        delay: immediate ? 0 : 500,\n    });\n}\n\n/**\n * Initializes a tooltip's parent.\n * @param parent - element which controls a tooltip\n */\nexport function initialize(parent: HTMLElement): void {\n    if (!parent.dataset.mdTooltip) {\n        return;\n    }\n\n    const tooltip = document.getElementById(parent.dataset.mdTooltip);\n\n    if (!tooltip) {\n        return;\n    }\n\n    parent.addEventListener(\"mouseenter\", () => {\n        show(parent, tooltip);\n    });\n\n    parent.addEventListener(\"mouseleave\", () => {\n        queue.clear();\n        hide(tooltip);\n    });\n\n    if (!initialized.includes(tooltip)) {\n        tooltip.addEventListener(\"mouseenter\", () => {\n            tooltip.dataset.mdHovered = \"\";\n        });\n\n        tooltip.addEventListener(\"mouseleave\", () => {\n            delete tooltip.dataset.mdHovered;\n            hide(tooltip);\n        });\n\n        initialized.push(tooltip);\n    }\n}\n", "/**\n * @file Implementation file for checkbox components.\n */\n\n/**\n * Represents the options given to a styled checkbox in the\n * {@link createStyled()} function.\n */\nexport interface MaterialStyledCheckboxOptions {\n    /**\n     * Whether the checkbox should be toggled on.\n     */\n    checked?: boolean;\n    /**\n     * Whether the checkbox should be disabled.\n     */\n    disabled?: boolean;\n    /**\n     * The ID and name to assign to the checkbox.\n     */\n    id?: string;\n    /**\n     * Whether the checkbox should be in an indeterminate state.\n     */\n    indeterminate?: boolean;\n    /**\n     * A label element to overwrite with the contents of the checkbox.\n     */\n    labelElement?: HTMLElement;\n    /**\n     * Whether to return only the label or include the wrapper.\n     */\n    onlyLabel?: boolean;\n    /**\n     * The text inside the label.\n     */\n    text?: string;\n}\n\n/**\n * Creates a checkbox that shows the given display element. Unless creating a\n * new component, use the `create()` functions for either the\n * {@link create() checkbox} or [switch](./switch.ts).\n * @param className - wrapper class name\n * @param displayElement - element to display instead of the default checkbox\n * @param options - options map\n * @returns label or wrapper element depending on value of {@link MaterialStyledCheckboxOptions.onlyLabel}\n */\nexport function createStyled(\n    className: string,\n    displayElement: HTMLElement,\n    options?: MaterialStyledCheckboxOptions\n): HTMLElement {\n    const label =\n        options?.labelElement instanceof HTMLLabelElement\n            ? options.labelElement\n            : document.createElement(\"label\");\n\n    const input = document.createElement(\"input\");\n    input.type = \"checkbox\";\n    input.checked = options?.checked ?? false;\n    input.disabled = options?.disabled ?? false;\n    input.indeterminate = options?.indeterminate ?? false;\n\n    if (options?.id) {\n        input.id = options.id;\n        input.name = options.id;\n    }\n\n    const text = document.createElement(\"span\");\n    text.classList.add(`${className}__text`);\n    text.textContent =\n        options?.text ?? options?.labelElement?.textContent ?? \"\";\n\n    if (options?.labelElement) {\n        options.labelElement.innerHTML = \"\";\n    }\n\n    label.appendChild(input);\n    label.appendChild(displayElement);\n    label.appendChild(text);\n\n    if (options?.onlyLabel) {\n        return label;\n    }\n\n    const div = document.createElement(\"div\");\n    div.classList.add(className);\n    div.appendChild(label);\n\n    return div;\n}\n\n/**\n * Creates a new checkbox.\n * @param options - options map\n * @returns new checkbox\n */\nexport function create(options?: MaterialStyledCheckboxOptions): HTMLElement {\n    const box = document.createElement(\"span\");\n    box.classList.add(\"md-checkbox__box\");\n\n    return createStyled(\"md-checkbox\", box, options);\n}\n\n/**\n * Initializes a checkbox.\n * @param checkbox - checkbox to initialize\n */\nexport function initialize(checkbox: HTMLElement): void {\n    if (!checkbox.classList.contains(\"md-checkbox\")) {\n        return;\n    }\n\n    const label = create({\n        checked: checkbox.dataset.mdChecked != undefined,\n        disabled: checkbox.dataset.mdDisabled != undefined,\n        indeterminate: checkbox.dataset.mdIndeterminate != undefined,\n        onlyLabel: true,\n        text: checkbox.textContent ?? \"\",\n    });\n\n    if (checkbox.children.length == 0) {\n        checkbox.textContent = \"\";\n        checkbox.appendChild(label);\n    }\n}\n", "/**\n * @file Implementation file for Material Design segmented button components.\n */\n\nimport { getParentByClassName } from \"../utils.mjs\";\n\n/**\n * Selects or deselects a segment.\n * @param segment - clicked segment\n * @param requireSelect - whether a segment must be selected\n * @param allowMulti - whether multiple segments can be selected\n */\nfunction selectSegment(\n    segment: Element,\n    requireSelect: boolean,\n    allowMulti: boolean\n): void {\n    const selectedClass = \"md-segmented__button--selected\";\n    const select = !segment?.classList.contains(selectedClass);\n    const selected =\n        segment?.parentElement?.getElementsByClassName(selectedClass) ?? [];\n\n    if (select && !allowMulti) {\n        selected[0]?.classList.remove(selectedClass);\n    }\n\n    if (\n        (select && (allowMulti || selected?.length == 0)) ||\n        (!select && (!requireSelect || selected?.length > 1))\n    ) {\n        segment?.classList.toggle(selectedClass, select);\n    }\n}\n\n/**\n * Initializes a segmented button.\n * @param segmentedButton - button to initialize\n */\nexport function initialize(segmentedButton: HTMLElement): void {\n    if (!segmentedButton.classList.contains(\"md-segmented\")) {\n        return;\n    }\n\n    for (const child of segmentedButton.children) {\n        const check = document.createElement(\"span\");\n        check.classList.add(\"md-segmented__check\", \"md-symbol\");\n        check.textContent = \"check\";\n\n        child.insertAdjacentElement(\"afterbegin\", check);\n    }\n\n    segmentedButton.addEventListener(\"click\", (e) => {\n        if (!(e.target instanceof Element)) {\n            return;\n        }\n\n        const parent = getParentByClassName(e.target, \"md-segmented__button\");\n\n        if (!parent) {\n            return;\n        }\n\n        selectSegment(\n            parent,\n            segmentedButton.dataset.mdRequireSelect != undefined,\n            segmentedButton.dataset.mdMultiselect != undefined\n        );\n    });\n}\n", "/**\n * @file Implementation file for switch components.\n */\n\nimport { createStyled, MaterialStyledCheckboxOptions } from \"./checkbox.mjs\";\n\n/**\n * Creates a new switch.\n * @param options - options map\n * @returns new switch\n */\nexport function create(options?: MaterialStyledCheckboxOptions): HTMLElement {\n    const track = document.createElement(\"span\");\n    track.classList.add(\"md-switch__track\");\n\n    const handle = document.createElement(\"span\");\n    handle.classList.add(\"md-switch__handle\");\n\n    track.appendChild(handle);\n\n    return createStyled(\"md-switch\", track, options);\n}\n\n/**\n * Initializes a switch.\n * @param switchElement - switch to initialize\n */\nexport function initialize(switchElement: HTMLElement): void {\n    if (!switchElement.classList.contains(\"md-switch\")) {\n        return;\n    }\n\n    const label = create({\n        checked: switchElement.dataset.mdChecked != undefined,\n        disabled: switchElement.dataset.mdDisabled != undefined,\n        onlyLabel: true,\n        text: switchElement.textContent ?? \"\",\n    });\n\n    if (switchElement.children.length == 0) {\n        switchElement.textContent = \"\";\n        switchElement.appendChild(label);\n    }\n}\n", "/**\n * @file Implementation file for data table components.\n */\n\nimport { childIndex, clamp } from \"../utils.mjs\";\n\n/**\n * Initializes a data table.\n * @param table - table to initialize\n */\nexport function initialize(table: HTMLElement): void {\n    if (\n        !(table instanceof HTMLTableElement) ||\n        !table.classList.contains(\"md-table\")\n    ) {\n        return;\n    }\n\n    if (table.dataset.mdSortable == undefined) {\n        return;\n    }\n\n    const defaultHeading: HTMLElement =\n        table.querySelector(\"th[data-md-sortable~='default']\") ??\n        (table.getElementsByTagName(\"th\")[0] as HTMLElement);\n\n    table.addEventListener(\"click\", (e) => {\n        if (\n            !(e.target instanceof HTMLElement) ||\n            e.target.dataset.mdSortable == undefined\n        ) {\n            return;\n        }\n\n        sort(table, e.target, e.target.dataset.mdOrder == \"ascending\");\n    });\n\n    if (!defaultHeading) {\n        return;\n    }\n\n    sort(table, defaultHeading, defaultHeading.dataset.mdOrder == \"descending\");\n}\n\n/**\n * Sorts a table in alphabetical order.\n * @param table - table element to sort\n * @param header - header to sort by\n * @param reverse - whether to sort in reverse order\n */\nfunction sort(\n    table: HTMLTableElement,\n    header: HTMLElement,\n    reverse: boolean\n): void {\n    const rows = table.getElementsByTagName(\"tr\");\n    const headerRow = table.getElementsByClassName(\"md-table__header\")[0];\n\n    if (!rows || !headerRow) {\n        return;\n    }\n\n    const column = clamp(childIndex(header), 0, headerRow.children.length);\n    const sorted = Array.from(rows);\n\n    if (headerRow instanceof HTMLTableRowElement) {\n        sorted.splice(sorted.indexOf(headerRow), 1);\n    }\n\n    sorted.sort((a, b) =>\n        a.cells[column]!.innerText.localeCompare(b.cells[column]!.innerText)\n    );\n\n    if (reverse) {\n        sorted.reverse();\n    }\n\n    if (table.dataset.mdSortColumn != undefined) {\n        const oldColumn = clamp(\n            parseInt(table.dataset.mdSortColumn),\n            0,\n            headerRow.children.length\n        );\n\n        delete (headerRow.children[oldColumn] as HTMLElement).dataset.mdOrder;\n    }\n\n    header.dataset.mdOrder = reverse ? \"descending\" : \"ascending\";\n\n    const fragment = document.createDocumentFragment();\n    fragment.append(...sorted);\n\n    table.tBodies[0]!.appendChild(fragment);\n    table.dataset.mdSortColumn = `${column}`;\n}\n", "/**\n * @file Helper file with custom event types.\n */\n\nimport { Nullable } from \"./index.mjs\";\n\n/**\n * The state of any toggleable element.\n */\nexport enum MaterialState {\n    /**\n     * An expanded element, such as a tree item or collapsible container.\n     */\n    Expanded,\n    /**\n     * A collapsed element, such as a tree item or collapsible container.\n     */\n    Collapsed,\n    /**\n     * An enabled element, such as a button or input box.\n     */\n    Enabled,\n    /**\n     * A disabled element, such as a button or input box.\n     */\n    Disabled,\n    /**\n     * A checked element, usually a checkbox or radio button.\n     */\n    Checked,\n    /**\n     * An unchecked element, usually a checkbox or radio button.\n     */\n    Unchecked,\n    /**\n     * A selected element, such as a button or tab.\n     */\n    Selected,\n    /**\n     * An unselected element, such as a button or tab.\n     */\n    Unselected,\n}\n\n/**\n * A base for all custom Material events.\n */\nexport class MaterialEvent extends Event {\n    /**\n     * Element which triggered the event (not the dispatcher).\n     */\n    readonly source: Nullable<Element>;\n\n    /**\n     * Creates a new MaterialEvent.\n     * @param type - event name\n     * @param source - element which triggered the event (not the dispatcher)\n     */\n    constructor(type: string, source: Nullable<Element>) {\n        super(`material:${type}`);\n        this.source = source;\n    }\n}\n\n/**\n * An event type for any element that changes value.\n * @template T\n */\nexport class MaterialChangeEvent<T> extends MaterialEvent {\n    /**\n     * Value before change.\n     */\n    readonly oldValue?: T;\n    /**\n     * Value after change.\n     */\n    readonly newValue?: T;\n\n    /**\n     * Creates a new MaterialChangeEvent.\n     * @param source - element which triggered the event (not the dispatcher)\n     * @param oldValue - value before change\n     * @param newValue - value after change\n     */\n    constructor(source: Nullable<Element>, oldValue?: T, newValue?: T) {\n        super(\"change\", source);\n        this.oldValue = oldValue;\n        this.newValue = newValue;\n    }\n}\n\n/**\n * An event type for any element that has changed toggle state.\n */\nexport class MaterialToggleEvent extends MaterialEvent {\n    /**\n     * Toggle state of type {@link MaterialState}.\n     */\n    readonly state: MaterialState;\n    /**\n     * Other affected elements, usually children of the toggled element.\n     */\n    readonly elements: Element[];\n\n    /**\n     * Creates a new MaterialToggleEvent.\n     * @param source - element which triggered the event (not the dispatcher)\n     * @param state - toggle state of type {@link MaterialState}\n     * @param elements - other toggled elements\n     */\n    constructor(\n        source: Nullable<Element>,\n        state: MaterialState,\n        elements: Element[]\n    ) {\n        super(\"toggle\", source);\n        this.state = state;\n        this.elements = elements;\n    }\n}\n", "/**\n * @file Implementation file for tab container components.\n */\n\nimport { MaterialChangeEvent } from \"../events.mjs\";\nimport { getParentByClassName } from \"../utils.mjs\";\n\n/**\n * Gets a tab by name.\n * @param tabs - tab container\n * @param name - tab ID used for `data-md-tab`\n * @returns tab button and page\n */\nfunction getTab(tabs: Element, name: string | undefined): (Element | null)[] {\n    return [\n        tabs.querySelector('.md-tabs__button[data-md-tab=\"' + name + '\"]'),\n        tabs.querySelector('.md-tabs__page[data-md-tab=\"' + name + '\"]'),\n    ];\n}\n\n/**\n * Changes the current tab on the given tab container.\n * @param tabs - tab container\n * @param tab - name of new tab\n */\nexport function changeTab(tabs: HTMLElement, tab: string | undefined): void {\n    const oldTab = tabs.dataset.mdTab;\n    const [oldButton, oldContent] = getTab(tabs, oldTab);\n    const [newButton, newContent] = getTab(tabs, tab);\n\n    oldButton?.classList.remove(\"md-tabs__button--selected\");\n    oldContent?.classList.remove(\"md-tabs__page--selected\");\n    newButton?.classList.add(\"md-tabs__button--selected\");\n    newContent?.classList.add(\"md-tabs__page--selected\");\n\n    tabs.dataset.mdTab = tab;\n    tabs.dispatchEvent(new MaterialChangeEvent(newButton, oldTab, tab));\n}\n\n/**\n * Initializes a tab container.\n * @param tabs - tab container\n */\nexport function initialize(tabs: HTMLElement): void {\n    // add data-md-tab to all nav buttons and pages without it\n    const pages = tabs.querySelectorAll<HTMLElement>(\n        \".md-tabs__page:not([data-md-tab])\"\n    );\n    const buttons = tabs.querySelectorAll<HTMLElement>(\n        \".md-tabs__button:not([data-md-tab])\"\n    );\n\n    const length = Math.min(buttons.length, pages.length);\n\n    for (let i = 0; i < length; i++) {\n        pages[i]!.dataset.mdTab = buttons[i]!.dataset.mdTab = `${i}`;\n    }\n\n    // set default tab if not given\n    const firstTab = tabs.getElementsByClassName(\"md-tabs__page\")[0];\n\n    if (firstTab instanceof HTMLElement) {\n        changeTab(tabs, tabs.dataset.mdTab ?? firstTab.dataset.mdTab);\n    }\n\n    tabs\n        .querySelector(\":scope > .md-tabs__nav\")\n        ?.addEventListener(\"click\", (e) => {\n            const button = getParentByClassName(\n                e.target as Element,\n                \"md-tabs__button\"\n            );\n\n            if (!(button instanceof HTMLElement)) {\n                return;\n            }\n\n            changeTab(tabs, button.dataset.mdTab);\n        });\n}\n", "/**\n * @file Implementation file for text field components.\n */\n\nfunction moveInput(\n    textField: HTMLElement,\n    input: HTMLInputElement | HTMLTextAreaElement,\n    hide: boolean\n) {\n    const prefix = textField.getElementsByClassName(\"md-text-field__prefix\")[0];\n\n    if (!(prefix instanceof HTMLElement)) {\n        return;\n    }\n\n    const rect = prefix.getBoundingClientRect();\n\n    if (hide) {\n        input.style.left = `${-rect.width}px`;\n    } else {\n        input.style.left = \"\";\n    }\n}\n\n/**\n * Initializes a text field.\n * @param textField - text field to initialize\n */\nexport function initialize(textField: HTMLElement): void {\n    if (!textField.classList.contains(\"md-text-field\")) {\n        return;\n    }\n\n    const input = textField.getElementsByClassName(\"md-text-field__input\")[0];\n    const container = textField.getElementsByClassName(\n        \"md-text-field__container\"\n    )[0];\n\n    if (\n        !(container instanceof HTMLElement) ||\n        (!(input instanceof HTMLInputElement) &&\n            !(input instanceof HTMLTextAreaElement))\n    ) {\n        return;\n    }\n\n    container.dataset.mdPlaceholder = input.placeholder;\n\n    moveInput(textField, input, input.value == \"\");\n\n    textField.addEventListener(\"click\", (e) => {\n        const el = e.target as HTMLElement;\n\n        if (el.classList.contains(\"md-text-field__icon\")) {\n            // TODO: text field click buttons\n        }\n    });\n\n    input.addEventListener(\"focus\", () => {\n        moveInput(textField, input, false);\n    });\n\n    input.addEventListener(\"blur\", () => {\n        moveInput(textField, input, input.value == \"\");\n    });\n}\n", "/**\n * @file Implementation file for tree components.\n */\n\nimport { create as createCheckbox } from \"./checkbox.mjs\";\nimport { getParentByClassName, join, stringToSelector } from \"../utils.mjs\";\nimport { MaterialToggleEvent, MaterialState } from \"../events.mjs\";\nimport { Nullable } from \"../index.mjs\";\n\nlet lastItem = 0;\n// TODO: change tree elements to be inside parent?\n\n/**\n * Creates a button to insert in the tree.\n * @param buttonType - icon button type\n * @returns new button\n */\nfunction createButton(buttonType: string | undefined): HTMLButtonElement {\n    const button = document.createElement(\"button\");\n    button.classList.add(\"md-icon-button\", \"md-icon-button--small\");\n    button.textContent = \"add\";\n\n    if (buttonType) {\n        button.dataset.mdType = buttonType;\n    }\n\n    return button;\n}\n\n/**\n * Generates an ID for an element with either the specified string or with an\n * auto incremented number.\n * @param prefix - prefix before item ID\n * @param text - text after the prefix\n * @returns prefixed ID\n */\nfunction getId(prefix: string, text: Nullable<string>): string {\n    return join(prefix, text ? stringToSelector(text) : `item-${lastItem++}`);\n}\n\n/**\n * Initializes a tree recursively.\n * @param tree - tree to initialize\n * @param itemPrefix - prefix for item IDs\n * @param buttonType - icon button type\n * @param checkboxes - where to include checkboxes\n */\nfunction initializeTree(\n    tree: Element,\n    itemPrefix: string,\n    buttonType: string | undefined,\n    checkboxes: string | undefined\n): void {\n    for (const element of tree.children) {\n        const child = element;\n        const fullPrefix = `${itemPrefix ? itemPrefix : \"tree\"}__`;\n\n        if (child.classList.contains(\"md-tree__label\")) {\n            const root = isRoot(child);\n            const leaf = isLeaf(child);\n            const id = getId(fullPrefix, child.textContent);\n            let node = child;\n\n            if (\n                checkboxes == \"all\" ||\n                (checkboxes == \"leaves\" && leaf) ||\n                (checkboxes == \"roots\" && root) ||\n                (checkboxes == \"subtrees\" && isChild(child))\n            ) {\n                node = createCheckbox({\n                    text: child.textContent ?? id,\n                    id: join(id, \"__input\"),\n                });\n\n                child.insertAdjacentElement(\"afterend\", node);\n                child.remove();\n            }\n\n            if (!node.id) {\n                node.id = join(id, \"__controller\");\n            }\n\n            if (root) {\n                node.classList.add(\"md-tree__root\");\n            }\n\n            node.classList.add(leaf ? \"md-tree__leaf\" : \"md-tree__branch\");\n        } else if (child.classList.contains(\"md-tree__subtree\")) {\n            const label = child.previousElementSibling;\n            const button = createButton(buttonType);\n            const id = getId(fullPrefix, label?.textContent);\n\n            if (!child.id) {\n                child.id = id;\n                button.id = join(id, \"__button\");\n            }\n\n            label?.insertAdjacentElement(\"afterbegin\", button);\n            initializeTree(child, id, buttonType, checkboxes);\n        }\n    }\n}\n\n/**\n * Checks if the given element is in a subtree.\n * @param element - element to check\n * @returns whether the given element is in a subtree\n */\nfunction isChild(element: Element): boolean {\n    return (\n        element.parentElement != null &&\n        element.parentElement.classList.contains(\"md-tree__subtree\")\n    );\n}\n\n/**\n * Checks if the given element is a leaf node in the tree.\n * @param element - element to check\n * @returns whether the given element is a leaf node\n */\nfunction isLeaf(element: Element): boolean {\n    return !element.nextElementSibling?.classList.contains(\"md-tree__subtree\");\n}\n\n/**\n * Checks if the given element is a root node in the tree.\n * @param element - element to check\n * @returns whether the given element is a root node\n */\nfunction isRoot(element: Element): boolean {\n    return (\n        element.parentElement != null &&\n        element.parentElement.classList.contains(\"md-tree\")\n    );\n}\n\n/**\n * Populates a tree recursively from a map.\n * @param tree - tree to populate\n * @param map - map to populate from\n */\nfunction populateTree(tree: Element, map: object): void {\n    for (const [key, value] of Object.entries(map)) {\n        const label = document.createElement(\"label\");\n        label.classList.add(\"md-tree__label\");\n        label.textContent = key;\n\n        tree.appendChild(label);\n\n        if (Object.keys(value).length > 0) {\n            const subtree = document.createElement(\"div\");\n            subtree.classList.add(\"md-tree__subtree\");\n\n            populateTree(subtree, value);\n            tree.appendChild(subtree);\n        }\n    }\n}\n\n/**\n * Toggles child checkboxes.\n * @param checkbox - checkbox input\n * @param checked - whether to check or uncheck children\n * @returns list of toggled elements\n */\nfunction toggleCheckboxes(checkbox: Element, checked: boolean): Element[] {\n    const elements: Element[] = [];\n    const subtree = getParentByClassName(\n        checkbox,\n        \"md-checkbox\"\n    )?.nextElementSibling;\n\n    if (!subtree?.classList.contains(\"md-tree__subtree\")) {\n        return elements;\n    }\n\n    for (const checkbox of subtree.querySelectorAll<HTMLInputElement>(\n        `input[type='checkbox']${checked ? \":not(:checked)\" : \":checked\"}`\n    )) {\n        checkbox.checked = checked;\n        elements.push(checkbox);\n    }\n\n    return elements;\n}\n\n/**\n * Handles the click event on a tree.\n * @param tree - parent tree\n * @param target - clicked checkbox\n */\nfunction treeClicked(tree: HTMLElement, target: HTMLElement): void {\n    if (target.classList.contains(\"md-tree__label\")) {\n        return;\n    }\n\n    if (target.classList.contains(\"md-icon-button\")) {\n        if (\n            !(target.parentElement?.nextElementSibling instanceof HTMLElement)\n        ) {\n            return;\n        }\n\n        const expand = target.textContent == \"add\";\n\n        tree.dispatchEvent(\n            new MaterialToggleEvent(\n                target,\n                expand ? MaterialState.Expanded : MaterialState.Collapsed,\n                toggleAll(\n                    target.parentElement.nextElementSibling,\n                    expand,\n                    tree.dataset.mdCascadeToggled\n                )\n            )\n        );\n    } else if (target instanceof HTMLInputElement) {\n        const checked = target.checked;\n        const cascadeChecked = tree.dataset.mdCascadeChecked;\n        const checkboxes = tree.dataset.mdCheckboxes;\n        const elements: Element[] = [];\n\n        if (\n            (checkboxes == \"all\" || checkboxes == \"subtrees\") &&\n            (cascadeChecked == \"both\" ||\n                (cascadeChecked == \"checked\" && checked) ||\n                (cascadeChecked == \"unchecked\" && !checked))\n        ) {\n            elements.push(...toggleCheckboxes(target, checked));\n        }\n\n        tree.dispatchEvent(\n            new MaterialToggleEvent(\n                target,\n                checked ? MaterialState.Checked : MaterialState.Unchecked,\n                elements\n            )\n        );\n    }\n}\n\n/**\n * Checks if a tree has any expanded nodes.\n * @param tree - parent tree\n * @param includeChildren - whether to deep search for expanded nodes\n * @returns whether any children are expanded\n */\nexport function hasExpanded(\n    tree: Element,\n    includeChildren: boolean = true\n): boolean {\n    let selector = \".md-tree__subtree--expanded\";\n\n    if (!includeChildren) {\n        selector = `:scope > ${selector}`;\n    }\n\n    return tree.querySelector(selector) != null;\n}\n\n/**\n * Checks if a tree has any checked nodes.\n * @param tree - parent tree\n * @param includeChildren - whether to deep search for checked boxes\n * @returns whether any children are checked\n */\nexport function hasChecked(\n    tree: HTMLElement,\n    includeChildren: boolean = true\n): boolean {\n    if (\n        tree.dataset.mdCheckboxes == \"subtrees\" ||\n        tree.dataset.mdCheckboxes == \"leaves\"\n    ) {\n        return false;\n    }\n\n    let selector = \".md-checkbox input:checked\";\n\n    if (!includeChildren) {\n        selector = `:scope > ${selector}`;\n    }\n\n    return tree.querySelector(selector) != null;\n}\n\n/**\n * Initializes a tree.\n * @param tree - tree to initialize\n */\nexport function initialize(tree: HTMLElement): void {\n    initializeTree(\n        tree,\n        tree?.id,\n        tree.dataset.mdButtonType,\n        tree.dataset.mdCheckboxes\n    );\n\n    const loadExpanded = tree.dataset.mdExpandOnLoad != undefined;\n\n    toggleAll(tree, loadExpanded, loadExpanded ? \"expanded\" : \"\");\n\n    tree.addEventListener(\"click\", (e) => {\n        if (!(e.target instanceof HTMLElement)) {\n            return;\n        }\n\n        treeClicked(tree, e.target);\n    });\n}\n\n/**\n * Populates a tree from a map.\n * @param tree - tree to populate\n * @param map - map to populate from\n */\nexport function populate(tree: Element, map: object): void {\n    populateTree(tree, map);\n}\n\n/**\n * Expands or collapses a tree.\n * @param tree - tree to toggle\n * @param expand - whether to expand or collapse\n */\nexport function toggle(tree: Element, expand: boolean): void {\n    if (\n        !tree.classList.contains(\"md-tree__subtree\") ||\n        !tree.previousElementSibling\n    ) {\n        return;\n    }\n\n    const button =\n        tree.previousElementSibling.getElementsByClassName(\"md-icon-button\")[0];\n\n    if (!button) {\n        return;\n    }\n\n    button.textContent = expand ? \"remove\" : \"add\";\n    tree.classList.toggle(\"md-tree__subtree--expanded\", expand);\n    button.classList.toggle(\"md-icon-button--selected\", expand);\n}\n\n/**\n * Expands or collapses all elements in a tree.\n * @param tree - tree to toggle\n * @param expand - whether to expand or collapse\n * @param cascadeToggled - whether to expand or collapse children with parent\n * @returns list of toggled elements\n */\nexport function toggleAll(\n    tree: HTMLElement,\n    expand: boolean,\n    cascadeToggled: string | undefined\n): Element[] {\n    const elements: Element[] = [];\n\n    if (tree.classList.contains(\"md-tree__subtree\")) {\n        elements.push(tree);\n    }\n\n    if (\n        (cascadeToggled == \"expanded\" && expand) ||\n        (cascadeToggled == \"collapsed\" && !expand)\n    ) {\n        elements.push(\n            ...tree.getElementsByClassName(\n                `md-tree__subtree${expand ? \"\" : \"--expanded\"}`\n            )\n        );\n    }\n\n    for (const toggled of elements) {\n        toggle(toggled, expand);\n    }\n\n    return elements;\n}\n", "/**\n * @file Main file.\n */\n\nimport { initialize as initMenu } from \"./components/menu.mjs\";\nimport { initialize as initTooltip } from \"./components/tooltip.mjs\";\nimport { initialize as initCheckbox } from \"./components/checkbox.mjs\";\nimport { initialize as initSegmented } from \"./components/segmented.mjs\";\nimport { initialize as initSwitch } from \"./components/switch.mjs\";\nimport { initialize as initTable } from \"./components/table.mjs\";\nimport { initialize as initTabs } from \"./components/tabs.mjs\";\nimport { initialize as initTextTield } from \"./components/text-field.mjs\";\nimport { initialize as initTree } from \"./components/tree.mjs\";\n\n/**\n * Represents a type which can be null or undefined.\n * @template T\n */\nexport type Nullable<T> = T | null | undefined;\n\n/**\n * Initializes dynamically generated Material Design elements. Call this when\n * the document loads.\n */\nexport function initialize(): void {\n    // TODO: ensure each element is only initialized once?\n    const initializers = {\n        \"[data-md-menu]\": initMenu,\n        \"[data-md-tooltip]\": initTooltip,\n        \"md-checkbox\": initCheckbox,\n        \"md-segmented\": initSegmented,\n        \"md-switch\": initSwitch,\n        \"md-table\": initTable,\n        \"md-tabs\": initTabs,\n        \"md-text-field\": initTextTield,\n        \"md-tree\": initTree,\n    };\n\n    for (const [selector, initializer] of Object.entries(initializers)) {\n        // treat selectors starting with md- as class names\n        const elements = selector.startsWith(\"md-\")\n            ? document.getElementsByClassName(selector)\n            : document.querySelectorAll<HTMLElement>(selector);\n\n        for (const element of elements) {\n            initializer(element as HTMLElement);\n        }\n    }\n\n    // document.addEventListener(\"click\", (e) => {\n    //     if (e.target instanceof HTMLElement && !e.target?.dataset.mdMenu) {\n    //         menu.hideAll(true);\n    //     }\n    // });\n\n    // window.addEventListener(\"resize\", () => {\n    //     menu.hideAll(true);\n    // });\n\n    // window.addEventListener(\"scroll\", () => {\n    //     menu.hideAll(true);\n    // });\n\n    console.info(\"Material design loaded.\");\n}\n\nexport * from \"./events.mjs\";\nexport * from \"./timed-queue.mjs\";\nexport * from \"./utils.mjs\";\n", "export const storageKeys = Object.freeze({\r\n    theme: \"theme\",\r\n    tab: \"tab\",\r\n    cascadeChecked: \"cascadeChecked\",\r\n    cascadeToggled: \"cascadeToggled\",\r\n    hideExpandAll: \"hideExpandAll\",\r\n    hideScrollToTop: \"hideScrollToTop\",\r\n});\r\n\r\nexport const trees = Object.freeze({\r\n    bonfires: {\r\n        \"Base game\": {\r\n            Majula: {\r\n                \"The Far Fire\": {},\r\n            },\r\n            \"Things Betwixt\": {\r\n                \"Fire Keepers' Dwelling\": {},\r\n            },\r\n            \"Forest of Fallen Giants\": {\r\n                \"The Crestfallen's Retreat\": {},\r\n                \"Cardinal Tower\": {},\r\n                \"Soldier's Rest\": {},\r\n                \"The Place Unbeknownst\": {},\r\n            },\r\n            \"Heide's Tower of Flame\": {\r\n                \"Heide's Ruin\": {},\r\n                \"Tower of Flame\": {},\r\n            },\r\n            \"Cathedral of Blue\": {\r\n                \"The Blue Cathedral\": {},\r\n            },\r\n            \"No Man's Wharf\": {\r\n                \"Unseen Path to Heide\": {},\r\n            },\r\n            \"The Lost Bastille\": {\r\n                \"Exile Holding Cells\": {},\r\n                \"McDuff's Workshop\": {},\r\n                \"Servants' Quarters\": {},\r\n                \"Straid's Cell\": {},\r\n                \"The Tower Apart\": {},\r\n            },\r\n            \"Sinner's Rise\": {\r\n                \"The Saltfort\": {},\r\n            },\r\n            \"Belfry Luna\": {\r\n                \"Upper Ramparts\": {},\r\n            },\r\n            \"Huntsman's Copse\": {\r\n                \"Undead Refuge\": {},\r\n                \"Bridge Approach\": {},\r\n                \"Undead Lockaway\": {},\r\n            },\r\n            \"Undead Purgatory\": {\r\n                \"Undead Purgatory\": {},\r\n            },\r\n            \"Harvest Valley\": {\r\n                \"Poison Pool\": {},\r\n                \"The Mines\": {},\r\n            },\r\n            \"Earthen Peak\": {\r\n                \"Lower Earthen Peak\": {},\r\n                \"Central Earthen Peak\": {},\r\n                \"Upper Earthen Peak\": {},\r\n            },\r\n            \"Iron Keep\": {\r\n                \"Threshold Bridge\": {},\r\n                \"Ironheart Hall\": {},\r\n                \"Eygil's Idol\": {},\r\n            },\r\n            \"Belfry Sol\": {\r\n                \"Belfry Sol\": {},\r\n            },\r\n            \"Shaded Woods\": {\r\n                \"Old Akelarre\": {},\r\n                \"Ruined Fork Road\": {},\r\n                \"Shaded Ruins\": {},\r\n            },\r\n            \"Doors of Pharros\": {\r\n                \"Gyrm's Respite\": {},\r\n                \"Ordeal's End\": {},\r\n            },\r\n            \"Brightstone Cove Tseldora\": {\r\n                \"Royal Army Campsite\": {},\r\n                \"Chapel Threshold\": {},\r\n                \"Lower Brightstone Cove\": {},\r\n            },\r\n            \"Grave of Saints\": {\r\n                \"Harval's Resting Place\": {},\r\n                \"Grave Entrance\": {},\r\n            },\r\n            \"The Gutter\": {\r\n                \"Upper Gutter\": {},\r\n                \"Central Gutter\": {},\r\n            },\r\n            \"Black Gulch\": {\r\n                \"Black Gulch Mouth\": {},\r\n                \"Hidden Chamber\": {},\r\n            },\r\n            \"Drangleic Castle\": {\r\n                \"King's Gate\": {},\r\n                \"Forgotten Chamber\": {},\r\n                \"Under Castle Drangleic\": {},\r\n                \"Central Castle Drangleic\": {},\r\n            },\r\n            \"Shrine of Amana\": {\r\n                \"Tower of Prayer\": {},\r\n                \"Crumbled Ruins\": {},\r\n                \"Rhoy's Resting Place\": {},\r\n                \"Rise of the Dead\": {},\r\n            },\r\n            \"Undead Crypt\": {\r\n                \"Undead Crypt Entrance\": {},\r\n                \"Undead Ditch\": {},\r\n            },\r\n            \"Aldia's Keep\": {\r\n                Foregarden: {},\r\n                \"Ritual Site\": {},\r\n            },\r\n            \"Dragon Aerie\": {\r\n                \"Dragon Aerie\": {},\r\n            },\r\n            \"Dragon Shrine\": {\r\n                \"Shrine Entrance\": {},\r\n            },\r\n        },\r\n        DLC: {\r\n            \"Shulva, Sanctum City\": {\r\n                \"Sanctum Walk\": {},\r\n                \"Tower of Prayer\": {},\r\n                \"Priestess' Chamber\": {},\r\n            },\r\n            \"Dragon's Sanctum\": {\r\n                \"Hidden Sanctum Chamber\": {},\r\n                \"Lair of the Imperfect\": {},\r\n                \"Sanctum Interior\": {},\r\n            },\r\n            \"Dragon's Rest\": {\r\n                \"Sanctum Nadir\": {},\r\n            },\r\n            \"Brume Tower\": {\r\n                \"Throne Floor\": {},\r\n                \"Upper Floor\": {},\r\n                Foyer: {},\r\n                \"Lowermost Floor\": {},\r\n                \"The Smelter Throne\": {},\r\n            },\r\n            \"Iron Passage\": {\r\n                \"Iron Hallway Entrance\": {},\r\n            },\r\n            \"Frozen Eleum Loyce\": {\r\n                \"Outer Wall\": {},\r\n                \"Abandoned Dwelling\": {},\r\n                \"Inner Wall\": {},\r\n                \"Lower Garrison\": {},\r\n                \"Expulsion Chamber\": {},\r\n            },\r\n            \"Grand Cathedral\": {\r\n                \"Grand Cathedral\": {},\r\n            },\r\n        },\r\n    },\r\n    bosses: {\r\n        \"Base game\": {\r\n            \"The Last Giant\": {\r\n                \"Giant Stone Axe\": {},\r\n            },\r\n            \"The Pursuer\": {\r\n                \"Pursuer's Greatshield\": {},\r\n                \"Pursuer's Ultra Greatsword\": {},\r\n            },\r\n            Dragonrider: {\r\n                \"Dragonrider Bow\": {},\r\n                \"Dragonrider Greatshield\": {},\r\n                \"Dragonrider Twinblade\": {},\r\n                \"Dragonrider's Halberd\": {},\r\n            },\r\n            \"Old Dragonslayer\": {\r\n                \"Dragonslayer Spear\": {},\r\n            },\r\n            \"Flexile Sentry\": {\r\n                \"Arced Sword\": {},\r\n                \"Barbed Club\": {},\r\n                \"Warped Sword\": {},\r\n            },\r\n            \"Ruin Sentinels\": {\r\n                \"Heavy Homing Soul Arrow\": {},\r\n            },\r\n            \"The Lost Sinner\": {\r\n                \"Soul of the Lost Sinner\": {\r\n                    \"Lost Sinner's Sword\": {},\r\n                },\r\n                \"Old Witch Soul\": {\r\n                    \"Chaos Blade\": {},\r\n                    \"Flame Weapon\": {},\r\n                },\r\n            },\r\n            \"Belfry Gargoyles\": {\r\n                \"Gargoyle Bident\": {},\r\n            },\r\n            \"Skeleton Lords\": {\r\n                \"Roaring Halberd\": {},\r\n            },\r\n            \"Executioner's Chariot\": {\r\n                \"Chariot Lance\": {},\r\n                \"Shield Crossbow\": {},\r\n            },\r\n            \"Covetous Demon\": {\r\n                \"Bone Scythe\": {},\r\n            },\r\n            \"Mytha, the Baneful Queen\": {\r\n                \"Mytha's Bent Blade\": {},\r\n            },\r\n            \"Smelter Demon\": {\r\n                \"Aged Smelter Sword\": {},\r\n                \"Smelter Sword\": {},\r\n            },\r\n            \"Old Iron King\": {\r\n                \"Old Iron King Soul\": {\r\n                    \"Iron King Hammer\": {},\r\n                },\r\n                \"Old King Soul\": {\r\n                    \"Blinding Bolt\": {},\r\n                    \"Dragonslayer Greatbow\": {},\r\n                },\r\n            },\r\n            \"Scorpioness Najka\": {\r\n                \"Soul Shower\": {},\r\n            },\r\n            \"Royal Rat Authority\": {\r\n                \"Acid Surge\": {},\r\n            },\r\n            \"Prowling Magus & Congregation\": {},\r\n            \"The Duke's Dear Freja\": {\r\n                \"Soul of the Duke's Dear Freja\": {\r\n                    \"Spider Fang\": {},\r\n                    \"Spider's Silk\": {},\r\n                },\r\n                \"Old Paledrake Soul\": {\r\n                    \"Crystal Soul Spear\": {},\r\n                    \"Moonlight Greatsword\": {},\r\n                },\r\n            },\r\n            \"Royal Rat Vanguard\": {\r\n                \"Toxic Mist\": {},\r\n            },\r\n            \"The Rotten\": {\r\n                \"Soul of the Rotten\": {\r\n                    \"Butcher's Knife\": {},\r\n                },\r\n                \"Old Dead One Soul\": {\r\n                    Numbness: {},\r\n                    \"Crypt Blacksword\": {},\r\n                },\r\n            },\r\n            Dragonriders: {\r\n                \"Dragonrider Bow\": {},\r\n                \"Dragonrider Greatshield\": {},\r\n                \"Dragonrider Twinblade\": {},\r\n                \"Dragonrider's Halberd\": {},\r\n            },\r\n            \"Looking Glass Knight\": {\r\n                \"King's Mirror\": {},\r\n                \"Thorned Greatsword\": {},\r\n            },\r\n            \"Demon of Song\": {\r\n                \"Spotted Whip\": {},\r\n            },\r\n            \"Velstadt, the Royal Aegis\": {\r\n                \"Sacred Chime Hammer\": {},\r\n                \"Sacred Oath\": {},\r\n            },\r\n            Vendrick: {},\r\n            \"Guardian Dragon\": {\r\n                \"Drakewing Ultra Greatsword\": {},\r\n                \"Spitfire Spear\": {},\r\n            },\r\n            \"Ancient Dragon\": {},\r\n            \"Giant Lord\": {\r\n                Repel: {},\r\n            },\r\n            \"Throne Defender & Throne Watcher\": {\r\n                \"Throne Defender Soul\": {\r\n                    \"Defender Greatsword\": {},\r\n                    \"Defender's Shield\": {},\r\n                },\r\n                \"Throne Watcher Soul\": {\r\n                    \"Watcher Greatsword\": {},\r\n                    \"Watcher's Shield\": {},\r\n                },\r\n            },\r\n            Nashandra: {\r\n                \"Bow of Want\": {},\r\n                \"Chime of Want\": {},\r\n                \"Scythe of Want\": {},\r\n            },\r\n            \"Aldia, Scholar of the First Sin\": {},\r\n            Darklurker: {\r\n                \"Lifedrain Patch\": {},\r\n            },\r\n        },\r\n        DLC: {\r\n            \"Elana, the Squalid Queen\": {\r\n                \"Wrathful Axe\": {},\r\n            },\r\n            \"Sinh, the Slumbering Dragon\": {\r\n                \"Yorgh's Spear\": {},\r\n            },\r\n            \"Afflicted Graverobber, Ancient Soldier Varg & Cerah the Old Explorer\":\r\n                {},\r\n            \"Fume Knight\": {\r\n                \"Soul of the Fume Knight\": {\r\n                    \"Fume Sword\": {},\r\n                    \"Fume Ultra Greatsword\": {},\r\n                },\r\n                \"Soul of Nadalia, Bride of Ash\": {\r\n                    Outcry: {},\r\n                    \"Chime of Screams\": {},\r\n                },\r\n            },\r\n            \"Sir Alonne\": {\r\n                \"Bewitched Alonne Sword\": {},\r\n            },\r\n            \"Smelter Demon (Iron King)\": {\r\n                \"Smelter Sword\": {},\r\n                \"Aged Smelter Sword\": {},\r\n            },\r\n            \"Aava, the King's Pet\": {\r\n                \"Ivory Straight Sword\": {},\r\n            },\r\n            \"Burnt Ivory King\": {\r\n                \"Ivory King Ultra Greatsword\": {},\r\n            },\r\n            \"Lud, the King's Pet & Zallen, the King's Pet\": {\r\n                \"Soul of Lud, the King's Pet\": {\r\n                    \"Loyce Greatsword\": {},\r\n                },\r\n                \"Soul of Zallen, the King's Pet\": {\r\n                    \"Loyce Shield\": {},\r\n                },\r\n            },\r\n        },\r\n    },\r\n    \"dyna-and-tillo\": {\r\n        \"Prism Stone\": {\r\n            \"Amber Herb\": {},\r\n            \"Fading Soul\": {},\r\n            \"Homeward Bone\": {},\r\n            \"Human Effigy\": {},\r\n            Lifegem: {},\r\n            Rubbish: {},\r\n            \"Small Blue Burr\": {},\r\n            \"Small Orange Burr\": {},\r\n            \"Small Yellow Burr\": {},\r\n            \"Titanite Shard\": {},\r\n        },\r\n        \"Small Smooth & Silky Stone\": {\r\n            \"Amber Herb\": {},\r\n            \"Bleed Stone\": {},\r\n            Boltstone: {},\r\n            \"Channeler's Trident\": {},\r\n            \"Cracked Blue Eye Orb\": {},\r\n            \"Cracked Red Eye Orb\": {},\r\n            \"Crimson Water\": {},\r\n            \"Darknight Stone\": {},\r\n            \"Demon's Great Hammer\": {},\r\n            \"Divine Blessing\": {},\r\n            Faintstone: {},\r\n            \"Firedrake Stone\": {},\r\n            \"Human Effigy\": {},\r\n            Lifegem: {},\r\n            \"Magic Stone\": {},\r\n            \"Old Mundane Stone\": {},\r\n            \"Old Whip\": {},\r\n            \"Petrified Dragon Bone\": {},\r\n            \"Poison Stone\": {},\r\n            \"Raw Stone\": {},\r\n            \"Soul of a Lost Undead\": {},\r\n            \"Soul of a Proud Knight\": {},\r\n            \"Titanite Chunk\": {},\r\n            \"Titanite Shard\": {},\r\n            \"Titanite Slab\": {},\r\n            \"Twinkling Titanite\": {},\r\n            \"White Ring\": {},\r\n        },\r\n        \"Smooth & Silky Stone\": {\r\n            \"Bleed Stone\": {},\r\n            Boltstone: {},\r\n            \"Channeler's Trident\": {},\r\n            \"Cracked Blue Eye Orb\": {},\r\n            \"Cracked Red Eye Orb\": {},\r\n            \"Crimson Water\": {},\r\n            \"Darknight Stone\": {},\r\n            \"Demon's Great Hammer\": {},\r\n            \"Divine Blessing\": {},\r\n            Faintstone: {},\r\n            \"Firedrake Stone\": {},\r\n            \"Human Effigy\": {},\r\n            \"Magic Stone\": {},\r\n            \"Old Mundane Stone\": {},\r\n            \"Old Whip\": {},\r\n            \"Petrified Dragon Bone\": {},\r\n            \"Poison Stone\": {},\r\n            \"Raw Stone\": {},\r\n            \"Soul of a Proud Knight\": {},\r\n            \"Titanite Chunk\": {},\r\n            \"Titanite Slab\": {},\r\n            \"Twinkling Titanite\": {},\r\n            \"White Ring\": {},\r\n        },\r\n        \"Petrified Something\": {\r\n            \"Channeler's Trident\": {},\r\n            \"Demon's Great Hammer\": {},\r\n            \"Old Whip\": {},\r\n            \"Petrified Dragon Bone\": {},\r\n            \"Titanite Slab\": {},\r\n            \"Twinkling Titanite\": {},\r\n            \"White Ring\": {},\r\n        },\r\n    },\r\n    npcs: {\r\n        \"Multiple locations\": {\r\n            \"Aldia, Scholar of the First Sin\": {},\r\n            \"Belfry Guard\": {},\r\n            \"Benhart of Jugo\": {},\r\n            \"Captain Drummond\": {},\r\n            \"Creighton the Wanderer\": {},\r\n            \"Darkdiver Grandahl\": {\r\n                \"Bonfire Ascetic (x10)\": {},\r\n                \"Cast Light\": {},\r\n                \"Dark Hail\": {},\r\n                \"Dark Orb\": {},\r\n                Darkstorm: {},\r\n                \"Human Effigy (x3)\": {},\r\n                \"Profound Still\": {},\r\n            },\r\n            \"Lonesome Gavlan\": {\r\n                \"Poison Arrow (x20)\": {},\r\n                \"Poison Moss (x20)\": {},\r\n                \"Poison Throwing Knife (x20)\": {},\r\n                \"Ring of Giants (Doors of Pharros)\": {},\r\n                \"Ring of Giants (Harvest Valley)\": {},\r\n                \"Ring of Giants (No-Man's Wharf)\": {},\r\n                \"Rotten Pine Resin (x20)\": {},\r\n            },\r\n            \"Lucatiel of Mirrah\": {},\r\n            \"Mild Mannered Pate\": {},\r\n            \"The Rat King\": {},\r\n            Vendrick: {},\r\n        },\r\n        Majula: {\r\n            \"Blacksmith Lenigrast\": {\r\n                \"Heavy Bolt (x50)\": {},\r\n                \"Iron Arrow (x50)\": {},\r\n                \"Repair Powder\": {},\r\n                \"Titanite Shard (x10)\": {},\r\n            },\r\n            \"Carhillion of the Fold\": {\r\n                \"Amber Herb (x10)\": {},\r\n                \"Clear Bluestone Ring\": {},\r\n                \"Great Heavy Soul Arrow\": {},\r\n                \"Great Soul Arrow\": {},\r\n                \"Heavy Soul Arrow\": {},\r\n                \"Magic Weapon\": {},\r\n                Shockwave: {},\r\n                \"Simpleton's Spice\": {},\r\n                \"Soul Arrow\": {},\r\n                \"Soul Spear Barrage\": {},\r\n                \"Spell Quartz Ring\": {},\r\n                \"Twilight Herb (x5)\": {},\r\n                Yearn: {},\r\n            },\r\n            \"Laddersmith Gilligan\": {\r\n                \"Ladder Miniature\": {},\r\n                \"Large Ladder\": {},\r\n                \"Medium Ladder\": {},\r\n                \"Small Ladder\": {},\r\n            },\r\n            \"Licia of Lindeldt\": {\r\n                \"Ring of Prayer\": {},\r\n            },\r\n            \"Maughlin the Armourer\": {\r\n                \"Ivory King Armor\": {},\r\n                \"Ivory King Gauntlets\": {},\r\n                \"Ivory King Helm\": {},\r\n                \"Ivory King Leggings\": {},\r\n                \"Looking Glass Armor\": {},\r\n                \"Looking Glass Gauntlets\": {},\r\n                \"Looking Glass Leggings\": {},\r\n                \"Looking Glass Mask\": {},\r\n                \"Moon Butterfly Cuffs\": {},\r\n                \"Moon Butterfly Hat\": {},\r\n                \"Moon Butterfly Skirt\": {},\r\n                \"Moon Butterfly Wings\": {},\r\n                \"Penal Handcuffs\": {},\r\n                \"Penal Mask\": {},\r\n                \"Penal Skirt\": {},\r\n                \"Penal Straightjacket\": {},\r\n                \"Smelter Demon Armor\": {},\r\n                \"Smelter Demon Gauntlets\": {},\r\n                \"Smelter Demon Helm\": {},\r\n                \"Smelter Demon Leggings\": {},\r\n                \"Throne Defender Armor\": {},\r\n                \"Throne Defender Gauntlets\": {},\r\n                \"Throne Defender Helm\": {},\r\n                \"Throne Defender Leggings\": {},\r\n                \"Throne Watcher Armor\": {},\r\n                \"Throne Watcher Gauntlets\": {},\r\n                \"Throne Watcher Helm\": {},\r\n                \"Throne Watcher Leggings\": {},\r\n                \"Velstadt's Armor\": {},\r\n                \"Velstadt's Gauntlets\": {},\r\n                \"Velstadt's Helm\": {},\r\n                \"Velstadt's Leggings\": {},\r\n            },\r\n            \"Merchant Hag Melentia\": {\r\n                \"Agdayne's Black Robe\": {},\r\n                \"Agdayne's Cuffs\": {},\r\n                \"Amber Herb (x3)\": {},\r\n                \"Benhart's Armor\": {},\r\n                \"Benhart's Boots\": {},\r\n                \"Benhart's Gauntlets\": {},\r\n                \"Benhart's Knight Helm\": {},\r\n                \"Benhart's Parma\": {},\r\n                \"Black Boots\": {},\r\n                \"Black Gloves\": {},\r\n                \"Black Robes\": {},\r\n                \"Brightbug (x3)\": {},\r\n                \"Cale's Leather Armor\": {},\r\n                \"Cale's Shoes\": {},\r\n                \"Chaos Boots\": {},\r\n                \"Chaos Gloves\": {},\r\n                \"Chaos Robe\": {},\r\n                \"Creighton's Chain Gloves\": {},\r\n                \"Creighton's Chain Leggings\": {},\r\n                \"Creighton's Chainmail\": {},\r\n                Darkdrift: {},\r\n                \"Fragrant Branch of Yore\": {},\r\n                Heal: {},\r\n                \"Hexer's Boots\": {},\r\n                \"Hexer's Gloves\": {},\r\n                \"Hexer's Hood\": {},\r\n                \"Hexer's Robes\": {},\r\n                \"Human Effigy (x5)\": {},\r\n                \"Lenigrast's Key\": {},\r\n                \"Lifegem (x10)\": {},\r\n                \"Lucatiel's Gloves\": {},\r\n                \"Lucatiel's Trousers\": {},\r\n                \"Lucatiel's Vest\": {},\r\n                \"Mirrah Greatsword\": {},\r\n                \"Nahr Alma Robes\": {},\r\n                \"Pate's Armor\": {},\r\n                \"Pate's Gloves\": {},\r\n                \"Pate's Helm\": {},\r\n                \"Pate's Shield\": {},\r\n                \"Pate's Trousers\": {},\r\n                \"Pharros Lockstone\": {},\r\n                \"Radiant Lifegem (x10)\": {},\r\n                \"Saint's Dress\": {},\r\n                \"Saint's Hood\": {},\r\n                \"Saint's Long Gloves\": {},\r\n                \"Saint's Trousers\": {},\r\n                \"Scythe of Nahr Alma\": {},\r\n                \"Soul Arrow\": {},\r\n                \"Targray's Armor\": {},\r\n                \"Targray's Helm\": {},\r\n                \"Targray's Leggings\": {},\r\n                \"Targray's Manifers\": {},\r\n            },\r\n            \"Rosabeth of Melfia\": {\r\n                Combustion: {},\r\n                \"Dark Quartz Ring\": {},\r\n                \"Fire Orb\": {},\r\n                \"Fire Seed (x3)\": {},\r\n                Fireball: {},\r\n                \"Flame Quartz Ring\": {},\r\n                \"Flash Sweat\": {},\r\n                \"Iron Flesh\": {},\r\n                \"Poison Mist\": {},\r\n                \"Thunder Quartz Ring\": {},\r\n            },\r\n            \"Saulden the Crestfallen Warrior\": {},\r\n            \"Stone Trader Chloanne\": {\r\n                \"Bleed Stone (x3)\": {},\r\n                \"Boltstone (x3)\": {},\r\n                \"Bonfire Ascetic\": {},\r\n                \"Darknight Stone (x3)\": {},\r\n                \"Dead Again\": {},\r\n                \"Faintstone (x3)\": {},\r\n                \"Firedrake Stone (x3)\": {},\r\n                \"Large Titanite Shard (x10)\": {},\r\n                \"Magic Stone (x3)\": {},\r\n                \"Old Mundane Stone (x3)\": {},\r\n                \"Petrified Dragon Bone (x3)\": {},\r\n                \"Poison Stone (x3)\": {},\r\n                \"Raw Stone (x3)\": {},\r\n                \"Soul Appease\": {},\r\n                \"Titanite Chunk (x10)\": {},\r\n                \"Titanite Shard (x10)\": {},\r\n                \"Titanite Slab\": {},\r\n                \"Twinkling Titanite (x3)\": {},\r\n            },\r\n            \"Sweet Shalquoir\": {\r\n                \"Alluring Skull (x10)\": {},\r\n                \"Flying Feline Boots\": {},\r\n                \"Homeward Bone (x10)\": {},\r\n                \"Lloyd's Talisman (x10)\": {},\r\n                \"Name-engraved Ring\": {},\r\n                \"Prism Stone (x10)\": {},\r\n                \"Redeye Ring\": {},\r\n                \"Ring of the Evil Eye\": {},\r\n                \"Ring of Whispers\": {},\r\n                \"Silvercat Ring\": {},\r\n            },\r\n        },\r\n        \"Things Betwixt\": {\r\n            \"Sparkling Sisters Dyna and Tillo\": {},\r\n            Strowen: {},\r\n        },\r\n        \"Cathedral of Blue\": {\r\n            \"Blue Sentinel Targray\": {\r\n                \"Emit Force\": {},\r\n                \"Heavenly Thunder\": {},\r\n                \"Monastery Charm (x3)\": {},\r\n            },\r\n        },\r\n        \"The Lost Bastille\": {\r\n            \"Steady Hand McDuff\": {\r\n                \"Bastard Sword\": {},\r\n                Greataxe: {},\r\n                \"Light Crossbow\": {},\r\n                \"Long Bow\": {},\r\n                \"Repair Powder\": {},\r\n                \"Royal Kite Shield\": {},\r\n                Scythe: {},\r\n                Uchigatana: {},\r\n                \"Winged Spear\": {},\r\n            },\r\n            \"Straid of Olaphis\": {\r\n                Affinity: {},\r\n                \"Agape Ring\": {},\r\n                \"Armor of the Forlorn\": {},\r\n                \"Cast Light\": {},\r\n                \"Dark Fog\": {},\r\n                \"Dark Hail\": {},\r\n                \"Dark Orb\": {},\r\n                \"Flame Swathe\": {},\r\n                \"Gauntlets of the Forlorn\": {},\r\n                \"Great Lightning Spear\": {},\r\n                \"Greatsword of the Forlorn\": {},\r\n                \"Homing Soul Arrow\": {},\r\n                \"Hood of the Forlorn\": {},\r\n                \"Leggings of the Forlorn\": {},\r\n                \"Lingering Dragoncrest Ring\": {},\r\n                \"Lingering Flame\": {},\r\n                \"Resplendent Life\": {},\r\n                \"Ring of Knowledge\": {},\r\n                \"Rouge Water (x3)\": {},\r\n                \"Scythe of the Forlorn\": {},\r\n                \"Strong Magic Shield\": {},\r\n                \"Sunlight Blade\": {},\r\n                Unveil: {},\r\n            },\r\n        },\r\n        \"Huntsman's Copse\": {\r\n            \"Felkin the Outcast\": {\r\n                \"Dark Orb\": {},\r\n                \"Dark Weapon\": {},\r\n                \"Great Resonant Soul\": {},\r\n                \"Magic Barrier\": {},\r\n                \"Resonant Flesh\": {},\r\n                \"Resonant Soul\": {},\r\n                \"Resonant Weapon\": {},\r\n                \"Ring of Life Protection\": {},\r\n            },\r\n        },\r\n        \"Undead Purgatory\": {\r\n            \"Titchy Gren\": {\r\n                \"Bone Crown\": {},\r\n                \"Bone King Cuffs\": {},\r\n                \"Bone King Robe\": {},\r\n                \"Bone King Skirt\": {},\r\n                \"Cracked Red Eye Orb (x5)\": {},\r\n                \"Delicate String\": {},\r\n                \"Executioner Armor\": {},\r\n                \"Executioner Gauntlets\": {},\r\n                \"Executioner Helm\": {},\r\n                \"Executioner Leggings\": {},\r\n                \"Fire Whip\": {},\r\n                Firestorm: {},\r\n                \"Great Combustion\": {},\r\n                \"Red Sign Soapstone\": {},\r\n            },\r\n        },\r\n        \"Iron Keep\": {\r\n            \"Magerold of Lanafir\": {\r\n                \"Alonne's Armor\": {},\r\n                \"Alonne's Gauntlets\": {},\r\n                \"Alonne's Helm\": {},\r\n                \"Alonne's Leggings\": {},\r\n                \"Cursebite Ring\": {},\r\n                \"Dark Hail\": {},\r\n                Darkstorm: {},\r\n                \"Dragonrider Armor\": {},\r\n                \"Dragonrider Gauntlets\": {},\r\n                \"Dragonrider Helm\": {},\r\n                \"Dragonrider Leggings\": {},\r\n                \"Fall Control\": {},\r\n                \"Fragrant Branch of Yore\": {},\r\n                \"Great Heavy Soul Arrow\": {},\r\n                \"Great Soul Arrow\": {},\r\n                \"Green Blossom (x10)\": {},\r\n                \"Heavy Soul Arrow\": {},\r\n                \"Hello Carving\": {},\r\n                \"Human Effigy\": {},\r\n                \"I'm Sorry Carving\": {},\r\n                \"Raime's Armor\": {},\r\n                \"Raime's Gauntlets\": {},\r\n                \"Raime's Helm\": {},\r\n                \"Raime's Leggings\": {},\r\n                \"Repair Powder\": {},\r\n                \"Rusted Coin (x5)\": {},\r\n                \"Soul Arrow\": {},\r\n                \"Thank You Carving\": {},\r\n                \"Very Good! Carving\": {},\r\n            },\r\n        },\r\n        \"Shaded Woods\": {\r\n            \"Head of Vengarl\": {\r\n                \"Magic Barrier\": {},\r\n                \"Red Rust Scimitar\": {},\r\n                \"Red Rust Shield\": {},\r\n                \"Red Rust Sword\": {},\r\n                \"Ring of Soul Protection\": {},\r\n            },\r\n            \"Manscorpion Tark\": {},\r\n        },\r\n        \"Brightstone Cove Tseldora\": {\r\n            \"Cromwell the Pardoner\": {\r\n                \"Bloodbite Ring\": {},\r\n                \"Caressing Prayer\": {},\r\n                \"Cursebite Ring\": {},\r\n                \"Emit Force\": {},\r\n                Force: {},\r\n                \"Great Heal\": {},\r\n                \"Heavenly Thunder\": {},\r\n                Perseverance: {},\r\n                \"Poisonbite Ring\": {},\r\n                Replenishment: {},\r\n                \"Scraps of Life\": {},\r\n                \"White Priest Gloves\": {},\r\n                \"White Priest Headpiece\": {},\r\n                \"White Priest Robe\": {},\r\n                \"White Priest Skirt\": {},\r\n            },\r\n            \"Weaponsmith Ornifex\": {\r\n                \"Amber Herb (x10)\": {},\r\n                \"Fall Control\": {},\r\n                \"Green Blossom (x10)\": {},\r\n                \"Homing Soul Arrow\": {},\r\n                \"Homing Soulmass\": {},\r\n            },\r\n        },\r\n        \"Drangleic Castle\": {\r\n            \"Chancellor Wellager\": {\r\n                \"Black Flamestone Dagger\": {},\r\n                \"Black Flamestone Parma\": {},\r\n                \"Bound Hand Axe\": {},\r\n                \"Bound Wooden Shield\": {},\r\n                \"Bountiful Sunlight\": {},\r\n                \"Bracing Knuckle Ring +1\": {},\r\n                \"Crescent Sickle\": {},\r\n                \"Curved Twinblade\": {},\r\n                \"Divine Blessing\": {},\r\n                \"Great Chaos Fireball\": {},\r\n                \"Great Magic Barrier\": {},\r\n                \"Homunculus Mace\": {},\r\n                \"Homunculus Wooden Shield\": {},\r\n                \"Old Radiant Lifegem (x10)\": {},\r\n                \"Spirit Tree Shield\": {},\r\n                \"Transgressor's Leather Shield\": {},\r\n                \"Transgressor's Staff\": {},\r\n                \"Wilted Dusk Herb (x10)\": {},\r\n                \"Wrath of the Gods\": {},\r\n                \"Yellow Quartz Longsword\": {},\r\n                \"Yellow Quartz Shield\": {},\r\n            },\r\n        },\r\n        \"Undead Crypt\": {\r\n            \"Grave Warden Agdayne\": {\r\n                \"Elizabeth Mushroom (x13)\": {},\r\n                \"Human Effigy (x13)\": {},\r\n                \"Insolent Armor\": {},\r\n                \"Insolent Boots\": {},\r\n                \"Insolent Gloves\": {},\r\n                \"Insolent Helm\": {},\r\n                \"Ring of Thorns +1\": {},\r\n                \"Shield of the Insolent\": {},\r\n                \"Soul Appease\": {},\r\n                \"Soul Spear\": {},\r\n                \"Soul Vortex\": {},\r\n                Warmth: {},\r\n            },\r\n        },\r\n        \"Aldia's Keep\": {\r\n            \"Royal Sorcerer Navlaan\": {\r\n                \"Bonfire Ascetic (x10)\": {},\r\n                \"Crimson Water (x5)\": {},\r\n                \"Dragon Charm (x5)\": {},\r\n                \"Thunder Quartz Ring\": {},\r\n            },\r\n        },\r\n        \"Grand Cathedral\": {\r\n            \"Alsanna, Silent Oracle\": {},\r\n        },\r\n    },\r\n    secrets: {\r\n        \"Crystal Lizards\": {\r\n            \"Forest of Fallen Giants\": {\r\n                \"Before the Last Giant\": {},\r\n            },\r\n            \"No Man's Wharf\": {\r\n                \"Behind the room with the poison jars\": {},\r\n            },\r\n            \"Huntsman's Copse\": {\r\n                \"On the cliff before the Skeleton Lords\": {},\r\n            },\r\n            \"Harvest Valley\": {\r\n                \"Past a boarded up path\": {},\r\n            },\r\n            \"Iron Keep\": {\r\n                \"In the room with moveable platforms\": {},\r\n            },\r\n            \"Grave of Saints\": {\r\n                \"On a rope bridge\": {},\r\n            },\r\n            \"Shaded Woods\": {\r\n                \"In the ruins near Manscorpion Tark\": {},\r\n            },\r\n            \"Doors of Pharros\": {\r\n                \"After Gavlan\": {},\r\n            },\r\n            \"Brightstone Cove Tseldora\": {\r\n                \"On top of a pillar after fighting the Prowling Magus\": {},\r\n                \"On the balcony past Pate and Creighton\": {},\r\n            },\r\n            \"Drangleic Castle\": {\r\n                \"Before the entrance\": {},\r\n            },\r\n            \"Dragon Aerie\": {\r\n                \"Near the 1st drake\": {\r\n                    \"On the plateau (x4)\": {},\r\n                    \"In the tunnel under the plateau\": {},\r\n                    \"On a ledge\": {},\r\n                },\r\n                \"Near the 2nd drake (x3)\": {},\r\n                \"Near the 3rd drake\": {\r\n                    \"On the ground\": {},\r\n                    \"On a ledge\": {},\r\n                },\r\n            },\r\n        },\r\n        \"Fragrant Branch of Yore\": {\r\n            \"Things Betwixt\": {\r\n                \"Area with Basilisks, Ogres, and Estus Flask Shard\": {},\r\n            },\r\n            Majula: {\r\n                \"Rosabeth of Melfia at the entrance to the Shaded Woods\": {},\r\n            },\r\n            \"Heide's Tower of Flame\": {\r\n                \"Room with Estus Flask Shard and the Knight Set\": {},\r\n            },\r\n            \"The Lost Bastille\": {\r\n                \"Path to the Ruin Sentinels\": {},\r\n                \"Straid of Olaphis in his cell\": {},\r\n            },\r\n            \"Shaded Woods\": {\r\n                \"Lion that drops the Fang Key\": {},\r\n                \"Chest with Repair\": {},\r\n                \"Lion with the Warlock Mask\": {},\r\n                \"Chest with the Lion Mage Set and another branch\": {},\r\n                \"Vengarl's Body miniboss\": {},\r\n            },\r\n            \"Black Gulch\": {\r\n                \"Entrance to the Hidden Chamber bonfire\": {},\r\n            },\r\n            \"Shrine of Amana\": {\r\n                \"Access to the Rise of the Dead bonfire\": {},\r\n            },\r\n            \"Aldia's Keep\": {\r\n                \"Ogre holding the Dragon Acolyte Mask\": {},\r\n                \"Undead with Elizabeth Mushrooms and Wilted Dusk Herbs\": {},\r\n                \"Undead with two Bonfire Ascetics\": {},\r\n            },\r\n            \"Dragon Aerie\": {\r\n                \"Entrance to the first Guardian Dragon platform\": {},\r\n            },\r\n        },\r\n        \"Hidden Moths\": {\r\n            \"Lost Bastille\": {\r\n                \"Servants' Quarters\": {},\r\n            },\r\n            \"Huntsman's Copse\": {\r\n                \"Undead Refuge\": {},\r\n                \"Bridge Approach\": {},\r\n                \"Undead Lockaway\": {},\r\n            },\r\n            \"Earthen Peak\": {\r\n                \"Central Earthen Peak\": {},\r\n            },\r\n            \"The Gutter\": {\r\n                \"Upper Gutter\": {},\r\n            },\r\n            \"Shaded Woods\": {\r\n                \"Shaded Ruins (x3)\": {},\r\n            },\r\n            \"Brightstone Cove Tseldora\": {\r\n                \"Chapel Threshold\": {},\r\n            },\r\n            \"Shrine of Amana\": {\r\n                \"Crumbled Ruins\": {},\r\n                \"Rhoy's Resting Place\": {},\r\n                \"Rise of the Dead\": {},\r\n            },\r\n            \"Undead Crypt\": {\r\n                \"Undead Ditch\": {},\r\n            },\r\n            \"Aldia's Keep\": {\r\n                \"Foregarden Bonfire\": {},\r\n            },\r\n        },\r\n        \"Illusory Walls\": {\r\n            \"Forest of Fallen Giants\": {\r\n                \"Sorcerer's Staff\": {},\r\n                \"Amber Herb\": {},\r\n                \"Cardinal Tower Bonfire shortcut\": {},\r\n            },\r\n            \"No-Man's Wharf\": {\r\n                \"Firebomb (x3)\": {},\r\n                \"Large Titanite Shard\": {},\r\n                \"Crystal Lizard\": {},\r\n                \"Fading Soul\": {},\r\n                \"Soul of a Nameless Soldier\": {},\r\n                \"Large Soul of a Nameless Soldier\": {},\r\n                \"Royal Soldier's Ring\": {},\r\n            },\r\n            \"Lost Bastille\": {\r\n                \"In Ruin Sentinels boss room\": {\r\n                    \"Rusted Coin\": {},\r\n                    \"Target Shield\": {},\r\n                    \"Homeward Bone (x3)\": {},\r\n                    Hush: {},\r\n                    \"Rouge Water\": {},\r\n                },\r\n                \"Elevator cages\": {},\r\n                \"Archdrake Robes\": {},\r\n                \"Archdrake Shield\": {},\r\n                \"Bracing Knuckle Ring\": {},\r\n                \"Soul of a Brave Warrior\": {},\r\n                \"Golden Wing Shield\": {},\r\n            },\r\n            \"Sinners' Rise\": {\r\n                \"Northern Ritual Band\": {},\r\n                \"Bleed Stone\": {},\r\n            },\r\n            \"Huntsman's Copse\": {\r\n                \"Ricard's Rapier\": {},\r\n            },\r\n            \"Harvest Valley\": {\r\n                \"Old Knight Pike\": {},\r\n                \"Old Knight Greatshield\": {},\r\n                \"Soul of a Lost Undead\": {},\r\n                Torch: {},\r\n                \"Radiant Lifegem\": {},\r\n                \"Smooth & Silky Stone\": {},\r\n            },\r\n            \"Earthen Peak\": {\r\n                \"Spell Quartz Ring +1\": {},\r\n                \"Petrified Something\": {},\r\n                \"Upper Earthen Peak Bonfire\": {},\r\n            },\r\n            \"Iron Keep\": {\r\n                \"Flaming arrows (x20)\": {},\r\n                \"Black Knight Greatsword\": {},\r\n                \"Protective Chime\": {},\r\n                \"Grand Spirit Tree Shield\": {},\r\n            },\r\n            \"Brightstone Cove Tseldora\": {\r\n                \"Estus Flask Shard\": {},\r\n            },\r\n            \"Drangleic Castle\": {\r\n                \"Under Castle Drangleic Bonfire\": {},\r\n                \"Faraam Set\": {},\r\n                \"Forgotten Chamber Bonfire\": {},\r\n            },\r\n            \"Undead Crypt\": {\r\n                Avelyn: {},\r\n                \"Heavy Bolt (x15)\": {},\r\n                \"Olenford's Staff\": {},\r\n                \"Great Lightning Spear\": {},\r\n            },\r\n            \"Aldia's Keep\": {\r\n                \"Ritual Site Bonfire\": {},\r\n                \"Malformed Shell\": {},\r\n            },\r\n            \"Memory of Orro (Forest of Fallen Giants)\": {\r\n                \"Steel Set\": {},\r\n                \"Fire Seed\": {},\r\n            },\r\n            \"Shulva - Sanctum City\": {\r\n                \"Sanctum Interior Bonfire\": {},\r\n            },\r\n            \"Brume Tower\": {\r\n                \"Old Radiant Lifegem (x4)\": {},\r\n                \"Wilted Dusk Herb (x4)\": {},\r\n                \"Soul Vessel (x2)\": {},\r\n                \"Hollow Skin\": {},\r\n            },\r\n        },\r\n        \"Invisible Hollows\": {\r\n            \"Forest of Fallen Giants\": {\r\n                \"Near the firebomb throwers above the courtyard\": {},\r\n            },\r\n            \"No Man's Wharf\": {\r\n                \"By a house near the Pharros' Contraption\": {},\r\n            },\r\n            \"The Lost Bastille\": {\r\n                \"Against a broken stone to the left of a chest\": {},\r\n                \"In the cell next to Straid's cell\": {},\r\n            },\r\n            \"Sinner's Rise\": {\r\n                \"In the first jail cell on the upper left\": {},\r\n            },\r\n            \"Huntsman's Copse\": {\r\n                \"In the building after the Undead Refuge bonfire\": {},\r\n            },\r\n            \"Shaded Woods\": {\r\n                \"To the left of the King's Gate\": {},\r\n            },\r\n            \"Doors of Pharros\": {\r\n                \"In the alcove with the sitting dwarf\": {},\r\n            },\r\n            \"The Gutter\": {\r\n                \"On the slanted walkway before the first bonfire\": {},\r\n                \"On top of the house with the mimic\": {},\r\n                \"Underneath a platform with a chest\": {},\r\n                \"To the right of the fog wall before the second bonfire\": {},\r\n                \"Below the second bonfire on a platform with a brazier\": {},\r\n            },\r\n            \"Drangleic Castle\": {\r\n                \"Against the castle wall to the left of the main gate\": {},\r\n                \"In a guarded treasure room with Sublime Bone Dust\": {},\r\n                \"Outside the cage with the Milfanito\": {},\r\n            },\r\n            \"Shrine of Amana\": {\r\n                \"Outside the building with the second bonfire\": {},\r\n                \"In the deep water before the Demon of Song boss room\": {},\r\n            },\r\n            \"Undead Crypt\": {\r\n                \"Left alcove in the entrance\": {},\r\n                \"In the room with the witches near the left staircase\": {},\r\n                \"On the stairs before Agdayne\": {},\r\n                \"On the wall to the right of Agdayne\": {},\r\n                \"On a platform on the left past Agdayne's room\": {},\r\n                \"At the entrance to the hallway with the ghosts\": {},\r\n                \"In the room with a hole in the middle\": {\r\n                    \"Near the third statue on the left\": {},\r\n                    \"Near the third statue on the right\": {},\r\n                },\r\n                \"In the bell room before Velstadt\": {},\r\n                \"In the corridor before Velstadt\": {\r\n                    \"On the left\": {\r\n                        \"Between the third and fourth pillar from the boss room\":\r\n                            {},\r\n                    },\r\n                    \"On the right\": {\r\n                        \"Between the wall and the second pillar (x2)\": {},\r\n                        \"Near to the fifth pillar from the boss room\": {},\r\n                        \"Near the pillar closest to the boss room\": {},\r\n                    },\r\n                },\r\n            },\r\n            \"Aldia's Keep\": {\r\n                \"In the room with the lever after the dragon skeleton\": {},\r\n                \"By the elevator after the Guardian Dragon boss room\": {},\r\n            },\r\n        },\r\n        \"Pharros' Lockstones\": {\r\n            \"Forest of Fallen Giants\": {\r\n                \"Titanite Slab\": {},\r\n                \"Chloranthy Ring\": {},\r\n            },\r\n            \"Lost Bastille\": {\r\n                \"Belfry Luna entrance\": {},\r\n                \"Soul Vessel\": {},\r\n            },\r\n            \"Earthen Peak\": {\r\n                \"Poisonbite Ring\": {},\r\n                \"Soul of a Proud Knight\": {},\r\n            },\r\n            \"Iron Keep\": {\r\n                \"Belfry Sol entrance\": {},\r\n            },\r\n            \"Doors of Pharros\": {\r\n                \"Santier's Spear\": {},\r\n            },\r\n            \"Grave of Saints\": {\r\n                \"Poison Moss (x2)\": {},\r\n                \"Whisper of Despair\": {},\r\n                Torch: {},\r\n            },\r\n            \"Shrine of Amana\": {\r\n                \"Helix Halberd\": {},\r\n            },\r\n            \"Undead Crypt\": {\r\n                \"Olenford's Staff\": {},\r\n                \"Great Lightning Spear\": {},\r\n            },\r\n            \"Dragon Shrine\": {\r\n                \"Mask of Judgement\": {},\r\n                \"Robe of Judgement\": {},\r\n                \"Manchettes of Judgement\": {},\r\n                \"Tights of Judgement\": {},\r\n            },\r\n            \"Memory of Orro\": {\r\n                \"Steel Helm\": {},\r\n                \"Steel Armor\": {},\r\n                \"Steel Gauntlets\": {},\r\n                \"Steel Leggings\": {},\r\n                \"Fire Seed\": {},\r\n            },\r\n            \"Frozen Elyseum Loyce\": {\r\n                \"Durgo's Hat\": {},\r\n            },\r\n        },\r\n    },\r\n});\r\n", "import { hideDialog } from \"./dialogs.mjs\";\r\n\r\nexport function initialize() {\r\n    document\r\n        .getElementById(\"clear-no\")\r\n        ?.addEventListener(\"click\", (e) => hideDialog(e.currentTarget));\r\n\r\n    document.getElementById(\"clear-yes\")?.addEventListener(\"click\", () => {\r\n        localStorage.clear();\r\n        location.reload();\r\n    });\r\n}\r\n", "import { storageKeys } from \"../constants.mjs\";\r\nimport { hideDialog } from \"./dialogs.mjs\";\r\n\r\nexport function initialize() {\r\n    document\r\n        .getElementById(\"reset-no\")\r\n        ?.addEventListener(\"click\", (e) => hideDialog(e.currentTarget));\r\n\r\n    document.getElementById(\"reset-yes\")?.addEventListener(\"click\", () => {\r\n        for (const key in storageKeys) {\r\n            localStorage.removeItem(key);\r\n        }\r\n\r\n        location.reload();\r\n    });\r\n}\r\n", "import { cycleThemes, Nullable, setTheme } from \"sass-material-design\";\r\nimport { changeTab } from \"sass-material-design/tabs\";\r\nimport { toggle } from \"sass-material-design/tree\";\r\nimport { storageKeys } from \"./constants.mjs\";\r\nimport { loadSettings } from \"./dialogs/settings.mjs\";\r\n\r\nexport function changeTheme(\r\n    themeButton: HTMLElement,\r\n    theme: Nullable<string> = null\r\n): void {\r\n    if (theme) {\r\n        setTheme(document.body, theme);\r\n    } else {\r\n        theme = cycleThemes(document.body, \"light\", \"dark\");\r\n    }\r\n\r\n    const buttonText = theme == \"light\" ? \"dark\" : \"light\";\r\n    themeButton.innerText = `${buttonText}_mode`;\r\n\r\n    if (theme) {\r\n        localStorage.setItem(storageKeys.theme, theme);\r\n    }\r\n}\r\n\r\nexport function load(): void {\r\n    changeTheme(\r\n        document.getElementById(\"change-theme\") as HTMLElement,\r\n        localStorage.getItem(storageKeys.theme) ?? document.body.dataset.mdTheme\r\n    );\r\n\r\n    const tab = localStorage.getItem(storageKeys.tab) ?? \"\";\r\n    const tabs = document.getElementById(\"main-tabs\");\r\n\r\n    if (tabs && tab) {\r\n        changeTab(tabs, tab);\r\n    }\r\n\r\n    const settingsKeys: string[] = Object.values(storageKeys);\r\n\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n        const key = localStorage.key(i);\r\n\r\n        if (!key || settingsKeys.includes(key)) {\r\n            continue;\r\n        }\r\n\r\n        const element = document.getElementById(key);\r\n\r\n        if (element?.classList.contains(\"md-tree__subtree\")) {\r\n            toggle(element, true);\r\n        } else if (element instanceof HTMLInputElement) {\r\n            element.checked = true;\r\n        }\r\n    }\r\n\r\n    loadSettings();\r\n}\r\n\r\nexport function toggleStorage(\r\n    key: Nullable<string>,\r\n    add: boolean,\r\n    value: string | null = \"\",\r\n    session: boolean = false\r\n) {\r\n    if (!key) {\r\n        return;\r\n    }\r\n\r\n    const storage = session ? sessionStorage : localStorage;\r\n\r\n    if (add) {\r\n        storage.setItem(key, value ?? \"\");\r\n    } else {\r\n        storage.removeItem(key);\r\n    }\r\n}\r\n", "import { Nullable } from \"sass-material-design\";\r\nimport { hideDialog, showDialog } from \"./dialogs.mjs\";\r\nimport { storageKeys } from \"../constants.mjs\";\r\nimport { toggleStorage } from \"../utils.mjs\";\r\n\r\n// tree behavior\r\nlet cascadeCheckedControl: Nullable<HTMLInputElement> = null;\r\nlet cascadeUncheckedControl: Nullable<HTMLInputElement> = null;\r\nlet cascadeCollapsedControl: Nullable<HTMLInputElement> = null;\r\n\r\n// page settings\r\nlet hideExpandAllControl: Nullable<HTMLInputElement> = null;\r\nlet hideScrollToTopControl: Nullable<HTMLInputElement> = null;\r\n\r\nfunction changePageSettings(hideExpandAll: boolean, hideScrollToTop: boolean) {\r\n    const expandAllButton = document.getElementById(\"fab-expand\");\r\n    const scrollToTopButton = document.getElementById(\"fab-top\");\r\n\r\n    if (expandAllButton) {\r\n        expandAllButton.style.display = hideExpandAll ? \"none\" : \"flex\";\r\n    }\r\n\r\n    if (scrollToTopButton) {\r\n        scrollToTopButton.style.display = hideScrollToTop ? \"none\" : \"flex\";\r\n    }\r\n}\r\n\r\nfunction changeTreeSettings(cascadeChecked: string, cascadeToggled: string) {\r\n    for (const element of document.getElementsByClassName(\"md-tree\")) {\r\n        const tree = element as HTMLElement;\r\n\r\n        tree.dataset.mdCascadeChecked = cascadeChecked;\r\n        tree.dataset.mdCascadeToggled = cascadeToggled;\r\n    }\r\n}\r\n\r\nexport function initialize() {\r\n    document.getElementById(\"settings\")?.addEventListener(\"click\", () => {\r\n        document\r\n            .querySelectorAll(\".md-tooltip--visible\")\r\n            .forEach((t) => t.classList.remove(\"md-tooltip--visible\"));\r\n        showDialog(\"settings-dialog\");\r\n    });\r\n\r\n    document\r\n        .getElementById(\"settings-reset\")\r\n        ?.addEventListener(\"click\", () => showDialog(\"reset-dialog\"));\r\n\r\n    document\r\n        .getElementById(\"settings-clear\")\r\n        ?.addEventListener(\"click\", () => showDialog(\"clear-dialog\"));\r\n\r\n    document\r\n        .getElementById(\"settings-cancel\")\r\n        ?.addEventListener(\"click\", (e) => hideDialog(e.currentTarget));\r\n\r\n    document.getElementById(\"settings-save\")?.addEventListener(\"click\", (e) => {\r\n        saveSettings();\r\n        hideDialog(e.currentTarget);\r\n    });\r\n\r\n    cascadeCheckedControl = document\r\n        .getElementById(\"cascade-checked\")\r\n        ?.querySelector(\"input\");\r\n    cascadeUncheckedControl = document\r\n        .getElementById(\"cascade-unchecked\")\r\n        ?.querySelector(\"input\");\r\n    cascadeCollapsedControl = document\r\n        .getElementById(\"cascade-collapsed\")\r\n        ?.querySelector(\"input\");\r\n\r\n    hideExpandAllControl = document\r\n        .getElementById(\"hide-expand-all-button\")\r\n        ?.querySelector(\"input\");\r\n    hideScrollToTopControl = document\r\n        .getElementById(\"hide-scroll-to-top-button\")\r\n        ?.querySelector(\"input\");\r\n}\r\n\r\nexport function loadSettings() {\r\n    if (\r\n        !hideExpandAllControl ||\r\n        !hideScrollToTopControl ||\r\n        !cascadeCheckedControl ||\r\n        !cascadeUncheckedControl ||\r\n        !cascadeCollapsedControl\r\n    ) {\r\n        return;\r\n    }\r\n\r\n    // page settings\r\n    const hideExpandAll = localStorage.getItem(storageKeys.hideExpandAll);\r\n    const hideScrollToTop = localStorage.getItem(storageKeys.hideScrollToTop);\r\n\r\n    if (hideExpandAll) {\r\n        hideExpandAllControl.checked = hideExpandAll != null;\r\n    }\r\n\r\n    if (hideScrollToTop) {\r\n        hideScrollToTopControl.checked = hideScrollToTop != null;\r\n    }\r\n\r\n    changePageSettings(hideExpandAll != null, hideScrollToTop != null);\r\n\r\n    // tree behavior\r\n    const cascadeChecked =\r\n        localStorage.getItem(storageKeys.cascadeChecked) ?? \"checked\";\r\n    const cascadeToggled =\r\n        localStorage.getItem(storageKeys.cascadeToggled) ?? \"collapsed\";\r\n\r\n    cascadeCheckedControl.checked =\r\n        cascadeChecked == \"checked\" || cascadeChecked == \"both\";\r\n\r\n    cascadeUncheckedControl.checked =\r\n        cascadeChecked == \"unchecked\" || cascadeChecked == \"both\";\r\n    cascadeCollapsedControl.checked = cascadeToggled == \"collapsed\";\r\n\r\n    changeTreeSettings(cascadeChecked, cascadeToggled);\r\n}\r\n\r\nexport function saveSettings() {\r\n    if (\r\n        !cascadeCheckedControl ||\r\n        !cascadeUncheckedControl ||\r\n        !cascadeCollapsedControl ||\r\n        !hideExpandAllControl ||\r\n        !hideScrollToTopControl\r\n    ) {\r\n        return;\r\n    }\r\n\r\n    // page settings\r\n    toggleStorage(storageKeys.hideExpandAll, hideExpandAllControl.checked);\r\n    toggleStorage(storageKeys.hideScrollToTop, hideScrollToTopControl.checked);\r\n\r\n    changePageSettings(\r\n        hideExpandAllControl.checked,\r\n        hideScrollToTopControl.checked\r\n    );\r\n\r\n    // tree behavior\r\n    const cascadeToggledValue = cascadeCollapsedControl.checked\r\n        ? \"collapsed\"\r\n        : \"\";\r\n    let cascadeCheckedValue: string = \"\";\r\n\r\n    // TODO: replace with dropdown/dialog/etc.\r\n    if (cascadeCheckedControl.checked && !cascadeUncheckedControl.checked) {\r\n        cascadeCheckedValue = \"checked\";\r\n    } else if (\r\n        cascadeUncheckedControl.checked &&\r\n        !cascadeCheckedControl.checked\r\n    ) {\r\n        cascadeCheckedValue = \"unchecked\";\r\n    } else if (\r\n        cascadeCheckedControl.checked &&\r\n        cascadeUncheckedControl.checked\r\n    ) {\r\n        cascadeCheckedValue = \"both\";\r\n    }\r\n\r\n    toggleStorage(\r\n        storageKeys.cascadeChecked,\r\n        cascadeCheckedValue != \"\",\r\n        cascadeCheckedValue\r\n    );\r\n\r\n    toggleStorage(\r\n        storageKeys.cascadeToggled,\r\n        cascadeCollapsedControl.checked,\r\n        \"collapsed\"\r\n    );\r\n\r\n    changeTreeSettings(cascadeCheckedValue, cascadeToggledValue);\r\n}\r\n", "import { getParentByClassName } from \"sass-material-design\";\r\nimport { initialize as initializeClear } from \"./clear.mjs\";\r\nimport { initialize as initializeReset } from \"./reset.mjs\";\r\nimport { initialize as initializeSettings } from \"./settings.mjs\";\r\n\r\nexport function hideDialog(target: Element | EventTarget | null) {\r\n    if (!(target instanceof Element)) {\r\n        return;\r\n    }\r\n\r\n    getParentByClassName(target, \"md-dialog\")?.classList.remove(\r\n        \"md-dialog--visible\"\r\n    );\r\n}\r\n\r\nexport function showDialog(id: string) {\r\n    const dialog = document.getElementById(id);\r\n\r\n    if (!dialog?.classList.contains(\"md-dialog\")) {\r\n        return;\r\n    }\r\n\r\n    dialog.classList.add(\"md-dialog--visible\");\r\n}\r\n\r\nexport function initialize() {\r\n    initializeSettings();\r\n    initializeReset();\r\n    initializeClear();\r\n}\r\n", "// material imports\r\nimport { initialize as initializeMaterial } from \"sass-material-design\";\r\nimport { hasExpanded, populate, toggleAll } from \"sass-material-design/tree\";\r\nimport {\r\n    MaterialChangeEvent,\r\n    MaterialToggleEvent,\r\n    MaterialState,\r\n} from \"sass-material-design\";\r\n\r\n// TODO: add import/export\r\n// TODO: connect elements like Straid's boss soul items and boss item directly\r\n\r\n// local imports\r\nimport { storageKeys, trees } from \"./constants.mjs\";\r\nimport { initialize as initializeDialogs } from \"./dialogs/dialogs.mjs\";\r\nimport { load, changeTheme, toggleStorage } from \"./utils.mjs\";\r\n\r\nconst fabExpand = document.getElementById(\"fab-expand\");\r\nconst fabExpandIcon = fabExpand?.getElementsByClassName(\r\n    \"md-fab__icon\"\r\n)[0] as HTMLElement;\r\nconst tabs = document.getElementById(\"main-tabs\");\r\n\r\nlet initialized = false;\r\n\r\nfunction changeFabExpand(expanded: boolean) {\r\n    if (!fabExpandIcon) {\r\n        return;\r\n    }\r\n\r\n    const tooltip = document.getElementById(\"fab-expand-tooltip\");\r\n\r\n    if (fabExpandIcon) {\r\n        fabExpandIcon.innerText = expanded ? \"remove\" : \"add\";\r\n    }\r\n\r\n    if (tooltip) {\r\n        tooltip.innerText = expanded ? \"Collapse all\" : \"Expand all\";\r\n    }\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    for (const [treeElement, items] of Object.entries(trees)) {\r\n        const element = document.getElementById(treeElement);\r\n\r\n        if (!element) {\r\n            continue;\r\n        }\r\n\r\n        populate(element, items);\r\n\r\n        element.addEventListener(\"material:toggle\", (e) => {\r\n            const event = e as MaterialToggleEvent;\r\n            let state = false;\r\n\r\n            // if expanded or collapsed\r\n            if (\r\n                event.state == MaterialState.Expanded ||\r\n                event.state == MaterialState.Collapsed\r\n            ) {\r\n                if (event.state == MaterialState.Expanded) {\r\n                    changeFabExpand(true);\r\n                } else if (!hasExpanded(element, false)) {\r\n                    changeFabExpand(false);\r\n                }\r\n\r\n                state = event.state == MaterialState.Expanded;\r\n            }\r\n\r\n            if (\r\n                event.state == MaterialState.Checked ||\r\n                event.state == MaterialState.Unchecked\r\n            ) {\r\n                state = event.state == MaterialState.Checked;\r\n            }\r\n\r\n            toggleStorage(event.source?.id, state);\r\n            event.elements.forEach((el) => toggleStorage(el?.id, state));\r\n        });\r\n    }\r\n\r\n    initializeMaterial();\r\n    initializeDialogs();\r\n    load();\r\n\r\n    initialized = true;\r\n\r\n    const tab = tabs?.dataset.mdTab;\r\n\r\n    if (!tab) {\r\n        return;\r\n    }\r\n\r\n    const treeElement = document.getElementById(tab);\r\n\r\n    if (treeElement && hasExpanded(treeElement)) {\r\n        changeFabExpand(true);\r\n    }\r\n});\r\n\r\ndocument\r\n    .getElementById(\"change-theme\")\r\n    ?.addEventListener(\"click\", (e) =>\r\n        changeTheme(e.currentTarget as HTMLElement)\r\n    );\r\n\r\ntabs?.addEventListener(\"material:change\", (e) => {\r\n    if (!initialized) {\r\n        return;\r\n    }\r\n\r\n    const ev = e as MaterialChangeEvent<string>;\r\n\r\n    if (ev && ev.newValue) {\r\n        const treeElement = document.getElementById(ev.newValue);\r\n        changeFabExpand(treeElement ? hasExpanded(treeElement) : false);\r\n    }\r\n\r\n    localStorage.setItem(\r\n        storageKeys.tab,\r\n        (e as MaterialChangeEvent<string>).newValue ?? \"\"\r\n    );\r\n});\r\n\r\nfabExpand?.addEventListener(\"click\", () => {\r\n    const expand = fabExpandIcon?.innerText == \"add\";\r\n    const tabName = document.getElementById(\"main-tabs\")?.dataset.mdTab;\r\n\r\n    if (!tabName) {\r\n        return;\r\n    }\r\n\r\n    const treeElement = document.getElementById(tabName);\r\n\r\n    if (!treeElement) {\r\n        return;\r\n    }\r\n\r\n    const elements = toggleAll(\r\n        treeElement,\r\n        expand,\r\n        expand ? \"expanded\" : \"collapsed\"\r\n    );\r\n\r\n    changeFabExpand(expand);\r\n    elements.forEach((el) => toggleStorage(el.id, expand));\r\n});\r\n\r\ndocument.getElementById(\"fab-top\")?.addEventListener(\"click\", () =>\r\n    window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"smooth\",\r\n    })\r\n);\r\n"],
  "mappings": "8pBAIaA,EAAP,KAAc,CAIhB,YAAYC,EAAS,CAHrBC,EAAA,IAAA,KAAA,MAAA,EACAC,EAAA,IAAA,KAAA,MAAA,EAGIC,EAAA,KAAIF,EAAS,CAAA,EAAE,GAAA,EACfE,EAAA,KAAID,EAAYF,EAAK,GAAA,CACzB,CAEA,OAAK,CAEDG,EAAA,KAAID,EAAY,OAAS,GAAA,CAC7B,CAEA,GAAGF,EAAQ,CACP,OAAOI,EAAA,KAAIF,EAAA,GAAA,GAAaF,CAC5B,CAEA,IAAIA,EAAoB,CAChBI,EAAA,KAAIF,EAAA,GAAA,GACJE,EAAA,KAAIH,EAAA,GAAA,EAAO,KAAKG,EAAA,KAAIF,EAAA,GAAA,CAAS,EAGjCC,EAAA,KAAID,EAAYF,EAAK,GAAA,CACzB,CAEA,IAAIA,EAAQ,CACR,OAAOI,EAAA,KAAIH,EAAA,GAAA,EAAO,SAASD,CAAK,CACpC,CAEA,QAAQA,EAAQ,CACZ,OAAOI,EAAA,KAAIH,EAAA,GAAA,EAAO,MAAM,EAAE,GAAKD,CACnC,gVClBSK,EAAP,KAAiB,CAAvB,aAAA,CACIC,EAAA,IAAA,KAAyD,CAAA,CAAE,EAM3D,KAAA,OAAS,IAAMC,EAAA,KAAID,EAAA,GAAA,EAAQ,MA+D/B,CAzDI,QAAQE,EAA0B,CAC9B,QAAWC,KAAQD,EACfD,EAAA,KAAID,EAAA,GAAA,EAAQ,KAAK,CACb,KAAMG,EACN,QAAS,WAAW,IAAK,CACrBA,EAAK,SAASA,CAAI,EAClB,KAAK,OAAOA,CAAI,CACpB,EAAGA,EAAK,OAAS,CAAC,EACrB,CAET,CAOA,IAAIC,EAAiB,GAAK,CAEtB,IAAMD,GADaC,EAAQH,EAAA,KAAID,EAAA,GAAA,EAAQ,MAAQC,EAAA,KAAID,EAAA,GAAA,EAAQ,KACpC,EAEvB,oBAAaG,GAAM,OAAO,EACnBA,GAAM,IACjB,CAOA,MAAME,EAAiD,CACnD,IAAMC,EAAUL,EAAA,KAAID,EAAA,GAAA,EAAQ,OAE5B,QAAWG,KAAQF,EAAA,KAAID,EAAA,GAAA,EACnB,aAAaG,EAAK,OAAO,EAErBE,GACAA,EAAcF,EAAK,IAAI,EAI/B,OAAAF,EAAA,KAAID,EAAA,GAAA,EAAQ,OAAO,EAAGC,EAAA,KAAID,EAAA,GAAA,EAAQ,MAAM,EACjCM,CACX,CAMA,OAAOH,EAAuB,CAC1B,IAAMI,EAAQN,EAAA,KAAID,EAAA,GAAA,EAAQ,UAAWQ,GAAMA,EAAE,MAAQL,CAAI,EAErDI,EAAQ,KACR,aAAaN,EAAA,KAAID,EAAA,GAAA,EAAQO,CAAK,EAAG,OAAO,EACxCN,EAAA,KAAID,EAAA,GAAA,EAAQ,OAAOO,EAAO,CAAC,EAEnC,iBCzEE,SAAUE,GACZC,EACAC,KACGC,EAAgB,CAEnB,IAAMC,EAAW,KAAKC,GAAWH,CAAI,CAAC,GAChCI,EAAYL,EAAQ,QAAQG,CAAQ,EACtCG,EAAQ,EAERD,GAAa,OACbC,GAASJ,EAAO,QAAQG,CAAS,EAAI,GAAKH,EAAO,QAGrD,IAAMK,EAAWL,EAAOI,CAAK,EAC7B,OAAAN,EAAQ,QAAQG,CAAQ,EAAII,EACrBA,CACX,CAQM,SAAUC,EAAYR,KAAyBS,EAAgB,CACjE,OAAOV,GAAUC,EAAS,QAAS,GAAGS,CAAM,CAChD,CAQM,SAAUC,EAASV,EAAsBW,EAAgB,GAAE,CAC7D,OAAOH,EAAYR,EAASW,CAAK,CACrC,CAUM,SAAUC,EAAWZ,EAAuB,CAC9C,OAAKA,EAIE,MAAM,UAAU,QAAQ,KAC3BA,EAAQ,eAAe,SACvBA,CAAO,EALA,EAOf,CAUM,SAAUa,EACZb,EACAc,EACAC,EAA2B,GAC3BC,EAAuB,GAAI,CAE3B,GAAIA,EAAa,CACb,GAAIhB,EAAQ,UAAU,SAASc,CAAW,EACtC,OAAOd,EAGX,GAAIe,GAAoBf,EAAQ,UAAU,SAASe,CAAgB,EAC/D,OAAO,IAEf,CAEA,OAAKf,EAAQ,cAINa,EACHb,EAAQ,cACRc,EACAC,EACA,EAAI,EAPG,IASf,CAsCM,SAAUE,GAAWC,EAAW,CAClC,OAAOA,EAAI,OAAO,CAAC,EAAE,kBAAiB,EAAKA,EAAI,MAAM,CAAC,CAC1D,CAUM,SAAUC,EAAMC,EAAeC,EAAaC,EAAW,CACzD,GAAID,GAAOC,EACP,MAAM,WAAW,uCAAuC,EAG5D,OAAOF,GAASC,EAAMA,EAAMD,GAASE,EAAMA,EAAMF,CACrD,CAOM,SAAUG,KAAQC,EAAiB,CACrC,OAAOA,EAAQ,KAAK,EAAE,CAC1B,CAOM,SAAUC,EAAiBP,EAAW,CAExC,OAAKA,GAIEA,EACF,WAAW,WAAY,EAAE,EACzB,WAAW,qBAAsB,OAAO,EACxC,YAAW,CACpB,CCnLA,IAAMQ,EAAiC,IAAIC,EACrCC,EAAc,IAAI,IAQpBC,GAAgC,KAChCC,EAA+B,KAO7B,SAAUC,EAAKC,EAAmBC,EAAqB,GAAK,CAC9DP,EAAM,KAAK,CACP,SAAWQ,GAAQ,CACXA,EAAK,KAAK,QAAQ,WAAa,OAC/BA,EAAK,KAAK,UAAU,OAAO,kBAAkB,EAEzCN,EAAY,IAAII,CAAI,IACpBJ,EAAY,IAAIM,EAAK,IAAI,EAAG,OAAS,MAGjD,EACA,MAAOD,EAAY,EAAI,IACvB,KAAMD,EACT,CACL,CAaM,SAAUG,GACZC,EACAC,EACAC,EAAqB,GAAK,CAE1BC,GAAKH,EAAQC,CAAI,EACjBG,EAAM,MAAOC,GAASA,EAAK,KAAK,UAAU,OAAO,kBAAkB,CAAC,EAEpED,EAAM,KAAK,CACP,SAAWC,GAAQ,CACfA,EAAK,KAAK,UAAU,IAAI,kBAAkB,EAEtCC,EAAY,IAAIL,CAAI,IACpBK,EAAY,IAAIL,CAAI,EAAG,OAASD,EAExC,EACA,KAAMC,EACN,MAAOC,EAAY,EAAI,IAC1B,CACL,CAMM,SAAUK,GAAWP,EAAmB,CAC1C,GAAI,CAACA,EAAO,QAAQ,OAChB,OAGJ,IAAMC,EAAO,SAAS,eAAeD,EAAO,QAAQ,MAAM,EAc1D,GAZI,CAACC,IAILD,EAAO,iBAAiB,QAAS,IAAK,CAC9BM,EAAY,IAAIL,CAAI,GAAG,QAAUD,EACjCQ,EAAKP,EAAM,EAAI,EAEfF,GAAKC,EAAQC,EAAM,EAAI,CAE/B,CAAC,EAEGK,EAAY,IAAIL,CAAI,GACpB,OAGJ,IAAMQ,EAAU,IAAIC,EAEpBT,EAAK,iBAAiB,YAAcU,GAAK,CACrC,GAAI,EAAEA,EAAE,kBAAkB,SACtB,OAGJ,IAAMN,EAAOO,EAAqBD,EAAE,OAAQ,gBAAiB,SAAS,EAEtE,GAAI,EAAEN,aAAgB,cAAgBI,EAAQ,GAAGJ,CAAI,EACjD,OAGJ,QAAQ,IAAI,YAAY,EAEpBA,EAAK,eAAe,UAAU,SAAS,kBAAkB,IACzDA,EAAK,cAAc,QAAQ,UAAY,IAG3C,IAAMQ,EAAUR,EAAK,uBAAuB,kBAAkB,EAAE,CAAC,EAE7DQ,aAAmB,cACnBd,GAAKM,EAAMQ,CAAO,EAClBP,EAAY,IAAIL,CAAI,GAAG,gBAAgB,IAAIY,CAAO,GAGtDJ,EAAQ,IAAIJ,CAAI,CACpB,CAAC,EAEDJ,EAAK,iBAAiB,WAAaU,GAAK,CACpC,GAAI,EAAEA,EAAE,kBAAkB,SACtB,OAGJ,IAAMN,EAAOO,EAAqBD,EAAE,OAAQ,gBAAiB,SAAS,EAEtE,GACI,EAAEN,aAAgB,cAClBS,IAAiBT,GACjBU,GAAgBV,EAEhB,OAGJ,QAAQ,IAAI,WAAW,EAEnBA,EAAK,eAAe,UAAU,SAAS,kBAAkB,GACzD,OAAOA,EAAK,cAAc,QAAQ,UAGtC,IAAMQ,EAAUR,EAAK,uBAAuB,kBAAkB,EAAE,CAAC,EAE7DQ,aAAmB,cACnBL,EAAKK,CAAO,EACZP,EAAY,IAAIL,CAAI,GAAG,gBAAgB,OAAOY,CAAO,GAGzDE,EAAeV,CACnB,CAAC,EAED,IAAMW,EAAWf,EAAK,uBAAuB,kBAAkB,EAE/D,QAAWY,KAAWG,EAAU,CAC5B,IAAMhB,EAASa,EAAQ,cACjBI,EACFjB,GAAQ,cAAc,kCAAkC,GACxD,SAAS,cAAc,MAAM,EAEjCiB,EAAM,UAAU,IAAI,eAAe,EACnCA,EAAM,YAAc,cAEfA,EAAM,eACPjB,GACM,uBAAuB,gBAAgB,EAAE,CAAC,GAC1C,sBAAsB,WAAYiB,CAAK,CAErD,CAEAX,EAAY,IAAIL,EAAM,CAClB,OAAQ,KACR,gBAAiB,IAAI,IACxB,CACL,CAEA,SAASE,GAAKH,EAAiBC,EAAiB,CAC5C,IAAMiB,EAAWjB,EAAK,sBAAqB,EACrCkB,EAAanB,EAAO,sBAAqB,EACzCoB,EAAiBnB,EAAK,eAAe,sBAAqB,EAC1DoB,EAAS,GACTC,EAAU,GAEZC,EAAO,EACPC,EAAM,EAENvB,EAAK,UAAU,SAAS,kBAAkB,GAC1CsB,EAAOH,GAAgB,OAASD,EAAW,MAC3CK,EAAMJ,GAAgB,KAAOD,EAAW,IAGpCI,EAAOL,EAAS,MAAQ,OAAO,aAC/BK,GAAQH,GAAgB,MAAQD,EAAW,MAAQD,EAAS,OAI5DK,EAAO,IACPA,EAAOF,KAGXE,EAAOJ,EAAW,KAAOG,EACzBE,EAAML,EAAW,OAGbI,EAAOL,EAAS,MAAQ,OAAO,aAC/BK,EAAOJ,EAAW,MAAQD,EAAS,MAAQI,IAInDrB,EAAK,MAAM,KAAO,GAAGsB,CAAI,KACzBtB,EAAK,MAAM,IAAM,GAAGuB,CAAG,IAC3B,CCpNA,IAAMC,EAAiC,IAAIC,EACrCC,GAAyB,CAAA,EAQ/B,SAASC,GAAKC,EAAiBC,EAAsBC,EAAiB,CAClE,IAAMC,EAAaH,EAAO,sBAAqB,EACzCI,EAAcH,EAAQ,sBAAqB,EAC3CI,EAAU,EAEVC,EAAcH,EAAW,IAAMC,EAAY,OAASC,EACpDE,EAAcJ,EAAW,OAASE,EAGpCG,EAAOL,EAAW,KAAOA,EAAW,MAAQ,EAAIC,EAAY,MAAQ,EACpEK,EAAMP,EAAWK,EAAcD,EAG/BL,EAAQ,UAAU,SAAS,kBAAkB,IAC7CO,EAAOL,EAAW,MAAQE,EAC1BI,EAAMF,GAINC,EAAOJ,EAAY,MAAQ,OAAO,WAClCI,EAAO,OAAO,WAAaJ,EAAY,MAAQC,EAG1CG,EAAO,IACZA,EAAOH,GAIPI,EAAML,EAAY,OAAS,OAAO,YAClCK,EAAMH,EAGDG,EAAM,IACXA,EAAMF,GAGVN,EAAQ,MAAM,KAAO,GAAGO,CAAI,KAC5BP,EAAQ,MAAM,IAAM,GAAGQ,CAAG,IAC9B,CAOM,SAAUC,GAAKT,EAAsBU,EAAqB,GAAK,CACjEf,EAAM,KAAK,CACP,SAAWgB,GAAQ,CACXA,EAAK,KAAK,QAAQ,WAAa,MAC/BA,EAAK,KAAK,UAAU,OAAO,qBAAqB,CAExD,EACA,MAAOD,EAAY,EAAI,KACvB,KAAMV,EACT,CACL,CAQM,SAAUY,GACZb,EACAC,EACAU,EAAqB,GAAK,CAE1B,IAAMG,EAAiBC,EAAqBf,EAAQ,YAAY,GAAK,KAErED,GAAKC,EAAQC,EAASa,CAAc,EACpClB,EAAM,MAAOgB,GAASA,EAAK,KAAK,UAAU,OAAO,qBAAqB,CAAC,EAEvEhB,EAAM,KAAK,CACP,SAAWgB,GAASA,EAAK,KAAK,UAAU,IAAI,qBAAqB,EACjE,KAAMX,EACN,MAAOU,EAAY,EAAI,IAC1B,CACL,CAMM,SAAUK,GAAWhB,EAAmB,CAC1C,GAAI,CAACA,EAAO,QAAQ,UAChB,OAGJ,IAAMC,EAAU,SAAS,eAAeD,EAAO,QAAQ,SAAS,EAE3DC,IAILD,EAAO,iBAAiB,aAAc,IAAK,CACvCa,GAAKb,EAAQC,CAAO,CACxB,CAAC,EAEDD,EAAO,iBAAiB,aAAc,IAAK,CACvCJ,EAAM,MAAK,EACXc,GAAKT,CAAO,CAChB,CAAC,EAEIH,GAAY,SAASG,CAAO,IAC7BA,EAAQ,iBAAiB,aAAc,IAAK,CACxCA,EAAQ,QAAQ,UAAY,EAChC,CAAC,EAEDA,EAAQ,iBAAiB,aAAc,IAAK,CACxC,OAAOA,EAAQ,QAAQ,UACvBS,GAAKT,CAAO,CAChB,CAAC,EAEDH,GAAY,KAAKG,CAAO,GAEhC,CCpFM,SAAUgB,EACZC,EACAC,EACAC,EAAuC,CAEvC,IAAMC,EACFD,GAAS,wBAAwB,iBAC3BA,EAAQ,aACR,SAAS,cAAc,OAAO,EAElCE,EAAQ,SAAS,cAAc,OAAO,EAC5CA,EAAM,KAAO,WACbA,EAAM,QAAUF,GAAS,SAAW,GACpCE,EAAM,SAAWF,GAAS,UAAY,GACtCE,EAAM,cAAgBF,GAAS,eAAiB,GAE5CA,GAAS,KACTE,EAAM,GAAKF,EAAQ,GACnBE,EAAM,KAAOF,EAAQ,IAGzB,IAAMG,EAAO,SAAS,cAAc,MAAM,EAa1C,GAZAA,EAAK,UAAU,IAAI,GAAGL,CAAS,QAAQ,EACvCK,EAAK,YACDH,GAAS,MAAQA,GAAS,cAAc,aAAe,GAEvDA,GAAS,eACTA,EAAQ,aAAa,UAAY,IAGrCC,EAAM,YAAYC,CAAK,EACvBD,EAAM,YAAYF,CAAc,EAChCE,EAAM,YAAYE,CAAI,EAElBH,GAAS,UACT,OAAOC,EAGX,IAAMG,EAAM,SAAS,cAAc,KAAK,EACxC,OAAAA,EAAI,UAAU,IAAIN,CAAS,EAC3BM,EAAI,YAAYH,CAAK,EAEdG,CACX,CAOM,SAAUC,EAAOL,EAAuC,CAC1D,IAAMM,EAAM,SAAS,cAAc,MAAM,EACzC,OAAAA,EAAI,UAAU,IAAI,kBAAkB,EAE7BT,EAAa,cAAeS,EAAKN,CAAO,CACnD,CAMM,SAAUO,GAAWC,EAAqB,CAC5C,GAAI,CAACA,EAAS,UAAU,SAAS,aAAa,EAC1C,OAGJ,IAAMP,EAAQI,EAAO,CACjB,QAASG,EAAS,QAAQ,WAAa,KACvC,SAAUA,EAAS,QAAQ,YAAc,KACzC,cAAeA,EAAS,QAAQ,iBAAmB,KACnD,UAAW,GACX,KAAMA,EAAS,aAAe,GACjC,EAEGA,EAAS,SAAS,QAAU,IAC5BA,EAAS,YAAc,GACvBA,EAAS,YAAYP,CAAK,EAElC,CClHA,SAASQ,GACLC,EACAC,EACAC,EAAmB,CAEnB,IAAMC,EAAgB,iCAChBC,EAAS,CAACJ,GAAS,UAAU,SAASG,CAAa,EACnDE,EACFL,GAAS,eAAe,uBAAuBG,CAAa,GAAK,CAAA,EAEjEC,GAAU,CAACF,GACXG,EAAS,CAAC,GAAG,UAAU,OAAOF,CAAa,GAI1CC,IAAWF,GAAcG,GAAU,QAAU,IAC7C,CAACD,IAAW,CAACH,GAAiBI,GAAU,OAAS,KAElDL,GAAS,UAAU,OAAOG,EAAeC,CAAM,CAEvD,CAMM,SAAUE,GAAWC,EAA4B,CACnD,GAAKA,EAAgB,UAAU,SAAS,cAAc,EAItD,SAAWC,KAASD,EAAgB,SAAU,CAC1C,IAAME,EAAQ,SAAS,cAAc,MAAM,EAC3CA,EAAM,UAAU,IAAI,sBAAuB,WAAW,EACtDA,EAAM,YAAc,QAEpBD,EAAM,sBAAsB,aAAcC,CAAK,CACnD,CAEAF,EAAgB,iBAAiB,QAAUG,GAAK,CAC5C,GAAI,EAAEA,EAAE,kBAAkB,SACtB,OAGJ,IAAMC,EAASC,EAAqBF,EAAE,OAAQ,sBAAsB,EAE/DC,GAILZ,GACIY,EACAJ,EAAgB,QAAQ,iBAAmB,KAC3CA,EAAgB,QAAQ,eAAiB,IAAS,CAE1D,CAAC,EACL,CCzDM,SAAUM,GAAOC,EAAuC,CAC1D,IAAMC,EAAQ,SAAS,cAAc,MAAM,EAC3CA,EAAM,UAAU,IAAI,kBAAkB,EAEtC,IAAMC,EAAS,SAAS,cAAc,MAAM,EAC5C,OAAAA,EAAO,UAAU,IAAI,mBAAmB,EAExCD,EAAM,YAAYC,CAAM,EAEjBC,EAAa,YAAaF,EAAOD,CAAO,CACnD,CAMM,SAAUI,GAAWC,EAA0B,CACjD,GAAI,CAACA,EAAc,UAAU,SAAS,WAAW,EAC7C,OAGJ,IAAMC,EAAQP,GAAO,CACjB,QAASM,EAAc,QAAQ,WAAa,KAC5C,SAAUA,EAAc,QAAQ,YAAc,KAC9C,UAAW,GACX,KAAMA,EAAc,aAAe,GACtC,EAEGA,EAAc,SAAS,QAAU,IACjCA,EAAc,YAAc,GAC5BA,EAAc,YAAYC,CAAK,EAEvC,CCjCM,SAAUC,GAAWC,EAAkB,CAQzC,GANI,EAAEA,aAAiB,mBACnB,CAACA,EAAM,UAAU,SAAS,UAAU,GAKpCA,EAAM,QAAQ,YAAc,KAC5B,OAGJ,IAAMC,EACFD,EAAM,cAAc,iCAAiC,GACpDA,EAAM,qBAAqB,IAAI,EAAE,CAAC,EAEvCA,EAAM,iBAAiB,QAAUE,GAAK,CAE9B,EAAEA,EAAE,kBAAkB,cACtBA,EAAE,OAAO,QAAQ,YAAc,MAKnCC,GAAKH,EAAOE,EAAE,OAAQA,EAAE,OAAO,QAAQ,SAAW,WAAW,CACjE,CAAC,EAEID,GAILE,GAAKH,EAAOC,EAAgBA,EAAe,QAAQ,SAAW,YAAY,CAC9E,CAQA,SAASE,GACLH,EACAI,EACAC,EAAgB,CAEhB,IAAMC,EAAON,EAAM,qBAAqB,IAAI,EACtCO,EAAYP,EAAM,uBAAuB,kBAAkB,EAAE,CAAC,EAEpE,GAAI,CAACM,GAAQ,CAACC,EACV,OAGJ,IAAMC,EAASC,EAAMC,EAAWN,CAAM,EAAG,EAAGG,EAAU,SAAS,MAAM,EAC/DI,EAAS,MAAM,KAAKL,CAAI,EAc9B,GAZIC,aAAqB,qBACrBI,EAAO,OAAOA,EAAO,QAAQJ,CAAS,EAAG,CAAC,EAG9CI,EAAO,KAAK,CAACC,EAAGC,IACZD,EAAE,MAAMJ,CAAM,EAAG,UAAU,cAAcK,EAAE,MAAML,CAAM,EAAG,SAAS,CAAC,EAGpEH,GACAM,EAAO,QAAO,EAGdX,EAAM,QAAQ,cAAgB,KAAW,CACzC,IAAMc,EAAYL,EACd,SAAST,EAAM,QAAQ,YAAY,EACnC,EACAO,EAAU,SAAS,MAAM,EAG7B,OAAQA,EAAU,SAASO,CAAS,EAAkB,QAAQ,OAClE,CAEAV,EAAO,QAAQ,QAAUC,EAAU,aAAe,YAElD,IAAMU,EAAW,SAAS,uBAAsB,EAChDA,EAAS,OAAO,GAAGJ,CAAM,EAEzBX,EAAM,QAAQ,CAAC,EAAG,YAAYe,CAAQ,EACtCf,EAAM,QAAQ,aAAe,GAAGQ,CAAM,EAC1C,CCrFA,IAAYQ,GAAZ,SAAYA,EAAa,CAIrBA,EAAAA,EAAA,SAAA,CAAA,EAAA,WAIAA,EAAAA,EAAA,UAAA,CAAA,EAAA,YAIAA,EAAAA,EAAA,QAAA,CAAA,EAAA,UAIAA,EAAAA,EAAA,SAAA,CAAA,EAAA,WAIAA,EAAAA,EAAA,QAAA,CAAA,EAAA,UAIAA,EAAAA,EAAA,UAAA,CAAA,EAAA,YAIAA,EAAAA,EAAA,SAAA,CAAA,EAAA,WAIAA,EAAAA,EAAA,WAAA,CAAA,EAAA,YACJ,GAjCYA,IAAAA,EAAa,CAAA,EAAA,EAsCnB,IAAOC,EAAP,cAA6B,KAAK,CAWpC,YAAYC,EAAcC,EAAyB,CAC/C,MAAM,YAAYD,CAAI,EAAE,EACxB,KAAK,OAASC,CAClB,GAOSC,EAAP,cAAsCH,CAAa,CAgBrD,YAAYE,EAA2BE,EAAcC,EAAY,CAC7D,MAAM,SAAUH,CAAM,EACtB,KAAK,SAAWE,EAChB,KAAK,SAAWC,CACpB,GAMSC,EAAP,cAAmCN,CAAa,CAgBlD,YACIE,EACAK,EACAC,EAAmB,CAEnB,MAAM,SAAUN,CAAM,EACtB,KAAK,MAAQK,EACb,KAAK,SAAWC,CACpB,GCzGJ,SAASC,GAAOC,EAAeC,EAAwB,CACnD,MAAO,CACHD,EAAK,cAAc,iCAAmCC,EAAO,IAAI,EACjED,EAAK,cAAc,+BAAiCC,EAAO,IAAI,EAEvE,CAOM,SAAUC,EAAUF,EAAmBG,EAAuB,CAChE,IAAMC,EAASJ,EAAK,QAAQ,MACtB,CAACK,EAAWC,CAAU,EAAIP,GAAOC,EAAMI,CAAM,EAC7C,CAACG,EAAWC,CAAU,EAAIT,GAAOC,EAAMG,CAAG,EAEhDE,GAAW,UAAU,OAAO,2BAA2B,EACvDC,GAAY,UAAU,OAAO,yBAAyB,EACtDC,GAAW,UAAU,IAAI,2BAA2B,EACpDC,GAAY,UAAU,IAAI,yBAAyB,EAEnDR,EAAK,QAAQ,MAAQG,EACrBH,EAAK,cAAc,IAAIS,EAAoBF,EAAWH,EAAQD,CAAG,CAAC,CACtE,CAMM,SAAUO,GAAWV,EAAiB,CAExC,IAAMW,EAAQX,EAAK,iBACf,mCAAmC,EAEjCY,EAAUZ,EAAK,iBACjB,qCAAqC,EAGnCa,EAAS,KAAK,IAAID,EAAQ,OAAQD,EAAM,MAAM,EAEpD,QAASG,EAAI,EAAGA,EAAID,EAAQC,IACxBH,EAAMG,CAAC,EAAG,QAAQ,MAAQF,EAAQE,CAAC,EAAG,QAAQ,MAAQ,GAAGA,CAAC,GAI9D,IAAMC,EAAWf,EAAK,uBAAuB,eAAe,EAAE,CAAC,EAE3De,aAAoB,aACpBb,EAAUF,EAAMA,EAAK,QAAQ,OAASe,EAAS,QAAQ,KAAK,EAGhEf,EACK,cAAc,wBAAwB,GACrC,iBAAiB,QAAUgB,GAAK,CAC9B,IAAMC,EAASC,EACXF,EAAE,OACF,iBAAiB,EAGfC,aAAkB,aAIxBf,EAAUF,EAAMiB,EAAO,QAAQ,KAAK,CACxC,CAAC,CACT,CC3EA,SAASE,EACLC,EACAC,EACAC,EAAa,CAEb,IAAMC,EAASH,EAAU,uBAAuB,uBAAuB,EAAE,CAAC,EAE1E,GAAI,EAAEG,aAAkB,aACpB,OAGJ,IAAMC,EAAOD,EAAO,sBAAqB,EAErCD,EACAD,EAAM,MAAM,KAAO,GAAG,CAACG,EAAK,KAAK,KAEjCH,EAAM,MAAM,KAAO,EAE3B,CAMM,SAAUI,GAAWL,EAAsB,CAC7C,GAAI,CAACA,EAAU,UAAU,SAAS,eAAe,EAC7C,OAGJ,IAAMC,EAAQD,EAAU,uBAAuB,sBAAsB,EAAE,CAAC,EAClEM,EAAYN,EAAU,uBACxB,0BAA0B,EAC5B,CAAC,EAGC,EAAEM,aAAqB,cACtB,EAAEL,aAAiB,mBAChB,EAAEA,aAAiB,uBAK3BK,EAAU,QAAQ,cAAgBL,EAAM,YAExCF,EAAUC,EAAWC,EAAOA,EAAM,OAAS,EAAE,EAE7CD,EAAU,iBAAiB,QAAUO,GAAK,CAC3BA,EAAE,OAEN,UAAU,SAAS,qBAAqB,CAGnD,CAAC,EAEDN,EAAM,iBAAiB,QAAS,IAAK,CACjCF,EAAUC,EAAWC,EAAO,EAAK,CACrC,CAAC,EAEDA,EAAM,iBAAiB,OAAQ,IAAK,CAChCF,EAAUC,EAAWC,EAAOA,EAAM,OAAS,EAAE,CACjD,CAAC,EACL,CCxDA,IAAIO,GAAW,EAQf,SAASC,GAAaC,EAA8B,CAChD,IAAMC,EAAS,SAAS,cAAc,QAAQ,EAC9C,OAAAA,EAAO,UAAU,IAAI,iBAAkB,uBAAuB,EAC9DA,EAAO,YAAc,MAEjBD,IACAC,EAAO,QAAQ,OAASD,GAGrBC,CACX,CASA,SAASC,GAAMC,EAAgBC,EAAsB,CACjD,OAAOC,EAAKF,EAAQC,EAAOE,EAAiBF,CAAI,EAAI,QAAQN,IAAU,EAAE,CAC5E,CASA,SAASS,GACLC,EACAC,EACAT,EACAU,EAA8B,CAE9B,QAAWC,KAAWH,EAAK,SAAU,CACjC,IAAMI,EAAQD,EACRE,EAAa,GAAGJ,GAA0B,MAAM,KAEtD,GAAIG,EAAM,UAAU,SAAS,gBAAgB,EAAG,CAC5C,IAAME,EAAOC,GAAOH,CAAK,EACnBI,EAAOC,GAAOL,CAAK,EACnBM,EAAKhB,GAAMW,EAAYD,EAAM,WAAW,EAC1CO,EAAOP,GAGPF,GAAc,OACbA,GAAc,UAAYM,GAC1BN,GAAc,SAAWI,GACzBJ,GAAc,YAAcU,GAAQR,CAAK,KAE1CO,EAAOE,EAAe,CAClB,KAAMT,EAAM,aAAeM,EAC3B,GAAIb,EAAKa,EAAI,SAAS,EACzB,EAEDN,EAAM,sBAAsB,WAAYO,CAAI,EAC5CP,EAAM,OAAM,GAGXO,EAAK,KACNA,EAAK,GAAKd,EAAKa,EAAI,cAAc,GAGjCJ,GACAK,EAAK,UAAU,IAAI,eAAe,EAGtCA,EAAK,UAAU,IAAIH,EAAO,gBAAkB,iBAAiB,CACjE,SAAWJ,EAAM,UAAU,SAAS,kBAAkB,EAAG,CACrD,IAAMU,EAAQV,EAAM,uBACdX,EAASF,GAAaC,CAAU,EAChCkB,EAAKhB,GAAMW,EAAYS,GAAO,WAAW,EAE1CV,EAAM,KACPA,EAAM,GAAKM,EACXjB,EAAO,GAAKI,EAAKa,EAAI,UAAU,GAGnCI,GAAO,sBAAsB,aAAcrB,CAAM,EACjDM,GAAeK,EAAOM,EAAIlB,EAAYU,CAAU,CACpD,CACJ,CACJ,CAOA,SAASU,GAAQT,EAAgB,CAC7B,OACIA,EAAQ,eAAiB,MACzBA,EAAQ,cAAc,UAAU,SAAS,kBAAkB,CAEnE,CAOA,SAASM,GAAON,EAAgB,CAC5B,MAAO,CAACA,EAAQ,oBAAoB,UAAU,SAAS,kBAAkB,CAC7E,CAOA,SAASI,GAAOJ,EAAgB,CAC5B,OACIA,EAAQ,eAAiB,MACzBA,EAAQ,cAAc,UAAU,SAAS,SAAS,CAE1D,CAOA,SAASY,GAAaf,EAAegB,EAAW,CAC5C,OAAW,CAACC,EAAKC,CAAK,IAAK,OAAO,QAAQF,CAAG,EAAG,CAC5C,IAAMF,EAAQ,SAAS,cAAc,OAAO,EAM5C,GALAA,EAAM,UAAU,IAAI,gBAAgB,EACpCA,EAAM,YAAcG,EAEpBjB,EAAK,YAAYc,CAAK,EAElB,OAAO,KAAKI,CAAK,EAAE,OAAS,EAAG,CAC/B,IAAMC,EAAU,SAAS,cAAc,KAAK,EAC5CA,EAAQ,UAAU,IAAI,kBAAkB,EAExCJ,GAAaI,EAASD,CAAK,EAC3BlB,EAAK,YAAYmB,CAAO,CAC5B,CACJ,CACJ,CAQA,SAASC,GAAiBC,EAAmBC,EAAgB,CACzD,IAAMC,EAAsB,CAAA,EACtBJ,EAAUK,EACZH,EACA,aAAa,GACd,mBAEH,GAAI,CAACF,GAAS,UAAU,SAAS,kBAAkB,EAC/C,OAAOI,EAGX,QAAWF,KAAYF,EAAQ,iBAC3B,yBAAyBG,EAAU,iBAAmB,UAAU,EAAE,EAElED,EAAS,QAAUC,EACnBC,EAAS,KAAKF,CAAQ,EAG1B,OAAOE,CACX,CAOA,SAASE,GAAYzB,EAAmB0B,EAAmB,CACvD,GAAI,CAAAA,EAAO,UAAU,SAAS,gBAAgB,GAI9C,GAAIA,EAAO,UAAU,SAAS,gBAAgB,EAAG,CAC7C,GACI,EAAEA,EAAO,eAAe,8BAA8B,aAEtD,OAGJ,IAAMC,EAASD,EAAO,aAAe,MAErC1B,EAAK,cACD,IAAI4B,EACAF,EACAC,EAASE,EAAc,SAAWA,EAAc,UAChDC,EACIJ,EAAO,cAAc,mBACrBC,EACA3B,EAAK,QAAQ,gBAAgB,CAChC,CACJ,CAET,SAAW0B,aAAkB,iBAAkB,CAC3C,IAAMJ,EAAUI,EAAO,QACjBK,EAAiB/B,EAAK,QAAQ,iBAC9BE,EAAaF,EAAK,QAAQ,aAC1BuB,EAAsB,CAAA,GAGvBrB,GAAc,OAASA,GAAc,cACrC6B,GAAkB,QACdA,GAAkB,WAAaT,GAC/BS,GAAkB,aAAe,CAACT,IAEvCC,EAAS,KAAK,GAAGH,GAAiBM,EAAQJ,CAAO,CAAC,EAGtDtB,EAAK,cACD,IAAI4B,EACAF,EACAJ,EAAUO,EAAc,QAAUA,EAAc,UAChDN,CAAQ,CACX,CAET,EACJ,CAQM,SAAUS,EACZhC,EACAiC,EAA2B,GAAI,CAE/B,IAAIC,EAAW,8BAEf,OAAKD,IACDC,EAAW,YAAYA,CAAQ,IAG5BlC,EAAK,cAAckC,CAAQ,GAAK,IAC3C,CAgCM,SAAUC,GAAWC,EAAiB,CACxCC,GACID,EACAA,GAAM,GACNA,EAAK,QAAQ,aACbA,EAAK,QAAQ,YAAY,EAG7B,IAAME,EAAeF,EAAK,QAAQ,gBAAkB,KAEpDG,EAAUH,EAAME,EAAcA,EAAe,WAAa,EAAE,EAE5DF,EAAK,iBAAiB,QAAUI,GAAK,CAC3BA,EAAE,kBAAkB,aAI1BC,GAAYL,EAAMI,EAAE,MAAM,CAC9B,CAAC,CACL,CAOM,SAAUE,GAASN,EAAeO,EAAW,CAC/CC,GAAaR,EAAMO,CAAG,CAC1B,CAOM,SAAUE,EAAOT,EAAeU,EAAe,CACjD,GACI,CAACV,EAAK,UAAU,SAAS,kBAAkB,GAC3C,CAACA,EAAK,uBAEN,OAGJ,IAAMW,EACFX,EAAK,uBAAuB,uBAAuB,gBAAgB,EAAE,CAAC,EAErEW,IAILA,EAAO,YAAcD,EAAS,SAAW,MACzCV,EAAK,UAAU,OAAO,6BAA8BU,CAAM,EAC1DC,EAAO,UAAU,OAAO,2BAA4BD,CAAM,EAC9D,CASM,SAAUP,EACZH,EACAU,EACAE,EAAkC,CAElC,IAAMC,EAAsB,CAAA,EAExBb,EAAK,UAAU,SAAS,kBAAkB,GAC1Ca,EAAS,KAAKb,CAAI,GAIjBY,GAAkB,YAAcF,GAChCE,GAAkB,aAAe,CAACF,IAEnCG,EAAS,KACL,GAAGb,EAAK,uBACJ,mBAAmBU,EAAS,GAAK,YAAY,EAAE,CAClD,EAIT,QAAWI,KAAWD,EAClBJ,EAAOK,EAASJ,CAAM,EAG1B,OAAOG,CACX,CCnWM,SAAUE,IAAU,CAEtB,IAAMC,EAAe,CACjB,iBAAkBD,GAClB,oBAAqBA,GACrB,cAAeA,GACf,eAAgBA,GAChB,YAAaA,GACb,WAAYA,GACZ,UAAWA,GACX,gBAAiBA,GACjB,UAAWA,IAGf,OAAW,CAACE,EAAUC,CAAW,IAAK,OAAO,QAAQF,CAAY,EAAG,CAEhE,IAAMG,EAAWF,EAAS,WAAW,KAAK,EACpC,SAAS,uBAAuBA,CAAQ,EACxC,SAAS,iBAA8BA,CAAQ,EAErD,QAAWG,KAAWD,EAClBD,EAAYE,CAAsB,CAE1C,CAgBA,QAAQ,KAAK,yBAAyB,CAC1C,CChEO,IAAMC,EAAc,OAAO,OAAO,CACrC,MAAO,QACP,IAAK,MACL,eAAgB,iBAChB,eAAgB,iBAChB,cAAe,gBACf,gBAAiB,iBACrB,CAAC,EAEYC,GAAQ,OAAO,OAAO,CAC/B,SAAU,CACN,YAAa,CACT,OAAQ,CACJ,eAAgB,CAAC,CACrB,EACA,iBAAkB,CACd,yBAA0B,CAAC,CAC/B,EACA,0BAA2B,CACvB,4BAA6B,CAAC,EAC9B,iBAAkB,CAAC,EACnB,iBAAkB,CAAC,EACnB,wBAAyB,CAAC,CAC9B,EACA,yBAA0B,CACtB,eAAgB,CAAC,EACjB,iBAAkB,CAAC,CACvB,EACA,oBAAqB,CACjB,qBAAsB,CAAC,CAC3B,EACA,iBAAkB,CACd,uBAAwB,CAAC,CAC7B,EACA,oBAAqB,CACjB,sBAAuB,CAAC,EACxB,oBAAqB,CAAC,EACtB,qBAAsB,CAAC,EACvB,gBAAiB,CAAC,EAClB,kBAAmB,CAAC,CACxB,EACA,gBAAiB,CACb,eAAgB,CAAC,CACrB,EACA,cAAe,CACX,iBAAkB,CAAC,CACvB,EACA,mBAAoB,CAChB,gBAAiB,CAAC,EAClB,kBAAmB,CAAC,EACpB,kBAAmB,CAAC,CACxB,EACA,mBAAoB,CAChB,mBAAoB,CAAC,CACzB,EACA,iBAAkB,CACd,cAAe,CAAC,EAChB,YAAa,CAAC,CAClB,EACA,eAAgB,CACZ,qBAAsB,CAAC,EACvB,uBAAwB,CAAC,EACzB,qBAAsB,CAAC,CAC3B,EACA,YAAa,CACT,mBAAoB,CAAC,EACrB,iBAAkB,CAAC,EACnB,eAAgB,CAAC,CACrB,EACA,aAAc,CACV,aAAc,CAAC,CACnB,EACA,eAAgB,CACZ,eAAgB,CAAC,EACjB,mBAAoB,CAAC,EACrB,eAAgB,CAAC,CACrB,EACA,mBAAoB,CAChB,iBAAkB,CAAC,EACnB,eAAgB,CAAC,CACrB,EACA,4BAA6B,CACzB,sBAAuB,CAAC,EACxB,mBAAoB,CAAC,EACrB,yBAA0B,CAAC,CAC/B,EACA,kBAAmB,CACf,yBAA0B,CAAC,EAC3B,iBAAkB,CAAC,CACvB,EACA,aAAc,CACV,eAAgB,CAAC,EACjB,iBAAkB,CAAC,CACvB,EACA,cAAe,CACX,oBAAqB,CAAC,EACtB,iBAAkB,CAAC,CACvB,EACA,mBAAoB,CAChB,cAAe,CAAC,EAChB,oBAAqB,CAAC,EACtB,yBAA0B,CAAC,EAC3B,2BAA4B,CAAC,CACjC,EACA,kBAAmB,CACf,kBAAmB,CAAC,EACpB,iBAAkB,CAAC,EACnB,uBAAwB,CAAC,EACzB,mBAAoB,CAAC,CACzB,EACA,eAAgB,CACZ,wBAAyB,CAAC,EAC1B,eAAgB,CAAC,CACrB,EACA,eAAgB,CACZ,WAAY,CAAC,EACb,cAAe,CAAC,CACpB,EACA,eAAgB,CACZ,eAAgB,CAAC,CACrB,EACA,gBAAiB,CACb,kBAAmB,CAAC,CACxB,CACJ,EACA,IAAK,CACD,uBAAwB,CACpB,eAAgB,CAAC,EACjB,kBAAmB,CAAC,EACpB,qBAAsB,CAAC,CAC3B,EACA,mBAAoB,CAChB,yBAA0B,CAAC,EAC3B,wBAAyB,CAAC,EAC1B,mBAAoB,CAAC,CACzB,EACA,gBAAiB,CACb,gBAAiB,CAAC,CACtB,EACA,cAAe,CACX,eAAgB,CAAC,EACjB,cAAe,CAAC,EAChB,MAAO,CAAC,EACR,kBAAmB,CAAC,EACpB,qBAAsB,CAAC,CAC3B,EACA,eAAgB,CACZ,wBAAyB,CAAC,CAC9B,EACA,qBAAsB,CAClB,aAAc,CAAC,EACf,qBAAsB,CAAC,EACvB,aAAc,CAAC,EACf,iBAAkB,CAAC,EACnB,oBAAqB,CAAC,CAC1B,EACA,kBAAmB,CACf,kBAAmB,CAAC,CACxB,CACJ,CACJ,EACA,OAAQ,CACJ,YAAa,CACT,iBAAkB,CACd,kBAAmB,CAAC,CACxB,EACA,cAAe,CACX,wBAAyB,CAAC,EAC1B,6BAA8B,CAAC,CACnC,EACA,YAAa,CACT,kBAAmB,CAAC,EACpB,0BAA2B,CAAC,EAC5B,wBAAyB,CAAC,EAC1B,wBAAyB,CAAC,CAC9B,EACA,mBAAoB,CAChB,qBAAsB,CAAC,CAC3B,EACA,iBAAkB,CACd,cAAe,CAAC,EAChB,cAAe,CAAC,EAChB,eAAgB,CAAC,CACrB,EACA,iBAAkB,CACd,0BAA2B,CAAC,CAChC,EACA,kBAAmB,CACf,0BAA2B,CACvB,sBAAuB,CAAC,CAC5B,EACA,iBAAkB,CACd,cAAe,CAAC,EAChB,eAAgB,CAAC,CACrB,CACJ,EACA,mBAAoB,CAChB,kBAAmB,CAAC,CACxB,EACA,iBAAkB,CACd,kBAAmB,CAAC,CACxB,EACA,wBAAyB,CACrB,gBAAiB,CAAC,EAClB,kBAAmB,CAAC,CACxB,EACA,iBAAkB,CACd,cAAe,CAAC,CACpB,EACA,2BAA4B,CACxB,qBAAsB,CAAC,CAC3B,EACA,gBAAiB,CACb,qBAAsB,CAAC,EACvB,gBAAiB,CAAC,CACtB,EACA,gBAAiB,CACb,qBAAsB,CAClB,mBAAoB,CAAC,CACzB,EACA,gBAAiB,CACb,gBAAiB,CAAC,EAClB,wBAAyB,CAAC,CAC9B,CACJ,EACA,oBAAqB,CACjB,cAAe,CAAC,CACpB,EACA,sBAAuB,CACnB,aAAc,CAAC,CACnB,EACA,gCAAiC,CAAC,EAClC,wBAAyB,CACrB,gCAAiC,CAC7B,cAAe,CAAC,EAChB,gBAAiB,CAAC,CACtB,EACA,qBAAsB,CAClB,qBAAsB,CAAC,EACvB,uBAAwB,CAAC,CAC7B,CACJ,EACA,qBAAsB,CAClB,aAAc,CAAC,CACnB,EACA,aAAc,CACV,qBAAsB,CAClB,kBAAmB,CAAC,CACxB,EACA,oBAAqB,CACjB,SAAU,CAAC,EACX,mBAAoB,CAAC,CACzB,CACJ,EACA,aAAc,CACV,kBAAmB,CAAC,EACpB,0BAA2B,CAAC,EAC5B,wBAAyB,CAAC,EAC1B,wBAAyB,CAAC,CAC9B,EACA,uBAAwB,CACpB,gBAAiB,CAAC,EAClB,qBAAsB,CAAC,CAC3B,EACA,gBAAiB,CACb,eAAgB,CAAC,CACrB,EACA,4BAA6B,CACzB,sBAAuB,CAAC,EACxB,cAAe,CAAC,CACpB,EACA,SAAU,CAAC,EACX,kBAAmB,CACf,6BAA8B,CAAC,EAC/B,iBAAkB,CAAC,CACvB,EACA,iBAAkB,CAAC,EACnB,aAAc,CACV,MAAO,CAAC,CACZ,EACA,mCAAoC,CAChC,uBAAwB,CACpB,sBAAuB,CAAC,EACxB,oBAAqB,CAAC,CAC1B,EACA,sBAAuB,CACnB,qBAAsB,CAAC,EACvB,mBAAoB,CAAC,CACzB,CACJ,EACA,UAAW,CACP,cAAe,CAAC,EAChB,gBAAiB,CAAC,EAClB,iBAAkB,CAAC,CACvB,EACA,kCAAmC,CAAC,EACpC,WAAY,CACR,kBAAmB,CAAC,CACxB,CACJ,EACA,IAAK,CACD,2BAA4B,CACxB,eAAgB,CAAC,CACrB,EACA,8BAA+B,CAC3B,gBAAiB,CAAC,CACtB,EACA,uEACI,CAAC,EACL,cAAe,CACX,0BAA2B,CACvB,aAAc,CAAC,EACf,wBAAyB,CAAC,CAC9B,EACA,gCAAiC,CAC7B,OAAQ,CAAC,EACT,mBAAoB,CAAC,CACzB,CACJ,EACA,aAAc,CACV,yBAA0B,CAAC,CAC/B,EACA,4BAA6B,CACzB,gBAAiB,CAAC,EAClB,qBAAsB,CAAC,CAC3B,EACA,uBAAwB,CACpB,uBAAwB,CAAC,CAC7B,EACA,mBAAoB,CAChB,8BAA+B,CAAC,CACpC,EACA,+CAAgD,CAC5C,8BAA+B,CAC3B,mBAAoB,CAAC,CACzB,EACA,iCAAkC,CAC9B,eAAgB,CAAC,CACrB,CACJ,CACJ,CACJ,EACA,iBAAkB,CACd,cAAe,CACX,aAAc,CAAC,EACf,cAAe,CAAC,EAChB,gBAAiB,CAAC,EAClB,eAAgB,CAAC,EACjB,QAAS,CAAC,EACV,QAAS,CAAC,EACV,kBAAmB,CAAC,EACpB,oBAAqB,CAAC,EACtB,oBAAqB,CAAC,EACtB,iBAAkB,CAAC,CACvB,EACA,6BAA8B,CAC1B,aAAc,CAAC,EACf,cAAe,CAAC,EAChB,UAAW,CAAC,EACZ,sBAAuB,CAAC,EACxB,uBAAwB,CAAC,EACzB,sBAAuB,CAAC,EACxB,gBAAiB,CAAC,EAClB,kBAAmB,CAAC,EACpB,uBAAwB,CAAC,EACzB,kBAAmB,CAAC,EACpB,WAAY,CAAC,EACb,kBAAmB,CAAC,EACpB,eAAgB,CAAC,EACjB,QAAS,CAAC,EACV,cAAe,CAAC,EAChB,oBAAqB,CAAC,EACtB,WAAY,CAAC,EACb,wBAAyB,CAAC,EAC1B,eAAgB,CAAC,EACjB,YAAa,CAAC,EACd,wBAAyB,CAAC,EAC1B,yBAA0B,CAAC,EAC3B,iBAAkB,CAAC,EACnB,iBAAkB,CAAC,EACnB,gBAAiB,CAAC,EAClB,qBAAsB,CAAC,EACvB,aAAc,CAAC,CACnB,EACA,uBAAwB,CACpB,cAAe,CAAC,EAChB,UAAW,CAAC,EACZ,sBAAuB,CAAC,EACxB,uBAAwB,CAAC,EACzB,sBAAuB,CAAC,EACxB,gBAAiB,CAAC,EAClB,kBAAmB,CAAC,EACpB,uBAAwB,CAAC,EACzB,kBAAmB,CAAC,EACpB,WAAY,CAAC,EACb,kBAAmB,CAAC,EACpB,eAAgB,CAAC,EACjB,cAAe,CAAC,EAChB,oBAAqB,CAAC,EACtB,WAAY,CAAC,EACb,wBAAyB,CAAC,EAC1B,eAAgB,CAAC,EACjB,YAAa,CAAC,EACd,yBAA0B,CAAC,EAC3B,iBAAkB,CAAC,EACnB,gBAAiB,CAAC,EAClB,qBAAsB,CAAC,EACvB,aAAc,CAAC,CACnB,EACA,sBAAuB,CACnB,sBAAuB,CAAC,EACxB,uBAAwB,CAAC,EACzB,WAAY,CAAC,EACb,wBAAyB,CAAC,EAC1B,gBAAiB,CAAC,EAClB,qBAAsB,CAAC,EACvB,aAAc,CAAC,CACnB,CACJ,EACA,KAAM,CACF,qBAAsB,CAClB,kCAAmC,CAAC,EACpC,eAAgB,CAAC,EACjB,kBAAmB,CAAC,EACpB,mBAAoB,CAAC,EACrB,yBAA0B,CAAC,EAC3B,qBAAsB,CAClB,wBAAyB,CAAC,EAC1B,aAAc,CAAC,EACf,YAAa,CAAC,EACd,WAAY,CAAC,EACb,UAAW,CAAC,EACZ,oBAAqB,CAAC,EACtB,iBAAkB,CAAC,CACvB,EACA,kBAAmB,CACf,qBAAsB,CAAC,EACvB,oBAAqB,CAAC,EACtB,8BAA+B,CAAC,EAChC,oCAAqC,CAAC,EACtC,kCAAmC,CAAC,EACpC,kCAAmC,CAAC,EACpC,0BAA2B,CAAC,CAChC,EACA,qBAAsB,CAAC,EACvB,qBAAsB,CAAC,EACvB,eAAgB,CAAC,EACjB,SAAU,CAAC,CACf,EACA,OAAQ,CACJ,uBAAwB,CACpB,mBAAoB,CAAC,EACrB,mBAAoB,CAAC,EACrB,gBAAiB,CAAC,EAClB,uBAAwB,CAAC,CAC7B,EACA,yBAA0B,CACtB,mBAAoB,CAAC,EACrB,uBAAwB,CAAC,EACzB,yBAA0B,CAAC,EAC3B,mBAAoB,CAAC,EACrB,mBAAoB,CAAC,EACrB,eAAgB,CAAC,EACjB,UAAW,CAAC,EACZ,oBAAqB,CAAC,EACtB,aAAc,CAAC,EACf,qBAAsB,CAAC,EACvB,oBAAqB,CAAC,EACtB,qBAAsB,CAAC,EACvB,MAAO,CAAC,CACZ,EACA,uBAAwB,CACpB,mBAAoB,CAAC,EACrB,eAAgB,CAAC,EACjB,gBAAiB,CAAC,EAClB,eAAgB,CAAC,CACrB,EACA,oBAAqB,CACjB,iBAAkB,CAAC,CACvB,EACA,wBAAyB,CACrB,mBAAoB,CAAC,EACrB,uBAAwB,CAAC,EACzB,kBAAmB,CAAC,EACpB,sBAAuB,CAAC,EACxB,sBAAuB,CAAC,EACxB,0BAA2B,CAAC,EAC5B,yBAA0B,CAAC,EAC3B,qBAAsB,CAAC,EACvB,uBAAwB,CAAC,EACzB,qBAAsB,CAAC,EACvB,uBAAwB,CAAC,EACzB,uBAAwB,CAAC,EACzB,kBAAmB,CAAC,EACpB,aAAc,CAAC,EACf,cAAe,CAAC,EAChB,uBAAwB,CAAC,EACzB,sBAAuB,CAAC,EACxB,0BAA2B,CAAC,EAC5B,qBAAsB,CAAC,EACvB,yBAA0B,CAAC,EAC3B,wBAAyB,CAAC,EAC1B,4BAA6B,CAAC,EAC9B,uBAAwB,CAAC,EACzB,2BAA4B,CAAC,EAC7B,uBAAwB,CAAC,EACzB,2BAA4B,CAAC,EAC7B,sBAAuB,CAAC,EACxB,0BAA2B,CAAC,EAC5B,mBAAoB,CAAC,EACrB,uBAAwB,CAAC,EACzB,kBAAmB,CAAC,EACpB,sBAAuB,CAAC,CAC5B,EACA,wBAAyB,CACrB,uBAAwB,CAAC,EACzB,kBAAmB,CAAC,EACpB,kBAAmB,CAAC,EACpB,kBAAmB,CAAC,EACpB,kBAAmB,CAAC,EACpB,sBAAuB,CAAC,EACxB,wBAAyB,CAAC,EAC1B,kBAAmB,CAAC,EACpB,cAAe,CAAC,EAChB,eAAgB,CAAC,EACjB,cAAe,CAAC,EAChB,iBAAkB,CAAC,EACnB,uBAAwB,CAAC,EACzB,eAAgB,CAAC,EACjB,cAAe,CAAC,EAChB,eAAgB,CAAC,EACjB,aAAc,CAAC,EACf,2BAA4B,CAAC,EAC7B,6BAA8B,CAAC,EAC/B,wBAAyB,CAAC,EAC1B,UAAW,CAAC,EACZ,0BAA2B,CAAC,EAC5B,KAAM,CAAC,EACP,gBAAiB,CAAC,EAClB,iBAAkB,CAAC,EACnB,eAAgB,CAAC,EACjB,gBAAiB,CAAC,EAClB,oBAAqB,CAAC,EACtB,kBAAmB,CAAC,EACpB,gBAAiB,CAAC,EAClB,oBAAqB,CAAC,EACtB,sBAAuB,CAAC,EACxB,kBAAmB,CAAC,EACpB,oBAAqB,CAAC,EACtB,kBAAmB,CAAC,EACpB,eAAgB,CAAC,EACjB,gBAAiB,CAAC,EAClB,cAAe,CAAC,EAChB,gBAAiB,CAAC,EAClB,kBAAmB,CAAC,EACpB,oBAAqB,CAAC,EACtB,wBAAyB,CAAC,EAC1B,gBAAiB,CAAC,EAClB,eAAgB,CAAC,EACjB,sBAAuB,CAAC,EACxB,mBAAoB,CAAC,EACrB,sBAAuB,CAAC,EACxB,aAAc,CAAC,EACf,kBAAmB,CAAC,EACpB,iBAAkB,CAAC,EACnB,qBAAsB,CAAC,EACvB,qBAAsB,CAAC,CAC3B,EACA,qBAAsB,CAClB,WAAY,CAAC,EACb,mBAAoB,CAAC,EACrB,WAAY,CAAC,EACb,iBAAkB,CAAC,EACnB,SAAU,CAAC,EACX,oBAAqB,CAAC,EACtB,cAAe,CAAC,EAChB,aAAc,CAAC,EACf,cAAe,CAAC,EAChB,sBAAuB,CAAC,CAC5B,EACA,kCAAmC,CAAC,EACpC,wBAAyB,CACrB,mBAAoB,CAAC,EACrB,iBAAkB,CAAC,EACnB,kBAAmB,CAAC,EACpB,uBAAwB,CAAC,EACzB,aAAc,CAAC,EACf,kBAAmB,CAAC,EACpB,uBAAwB,CAAC,EACzB,6BAA8B,CAAC,EAC/B,mBAAoB,CAAC,EACrB,yBAA0B,CAAC,EAC3B,6BAA8B,CAAC,EAC/B,oBAAqB,CAAC,EACtB,iBAAkB,CAAC,EACnB,eAAgB,CAAC,EACjB,uBAAwB,CAAC,EACzB,uBAAwB,CAAC,EACzB,gBAAiB,CAAC,EAClB,0BAA2B,CAAC,CAChC,EACA,kBAAmB,CACf,uBAAwB,CAAC,EACzB,sBAAuB,CAAC,EACxB,sBAAuB,CAAC,EACxB,yBAA0B,CAAC,EAC3B,qBAAsB,CAAC,EACvB,oBAAqB,CAAC,EACtB,cAAe,CAAC,EAChB,uBAAwB,CAAC,EACzB,mBAAoB,CAAC,EACrB,iBAAkB,CAAC,CACvB,CACJ,EACA,iBAAkB,CACd,mCAAoC,CAAC,EACrC,QAAS,CAAC,CACd,EACA,oBAAqB,CACjB,wBAAyB,CACrB,aAAc,CAAC,EACf,mBAAoB,CAAC,EACrB,uBAAwB,CAAC,CAC7B,CACJ,EACA,oBAAqB,CACjB,qBAAsB,CAClB,gBAAiB,CAAC,EAClB,SAAU,CAAC,EACX,iBAAkB,CAAC,EACnB,WAAY,CAAC,EACb,gBAAiB,CAAC,EAClB,oBAAqB,CAAC,EACtB,OAAQ,CAAC,EACT,WAAY,CAAC,EACb,eAAgB,CAAC,CACrB,EACA,oBAAqB,CACjB,SAAU,CAAC,EACX,aAAc,CAAC,EACf,uBAAwB,CAAC,EACzB,aAAc,CAAC,EACf,WAAY,CAAC,EACb,YAAa,CAAC,EACd,WAAY,CAAC,EACb,eAAgB,CAAC,EACjB,2BAA4B,CAAC,EAC7B,wBAAyB,CAAC,EAC1B,4BAA6B,CAAC,EAC9B,oBAAqB,CAAC,EACtB,sBAAuB,CAAC,EACxB,0BAA2B,CAAC,EAC5B,6BAA8B,CAAC,EAC/B,kBAAmB,CAAC,EACpB,mBAAoB,CAAC,EACrB,oBAAqB,CAAC,EACtB,mBAAoB,CAAC,EACrB,wBAAyB,CAAC,EAC1B,sBAAuB,CAAC,EACxB,iBAAkB,CAAC,EACnB,OAAQ,CAAC,CACb,CACJ,EACA,mBAAoB,CAChB,qBAAsB,CAClB,WAAY,CAAC,EACb,cAAe,CAAC,EAChB,sBAAuB,CAAC,EACxB,gBAAiB,CAAC,EAClB,iBAAkB,CAAC,EACnB,gBAAiB,CAAC,EAClB,kBAAmB,CAAC,EACpB,0BAA2B,CAAC,CAChC,CACJ,EACA,mBAAoB,CAChB,cAAe,CACX,aAAc,CAAC,EACf,kBAAmB,CAAC,EACpB,iBAAkB,CAAC,EACnB,kBAAmB,CAAC,EACpB,2BAA4B,CAAC,EAC7B,kBAAmB,CAAC,EACpB,oBAAqB,CAAC,EACtB,wBAAyB,CAAC,EAC1B,mBAAoB,CAAC,EACrB,uBAAwB,CAAC,EACzB,YAAa,CAAC,EACd,UAAW,CAAC,EACZ,mBAAoB,CAAC,EACrB,qBAAsB,CAAC,CAC3B,CACJ,EACA,YAAa,CACT,sBAAuB,CACnB,iBAAkB,CAAC,EACnB,qBAAsB,CAAC,EACvB,gBAAiB,CAAC,EAClB,oBAAqB,CAAC,EACtB,iBAAkB,CAAC,EACnB,YAAa,CAAC,EACd,UAAW,CAAC,EACZ,oBAAqB,CAAC,EACtB,wBAAyB,CAAC,EAC1B,mBAAoB,CAAC,EACrB,uBAAwB,CAAC,EACzB,eAAgB,CAAC,EACjB,0BAA2B,CAAC,EAC5B,yBAA0B,CAAC,EAC3B,mBAAoB,CAAC,EACrB,sBAAuB,CAAC,EACxB,mBAAoB,CAAC,EACrB,gBAAiB,CAAC,EAClB,eAAgB,CAAC,EACjB,oBAAqB,CAAC,EACtB,gBAAiB,CAAC,EAClB,oBAAqB,CAAC,EACtB,eAAgB,CAAC,EACjB,mBAAoB,CAAC,EACrB,gBAAiB,CAAC,EAClB,mBAAoB,CAAC,EACrB,aAAc,CAAC,EACf,oBAAqB,CAAC,EACtB,qBAAsB,CAAC,CAC3B,CACJ,EACA,eAAgB,CACZ,kBAAmB,CACf,gBAAiB,CAAC,EAClB,oBAAqB,CAAC,EACtB,kBAAmB,CAAC,EACpB,iBAAkB,CAAC,EACnB,0BAA2B,CAAC,CAChC,EACA,mBAAoB,CAAC,CACzB,EACA,4BAA6B,CACzB,wBAAyB,CACrB,iBAAkB,CAAC,EACnB,mBAAoB,CAAC,EACrB,iBAAkB,CAAC,EACnB,aAAc,CAAC,EACf,MAAO,CAAC,EACR,aAAc,CAAC,EACf,mBAAoB,CAAC,EACrB,aAAc,CAAC,EACf,kBAAmB,CAAC,EACpB,cAAe,CAAC,EAChB,iBAAkB,CAAC,EACnB,sBAAuB,CAAC,EACxB,yBAA0B,CAAC,EAC3B,oBAAqB,CAAC,EACtB,qBAAsB,CAAC,CAC3B,EACA,sBAAuB,CACnB,mBAAoB,CAAC,EACrB,eAAgB,CAAC,EACjB,sBAAuB,CAAC,EACxB,oBAAqB,CAAC,EACtB,kBAAmB,CAAC,CACxB,CACJ,EACA,mBAAoB,CAChB,sBAAuB,CACnB,0BAA2B,CAAC,EAC5B,yBAA0B,CAAC,EAC3B,iBAAkB,CAAC,EACnB,sBAAuB,CAAC,EACxB,qBAAsB,CAAC,EACvB,0BAA2B,CAAC,EAC5B,kBAAmB,CAAC,EACpB,mBAAoB,CAAC,EACrB,kBAAmB,CAAC,EACpB,uBAAwB,CAAC,EACzB,sBAAuB,CAAC,EACxB,kBAAmB,CAAC,EACpB,2BAA4B,CAAC,EAC7B,4BAA6B,CAAC,EAC9B,qBAAsB,CAAC,EACvB,gCAAiC,CAAC,EAClC,uBAAwB,CAAC,EACzB,yBAA0B,CAAC,EAC3B,oBAAqB,CAAC,EACtB,0BAA2B,CAAC,EAC5B,uBAAwB,CAAC,CAC7B,CACJ,EACA,eAAgB,CACZ,uBAAwB,CACpB,2BAA4B,CAAC,EAC7B,qBAAsB,CAAC,EACvB,iBAAkB,CAAC,EACnB,iBAAkB,CAAC,EACnB,kBAAmB,CAAC,EACpB,gBAAiB,CAAC,EAClB,oBAAqB,CAAC,EACtB,yBAA0B,CAAC,EAC3B,eAAgB,CAAC,EACjB,aAAc,CAAC,EACf,cAAe,CAAC,EAChB,OAAQ,CAAC,CACb,CACJ,EACA,eAAgB,CACZ,yBAA0B,CACtB,wBAAyB,CAAC,EAC1B,qBAAsB,CAAC,EACvB,oBAAqB,CAAC,EACtB,sBAAuB,CAAC,CAC5B,CACJ,EACA,kBAAmB,CACf,yBAA0B,CAAC,CAC/B,CACJ,EACA,QAAS,CACL,kBAAmB,CACf,0BAA2B,CACvB,wBAAyB,CAAC,CAC9B,EACA,iBAAkB,CACd,uCAAwC,CAAC,CAC7C,EACA,mBAAoB,CAChB,yCAA0C,CAAC,CAC/C,EACA,iBAAkB,CACd,yBAA0B,CAAC,CAC/B,EACA,YAAa,CACT,sCAAuC,CAAC,CAC5C,EACA,kBAAmB,CACf,mBAAoB,CAAC,CACzB,EACA,eAAgB,CACZ,qCAAsC,CAAC,CAC3C,EACA,mBAAoB,CAChB,eAAgB,CAAC,CACrB,EACA,4BAA6B,CACzB,uDAAwD,CAAC,EACzD,yCAA0C,CAAC,CAC/C,EACA,mBAAoB,CAChB,sBAAuB,CAAC,CAC5B,EACA,eAAgB,CACZ,qBAAsB,CAClB,sBAAuB,CAAC,EACxB,kCAAmC,CAAC,EACpC,aAAc,CAAC,CACnB,EACA,0BAA2B,CAAC,EAC5B,qBAAsB,CAClB,gBAAiB,CAAC,EAClB,aAAc,CAAC,CACnB,CACJ,CACJ,EACA,0BAA2B,CACvB,iBAAkB,CACd,oDAAqD,CAAC,CAC1D,EACA,OAAQ,CACJ,yDAA0D,CAAC,CAC/D,EACA,yBAA0B,CACtB,iDAAkD,CAAC,CACvD,EACA,oBAAqB,CACjB,6BAA8B,CAAC,EAC/B,gCAAiC,CAAC,CACtC,EACA,eAAgB,CACZ,+BAAgC,CAAC,EACjC,oBAAqB,CAAC,EACtB,6BAA8B,CAAC,EAC/B,kDAAmD,CAAC,EACpD,0BAA2B,CAAC,CAChC,EACA,cAAe,CACX,yCAA0C,CAAC,CAC/C,EACA,kBAAmB,CACf,yCAA0C,CAAC,CAC/C,EACA,eAAgB,CACZ,uCAAwC,CAAC,EACzC,wDAAyD,CAAC,EAC1D,mCAAoC,CAAC,CACzC,EACA,eAAgB,CACZ,iDAAkD,CAAC,CACvD,CACJ,EACA,eAAgB,CACZ,gBAAiB,CACb,qBAAsB,CAAC,CAC3B,EACA,mBAAoB,CAChB,gBAAiB,CAAC,EAClB,kBAAmB,CAAC,EACpB,kBAAmB,CAAC,CACxB,EACA,eAAgB,CACZ,uBAAwB,CAAC,CAC7B,EACA,aAAc,CACV,eAAgB,CAAC,CACrB,EACA,eAAgB,CACZ,oBAAqB,CAAC,CAC1B,EACA,4BAA6B,CACzB,mBAAoB,CAAC,CACzB,EACA,kBAAmB,CACf,iBAAkB,CAAC,EACnB,uBAAwB,CAAC,EACzB,mBAAoB,CAAC,CACzB,EACA,eAAgB,CACZ,eAAgB,CAAC,CACrB,EACA,eAAgB,CACZ,qBAAsB,CAAC,CAC3B,CACJ,EACA,iBAAkB,CACd,0BAA2B,CACvB,mBAAoB,CAAC,EACrB,aAAc,CAAC,EACf,kCAAmC,CAAC,CACxC,EACA,iBAAkB,CACd,gBAAiB,CAAC,EAClB,uBAAwB,CAAC,EACzB,iBAAkB,CAAC,EACnB,cAAe,CAAC,EAChB,6BAA8B,CAAC,EAC/B,mCAAoC,CAAC,EACrC,uBAAwB,CAAC,CAC7B,EACA,gBAAiB,CACb,8BAA+B,CAC3B,cAAe,CAAC,EAChB,gBAAiB,CAAC,EAClB,qBAAsB,CAAC,EACvB,KAAM,CAAC,EACP,cAAe,CAAC,CACpB,EACA,iBAAkB,CAAC,EACnB,kBAAmB,CAAC,EACpB,mBAAoB,CAAC,EACrB,uBAAwB,CAAC,EACzB,0BAA2B,CAAC,EAC5B,qBAAsB,CAAC,CAC3B,EACA,gBAAiB,CACb,uBAAwB,CAAC,EACzB,cAAe,CAAC,CACpB,EACA,mBAAoB,CAChB,kBAAmB,CAAC,CACxB,EACA,iBAAkB,CACd,kBAAmB,CAAC,EACpB,yBAA0B,CAAC,EAC3B,wBAAyB,CAAC,EAC1B,MAAO,CAAC,EACR,kBAAmB,CAAC,EACpB,uBAAwB,CAAC,CAC7B,EACA,eAAgB,CACZ,uBAAwB,CAAC,EACzB,sBAAuB,CAAC,EACxB,6BAA8B,CAAC,CACnC,EACA,YAAa,CACT,uBAAwB,CAAC,EACzB,0BAA2B,CAAC,EAC5B,mBAAoB,CAAC,EACrB,2BAA4B,CAAC,CACjC,EACA,4BAA6B,CACzB,oBAAqB,CAAC,CAC1B,EACA,mBAAoB,CAChB,iCAAkC,CAAC,EACnC,aAAc,CAAC,EACf,4BAA6B,CAAC,CAClC,EACA,eAAgB,CACZ,OAAQ,CAAC,EACT,mBAAoB,CAAC,EACrB,mBAAoB,CAAC,EACrB,wBAAyB,CAAC,CAC9B,EACA,eAAgB,CACZ,sBAAuB,CAAC,EACxB,kBAAmB,CAAC,CACxB,EACA,2CAA4C,CACxC,YAAa,CAAC,EACd,YAAa,CAAC,CAClB,EACA,wBAAyB,CACrB,2BAA4B,CAAC,CACjC,EACA,cAAe,CACX,2BAA4B,CAAC,EAC7B,wBAAyB,CAAC,EAC1B,mBAAoB,CAAC,EACrB,cAAe,CAAC,CACpB,CACJ,EACA,oBAAqB,CACjB,0BAA2B,CACvB,iDAAkD,CAAC,CACvD,EACA,iBAAkB,CACd,2CAA4C,CAAC,CACjD,EACA,oBAAqB,CACjB,gDAAiD,CAAC,EAClD,oCAAqC,CAAC,CAC1C,EACA,gBAAiB,CACb,2CAA4C,CAAC,CACjD,EACA,mBAAoB,CAChB,kDAAmD,CAAC,CACxD,EACA,eAAgB,CACZ,iCAAkC,CAAC,CACvC,EACA,mBAAoB,CAChB,uCAAwC,CAAC,CAC7C,EACA,aAAc,CACV,kDAAmD,CAAC,EACpD,qCAAsC,CAAC,EACvC,qCAAsC,CAAC,EACvC,yDAA0D,CAAC,EAC3D,wDAAyD,CAAC,CAC9D,EACA,mBAAoB,CAChB,uDAAwD,CAAC,EACzD,oDAAqD,CAAC,EACtD,sCAAuC,CAAC,CAC5C,EACA,kBAAmB,CACf,+CAAgD,CAAC,EACjD,uDAAwD,CAAC,CAC7D,EACA,eAAgB,CACZ,8BAA+B,CAAC,EAChC,uDAAwD,CAAC,EACzD,+BAAgC,CAAC,EACjC,sCAAuC,CAAC,EACxC,gDAAiD,CAAC,EAClD,iDAAkD,CAAC,EACnD,wCAAyC,CACrC,oCAAqC,CAAC,EACtC,qCAAsC,CAAC,CAC3C,EACA,mCAAoC,CAAC,EACrC,kCAAmC,CAC/B,cAAe,CACX,yDACI,CAAC,CACT,EACA,eAAgB,CACZ,8CAA+C,CAAC,EAChD,8CAA+C,CAAC,EAChD,2CAA4C,CAAC,CACjD,CACJ,CACJ,EACA,eAAgB,CACZ,uDAAwD,CAAC,EACzD,sDAAuD,CAAC,CAC5D,CACJ,EACA,sBAAuB,CACnB,0BAA2B,CACvB,gBAAiB,CAAC,EAClB,kBAAmB,CAAC,CACxB,EACA,gBAAiB,CACb,uBAAwB,CAAC,EACzB,cAAe,CAAC,CACpB,EACA,eAAgB,CACZ,kBAAmB,CAAC,EACpB,yBAA0B,CAAC,CAC/B,EACA,YAAa,CACT,sBAAuB,CAAC,CAC5B,EACA,mBAAoB,CAChB,kBAAmB,CAAC,CACxB,EACA,kBAAmB,CACf,mBAAoB,CAAC,EACrB,qBAAsB,CAAC,EACvB,MAAO,CAAC,CACZ,EACA,kBAAmB,CACf,gBAAiB,CAAC,CACtB,EACA,eAAgB,CACZ,mBAAoB,CAAC,EACrB,wBAAyB,CAAC,CAC9B,EACA,gBAAiB,CACb,oBAAqB,CAAC,EACtB,oBAAqB,CAAC,EACtB,0BAA2B,CAAC,EAC5B,sBAAuB,CAAC,CAC5B,EACA,iBAAkB,CACd,aAAc,CAAC,EACf,cAAe,CAAC,EAChB,kBAAmB,CAAC,EACpB,iBAAkB,CAAC,EACnB,YAAa,CAAC,CAClB,EACA,uBAAwB,CACpB,cAAe,CAAC,CACpB,CACJ,CACJ,CACJ,CAAC,EC7mCM,SAASC,IAAa,CACzB,SACK,eAAe,UAAU,GACxB,iBAAiB,QAAU,GAAMC,EAAW,EAAE,aAAa,CAAC,EAElE,SAAS,eAAe,WAAW,GAAG,iBAAiB,QAAS,IAAM,CAClE,aAAa,MAAM,EACnB,SAAS,OAAO,CACpB,CAAC,CACL,CCRO,SAASC,IAAa,CACzB,SACK,eAAe,UAAU,GACxB,iBAAiB,QAAU,GAAMC,EAAW,EAAE,aAAa,CAAC,EAElE,SAAS,eAAe,WAAW,GAAG,iBAAiB,QAAS,IAAM,CAClE,QAAWC,KAAOC,EACd,aAAa,WAAWD,CAAG,EAG/B,SAAS,OAAO,CACpB,CAAC,CACL,CCTO,SAASE,EACZC,EACAC,EAA0B,KACtB,CACAA,EACAC,EAAS,SAAS,KAAMD,CAAK,EAE7BA,EAAQE,EAAY,SAAS,KAAM,QAAS,MAAM,EAGtD,IAAMC,EAAaH,GAAS,QAAU,OAAS,QAC/CD,EAAY,UAAY,GAAGI,CAAU,QAEjCH,GACA,aAAa,QAAQI,EAAY,MAAOJ,CAAK,CAErD,CAEO,SAASK,IAAa,CACzBP,EACI,SAAS,eAAe,cAAc,EACtC,aAAa,QAAQM,EAAY,KAAK,GAAK,SAAS,KAAK,QAAQ,OACrE,EAEA,IAAME,EAAM,aAAa,QAAQF,EAAY,GAAG,GAAK,GAC/CG,EAAO,SAAS,eAAe,WAAW,EAE5CA,GAAQD,GACRE,EAAUD,EAAMD,CAAG,EAGvB,IAAMG,EAAyB,OAAO,OAAOL,CAAW,EAExD,QAASM,EAAI,EAAGA,EAAI,aAAa,OAAQA,IAAK,CAC1C,IAAMC,EAAM,aAAa,IAAID,CAAC,EAE9B,GAAI,CAACC,GAAOF,EAAa,SAASE,CAAG,EACjC,SAGJ,IAAMC,EAAU,SAAS,eAAeD,CAAG,EAEvCC,GAAS,UAAU,SAAS,kBAAkB,EAC9CC,EAAOD,EAAS,EAAI,EACbA,aAAmB,mBAC1BA,EAAQ,QAAU,GAE1B,CAEAE,GAAa,CACjB,CAEO,SAASC,EACZJ,EACAK,EACAC,EAAuB,GACvBC,EAAmB,GACrB,CACE,GAAI,CAACP,EACD,OAGJ,IAAMQ,EAAUD,EAAU,eAAiB,aAEvCF,EACAG,EAAQ,QAAQR,EAAKM,GAAS,EAAE,EAEhCE,EAAQ,WAAWR,CAAG,CAE9B,CCrEA,IAAIS,EAAoD,KACpDC,EAAsD,KACtDC,EAAsD,KAGtDC,EAAmD,KACnDC,EAAqD,KAEzD,SAASC,GAAmBC,EAAwBC,EAA0B,CAC1E,IAAMC,EAAkB,SAAS,eAAe,YAAY,EACtDC,EAAoB,SAAS,eAAe,SAAS,EAEvDD,IACAA,EAAgB,MAAM,QAAUF,EAAgB,OAAS,QAGzDG,IACAA,EAAkB,MAAM,QAAUF,EAAkB,OAAS,OAErE,CAEA,SAASG,GAAmBC,EAAwBC,EAAwB,CACxE,QAAWC,KAAW,SAAS,uBAAuB,SAAS,EAAG,CAC9D,IAAMC,EAAOD,EAEbC,EAAK,QAAQ,iBAAmBH,EAChCG,EAAK,QAAQ,iBAAmBF,CACpC,CACJ,CAEO,SAASG,IAAa,CACzB,SAAS,eAAe,UAAU,GAAG,iBAAiB,QAAS,IAAM,CACjE,SACK,iBAAiB,sBAAsB,EACvC,QAASC,GAAMA,EAAE,UAAU,OAAO,qBAAqB,CAAC,EAC7DC,EAAW,iBAAiB,CAChC,CAAC,EAED,SACK,eAAe,gBAAgB,GAC9B,iBAAiB,QAAS,IAAMA,EAAW,cAAc,CAAC,EAEhE,SACK,eAAe,gBAAgB,GAC9B,iBAAiB,QAAS,IAAMA,EAAW,cAAc,CAAC,EAEhE,SACK,eAAe,iBAAiB,GAC/B,iBAAiB,QAAU,GAAMC,EAAW,EAAE,aAAa,CAAC,EAElE,SAAS,eAAe,eAAe,GAAG,iBAAiB,QAAU,GAAM,CACvEC,GAAa,EACbD,EAAW,EAAE,aAAa,CAC9B,CAAC,EAEDlB,EAAwB,SACnB,eAAe,iBAAiB,GAC/B,cAAc,OAAO,EAC3BC,EAA0B,SACrB,eAAe,mBAAmB,GACjC,cAAc,OAAO,EAC3BC,EAA0B,SACrB,eAAe,mBAAmB,GACjC,cAAc,OAAO,EAE3BC,EAAuB,SAClB,eAAe,wBAAwB,GACtC,cAAc,OAAO,EAC3BC,EAAyB,SACpB,eAAe,2BAA2B,GACzC,cAAc,OAAO,CAC/B,CAEO,SAASgB,IAAe,CAC3B,GACI,CAACjB,GACD,CAACC,GACD,CAACJ,GACD,CAACC,GACD,CAACC,EAED,OAIJ,IAAMI,EAAgB,aAAa,QAAQe,EAAY,aAAa,EAC9Dd,EAAkB,aAAa,QAAQc,EAAY,eAAe,EAEpEf,IACAH,EAAqB,QAAUG,GAAiB,MAGhDC,IACAH,EAAuB,QAAUG,GAAmB,MAGxDF,GAAmBC,GAAiB,KAAMC,GAAmB,IAAI,EAGjE,IAAMI,EACF,aAAa,QAAQU,EAAY,cAAc,GAAK,UAClDT,EACF,aAAa,QAAQS,EAAY,cAAc,GAAK,YAExDrB,EAAsB,QAClBW,GAAkB,WAAaA,GAAkB,OAErDV,EAAwB,QACpBU,GAAkB,aAAeA,GAAkB,OACvDT,EAAwB,QAAUU,GAAkB,YAEpDF,GAAmBC,EAAgBC,CAAc,CACrD,CAEO,SAASO,IAAe,CAC3B,GACI,CAACnB,GACD,CAACC,GACD,CAACC,GACD,CAACC,GACD,CAACC,EAED,OAIJkB,EAAcD,EAAY,cAAelB,EAAqB,OAAO,EACrEmB,EAAcD,EAAY,gBAAiBjB,EAAuB,OAAO,EAEzEC,GACIF,EAAqB,QACrBC,EAAuB,OAC3B,EAGA,IAAMmB,EAAsBrB,EAAwB,QAC9C,YACA,GACFsB,EAA8B,GAG9BxB,EAAsB,SAAW,CAACC,EAAwB,QAC1DuB,EAAsB,UAEtBvB,EAAwB,SACxB,CAACD,EAAsB,QAEvBwB,EAAsB,YAEtBxB,EAAsB,SACtBC,EAAwB,UAExBuB,EAAsB,QAG1BF,EACID,EAAY,eACZG,GAAuB,GACvBA,CACJ,EAEAF,EACID,EAAY,eACZnB,EAAwB,QACxB,WACJ,EAEAQ,GAAmBc,EAAqBD,CAAmB,CAC/D,CCzKO,SAASE,EAAWC,EAAsC,CACvDA,aAAkB,SAIxBC,EAAqBD,EAAQ,WAAW,GAAG,UAAU,OACjD,oBACJ,CACJ,CAEO,SAASE,EAAWC,EAAY,CACnC,IAAMC,EAAS,SAAS,eAAeD,CAAE,EAEpCC,GAAQ,UAAU,SAAS,WAAW,GAI3CA,EAAO,UAAU,IAAI,oBAAoB,CAC7C,CAEO,SAASC,IAAa,CACzBA,GAAmB,EACnBA,GAAgB,EAChBA,GAAgB,CACpB,CCZA,IAAMC,GAAY,SAAS,eAAe,YAAY,EAChDC,EAAgBD,IAAW,uBAC7B,cACJ,EAAE,CAAC,EACGE,GAAO,SAAS,eAAe,WAAW,EAE5CC,GAAc,GAElB,SAASC,EAAgBC,EAAmB,CACxC,GAAI,CAACJ,EACD,OAGJ,IAAMK,EAAU,SAAS,eAAe,oBAAoB,EAExDL,IACAA,EAAc,UAAYI,EAAW,SAAW,OAGhDC,IACAA,EAAQ,UAAYD,EAAW,eAAiB,aAExD,CAEA,SAAS,iBAAiB,mBAAoB,UAAY,CACtD,OAAW,CAACE,EAAaC,CAAK,IAAK,OAAO,QAAQC,EAAK,EAAG,CACtD,IAAMC,EAAU,SAAS,eAAeH,CAAW,EAE9CG,IAILC,GAASD,EAASF,CAAK,EAEvBE,EAAQ,iBAAiB,kBAAoBE,GAAM,CAC/C,IAAMC,EAAQD,EACVE,EAAQ,IAIRD,EAAM,OAASE,EAAc,UAC7BF,EAAM,OAASE,EAAc,aAEzBF,EAAM,OAASE,EAAc,SAC7BX,EAAgB,EAAI,EACZY,EAAYN,EAAS,EAAK,GAClCN,EAAgB,EAAK,EAGzBU,EAAQD,EAAM,OAASE,EAAc,WAIrCF,EAAM,OAASE,EAAc,SAC7BF,EAAM,OAASE,EAAc,aAE7BD,EAAQD,EAAM,OAASE,EAAc,SAGzCE,EAAcJ,EAAM,QAAQ,GAAIC,CAAK,EACrCD,EAAM,SAAS,QAASK,GAAOD,EAAcC,GAAI,GAAIJ,CAAK,CAAC,CAC/D,CAAC,EACL,CAEAK,GAAmB,EACnBA,GAAkB,EAClBC,GAAK,EAELjB,GAAc,GAEd,IAAMkB,EAAMnB,IAAM,QAAQ,MAE1B,GAAI,CAACmB,EACD,OAGJ,IAAMd,EAAc,SAAS,eAAec,CAAG,EAE3Cd,GAAeS,EAAYT,CAAW,GACtCH,EAAgB,EAAI,CAE5B,CAAC,EAED,SACK,eAAe,cAAc,GAC5B,iBAAiB,QAAU,GACzBkB,EAAY,EAAE,aAA4B,CAC9C,EAEJpB,IAAM,iBAAiB,kBAAoB,GAAM,CAC7C,GAAI,CAACC,GACD,OAGJ,IAAMoB,EAAK,EAEX,GAAIA,GAAMA,EAAG,SAAU,CACnB,IAAMhB,EAAc,SAAS,eAAegB,EAAG,QAAQ,EACvDnB,EAAgBG,EAAcS,EAAYT,CAAW,EAAI,EAAK,CAClE,CAEA,aAAa,QACTiB,EAAY,IACX,EAAkC,UAAY,EACnD,CACJ,CAAC,EAEDxB,IAAW,iBAAiB,QAAS,IAAM,CACvC,IAAMyB,EAASxB,GAAe,WAAa,MACrCyB,EAAU,SAAS,eAAe,WAAW,GAAG,QAAQ,MAE9D,GAAI,CAACA,EACD,OAGJ,IAAMnB,EAAc,SAAS,eAAemB,CAAO,EAEnD,GAAI,CAACnB,EACD,OAGJ,IAAMoB,EAAWC,EACbrB,EACAkB,EACAA,EAAS,WAAa,WAC1B,EAEArB,EAAgBqB,CAAM,EACtBE,EAAS,QAAST,GAAOD,EAAcC,EAAG,GAAIO,CAAM,CAAC,CACzD,CAAC,EAED,SAAS,eAAe,SAAS,GAAG,iBAAiB,QAAS,IAC1D,OAAO,SAAS,CACZ,IAAK,EACL,KAAM,EACN,SAAU,QACd,CAAC,CACL",
  "names": ["History", "value", "_History_last", "_History_current", "__classPrivateFieldSet", "__classPrivateFieldGet", "TimedQueue", "_TimedQueue_queue", "__classPrivateFieldGet", "items", "item", "front", "clearCallback", "cleared", "index", "q", "cycleData", "element", "data", "values", "dataName", "capitalize", "dataValue", "index", "newValue", "cycleThemes", "themes", "setTheme", "theme", "childIndex", "getParentByClassName", "parentClass", "forceStopAtClass", "includeSelf", "capitalize", "str", "clamp", "value", "min", "max", "join", "strings", "stringToSelector", "queue", "TimedQueue", "initialized", "lastMouseOver", "lastMouseOut", "hide", "menu", "immediate", "item", "show", "parent", "menu", "immediate", "move", "queue", "item", "initialized", "initialize", "hide", "history", "History", "e", "getParentByClassName", "submenu", "lastMouseOver", "lastMouseOut", "submenus", "arrow", "menuRect", "parentRect", "parentMenuRect", "margin", "padding", "left", "top", "queue", "TimedQueue", "initialized", "move", "parent", "tooltip", "inAppBar", "parentRect", "tooltipRect", "padding", "aboveParent", "belowParent", "left", "top", "hide", "immediate", "item", "show", "parentInAppBar", "getParentByClassName", "initialize", "createStyled", "className", "displayElement", "options", "label", "input", "text", "div", "create", "box", "initialize", "checkbox", "selectSegment", "segment", "requireSelect", "allowMulti", "selectedClass", "select", "selected", "initialize", "segmentedButton", "child", "check", "e", "parent", "getParentByClassName", "create", "options", "track", "handle", "createStyled", "initialize", "switchElement", "label", "initialize", "table", "defaultHeading", "e", "sort", "header", "reverse", "rows", "headerRow", "column", "clamp", "childIndex", "sorted", "a", "b", "oldColumn", "fragment", "MaterialState", "MaterialEvent", "type", "source", "MaterialChangeEvent", "oldValue", "newValue", "MaterialToggleEvent", "state", "elements", "getTab", "tabs", "name", "changeTab", "tab", "oldTab", "oldButton", "oldContent", "newButton", "newContent", "MaterialChangeEvent", "initialize", "pages", "buttons", "length", "i", "firstTab", "e", "button", "getParentByClassName", "moveInput", "textField", "input", "hide", "prefix", "rect", "initialize", "container", "e", "lastItem", "createButton", "buttonType", "button", "getId", "prefix", "text", "join", "stringToSelector", "initializeTree", "tree", "itemPrefix", "checkboxes", "element", "child", "fullPrefix", "root", "isRoot", "leaf", "isLeaf", "id", "node", "isChild", "create", "label", "populateTree", "map", "key", "value", "subtree", "toggleCheckboxes", "checkbox", "checked", "elements", "getParentByClassName", "treeClicked", "target", "expand", "MaterialToggleEvent", "MaterialState", "toggleAll", "cascadeChecked", "hasExpanded", "includeChildren", "selector", "initialize", "tree", "initializeTree", "loadExpanded", "toggleAll", "e", "treeClicked", "populate", "map", "populateTree", "toggle", "expand", "button", "cascadeToggled", "elements", "toggled", "initialize", "initializers", "selector", "initializer", "elements", "element", "storageKeys", "trees", "initialize", "hideDialog", "initialize", "hideDialog", "key", "storageKeys", "changeTheme", "themeButton", "theme", "setTheme", "cycleThemes", "buttonText", "storageKeys", "load", "tab", "tabs", "changeTab", "settingsKeys", "i", "key", "element", "toggle", "loadSettings", "toggleStorage", "add", "value", "session", "storage", "cascadeCheckedControl", "cascadeUncheckedControl", "cascadeCollapsedControl", "hideExpandAllControl", "hideScrollToTopControl", "changePageSettings", "hideExpandAll", "hideScrollToTop", "expandAllButton", "scrollToTopButton", "changeTreeSettings", "cascadeChecked", "cascadeToggled", "element", "tree", "initialize", "t", "showDialog", "hideDialog", "saveSettings", "loadSettings", "storageKeys", "toggleStorage", "cascadeToggledValue", "cascadeCheckedValue", "hideDialog", "target", "getParentByClassName", "showDialog", "id", "dialog", "initialize", "fabExpand", "fabExpandIcon", "tabs", "initialized", "changeFabExpand", "expanded", "tooltip", "treeElement", "items", "trees", "element", "populate", "e", "event", "state", "MaterialState", "hasExpanded", "toggleStorage", "el", "initialize", "load", "tab", "changeTheme", "ev", "storageKeys", "expand", "tabName", "elements", "toggleAll"]
}
